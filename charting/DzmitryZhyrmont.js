var hand = 'R';

<html><head>
<title>Tennis Abstract: Dzmitry Zhyrmont Match Results, Splits, and Analysis</title>
<link rel="stylesheet" href="https://www.tennisabstract.com/blue/style.css" type="text/css">
<script type="text/javascript" src="https://www.tennisabstract.com/jquery-1.7.1-min.js"></script>
<script type="text/javascript" src="https://www.tennisabstract.com/jquery.tablesorter.js"></script>
<script type="text/javascript" src="https://www.tennisabstract.com/navbar.js"></script>
<script type="text/javascript" src="https://www.minorleaguesplits.com/tennisabstract/cgi-bin/jsplayers/curr_rank_atp.js"></script>

<script language="JavaScript">
var currentTime = new Date();
var month = currentTime.getMonth() + 1;
var day = currentTime.getDate();
var year = currentTime.getFullYear().toString();
var mm, dd;
if (month < 10) {mm = '0' + month.toString();}
else {mm = month.toString();}
if (day < 10) {dd = '0' + day.toString();}
else {dd = day.toString();}
var today = year + mm + dd;
var one_day=1000*60*60*24;
var nameparam = 'DzmitryZhyrmont';
var prefilters = {};
var opponent="";
var exclude="";
var opp_team="";
var partner="";
var view="";
var keep_loading = 0;
var fullname = 'Dzmitry Zhyrmont';
var lastname = 'Zhyrmont';
var currentrank = 697;
var peakrank = 201;
var peakfirst = 20130722;
var peaklast = 20130722;
var dob = 19890301;
var ht = '';
var hand = 'U';
var backhand = '2';
var country = 'BLR';
var shortlist = 0;
var careerjs = 0;
var active = 1;
var lastdate = 0;
var twitter = '';
var current_dubs = 1355;
var peak_dubs = 281;
var peakfirst_dubs = 20131111;
var liverank = 333;
var chartagg = 0;
var photog = '';
var photog_credit = '';
var photog_link = '';
var itf_id = '100077825';
var atp_id = 'dzmitry-zhyrmont/z248';
var dc_id = '800266470';
var wiki_id = '';
var ychoices=["Time Span", "Last 52", "Career", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006"];
var tchoices=["Event", "All", "Davis Cup", "US Open", "Wimbledon", "Astana CH", "Bangkok CH", "Bergamo CH", "Bratislava CH", "Chengdu CH", "Eskisehir CH", "Fergana CH", "Helsinki CH", "Istanbul CH", "Istanbul2 CH", "Izmir CH", "Jinan CH", "Jonkoping CH", "Karshi CH", "Kazan CH", "Kazan2 CH", "Koblenz CH", "Lille CH", "Moscow", "Nice", "Nottingham", "Nottingham2 CH", "Ostrava CH", "Prague CH", "Prostejov CH", "Recanati CH", "Samarkand CH", "St. Brieuc CH", "St. Petersburg", "St.Petersburg", "Stuttgart", "Tianjin CH", "Tyumen CH", "Vicenza CH", "Wroclaw CH"];
var cchoices=["vs Country", "All", "ARG", "AUS", "AUT", "BAR", "BEL", "BIH", "BLR", "BRA", "BUL", "CAN", "CHI", "CHN", "COL", "CRO", "CZE", "DEN", "ECU", "EGY", "ESP", "EST", "FIN", "FRA", "GBR", "GEO", "GER", "GRE", "HUN", "IND", "IRL", "ISR", "ITA", "JPN", "KAZ", "KGZ", "KOR", "LAT", "LTU", "MDA", "MON", "NED", "NOR", "POL", "POR", "ROU", "RSA", "RUS", "SLO", "SRB", "SUI", "SVK", "SWE", "THA", "TPE", "TUR", "UKR", "URU", "USA", "UZB", "VEN"];
var rchoices=["as Rank", "All"];
var ochoices=["Sam Barry", "Yuki Mochiduki", "Ivan Gakhov", "Jordi Munoz Abreu", "Gijs Brouwer", "Jan Mertl", "Igor Kunitsyn", "Markus Eriksson", "Daniel Cukierman", "Harel Levy", "Yahor Yatsyk", "Robert Varga", "Andriej Kapas", "Juan Manuel Matute", "Edouard Roger Vasselin", "Kento Takeuchi", "Matteo Berrettini", "Dustin Brown", "Artun Klimenka", "Mikhail Elgin", "Andemir Karanashev", "Marcin Gawron", "Richard Muzaev", "Sagadat Ayap", "Hiroki Kondo", "Alexey Vatutin", "Marco Bella", "Baris Erguden", "Franco Skugor", "Jan Satral", "Patrik Fabian", "Marsel Ilhan", "George Tsivadze", "Marco Chiudinelli", "Evgeny Elistratov", "Maxim Kravtsov", "Khumoun Sultanov", "Ivan Liutarevich", "Martin Beran", "Sean Thornley", "Botir Sapaev", "Guillermo Hormazabal", "Jason Jung", "Vugar Aliev", "Dmitri Sitak", "Taavo Roos", "Alexander Vasilenko", "Radu Albot", "Clement Geens", "Benas Majauskas", "Miljan Zekic", "Simeon Ivanov", "Runhao Hua", "Nino Serdarusic", "Frederik Nielsen", "Carl Soderlund", "Ivan Djurdjevic", "David Vega Hernandez", "Juan Lizariturry", "Dominic Thiem", "Peter Torebko", "Vladimir Uzhylovsky", "Mikelis Libietis", "Filip Veger", "Jaroslav Pospisil", "Yaraslau Shyla", "Jozef Kovalik", "Federico Gaio", "Alexander Pavlioutchenkov", "Joachim Bjerke", "Ruan Roelofse", "Daniil Zarichanskyy", "Vladimir Ivanov", "Sarp Agabigun", "Kevin Krawietz", "Alexander Slabinsky", "Djurabek Karimov", "Tristan Samuel Weissborn", "Wishaya Trongcharoenchaikul", "Pablo Santos", "Lloyd Glasspool", "Pavol Cervenak", "Philip Bester", "Anton Manegin", "Tom Jomby", "Yannick Maden", "Laurynas Grigelis", "Andrzej Grusiecki", "Andrei Vasilevski", "Borna Gojo", "Ilya Ivashka", "Ante Pavic", "Vaja Uzakov", "Andrei Levine", "Chan Yeong Oh", "Xander Spong", "Nick Trkulja", "Valentin Dimov", "Todor Enev", "Anton Zaitsev", "Adam Pavlasek", "Franck Pepe", "Ivan Davydov", "Adam Chadaj", "Vitaly Kozyukov", "Riccardo Ghedin", "Batyr Sapaev", "Robin Kern", "Alexey Zakharov", "Jonas Luetjen", "Karol Beck", "Anton Pavlov", "Jeevan Nedunchezhiyan", "Szymon Walkow", "Hunter Callahan", "Patrik Niklas Salminen", "Stefano Napolitano", "Goncalo Pereira", "Hiroki Moriya", "Danjil Braun", "Jonny Omara", "Alexander Perfilov", "David Pichler", "Yan Sabanin", "Nicolas Barrientos", "Markos Kalovelonis", "Julien Dubail", "Vladimir Polyakov", "Jean Marc Werner", "Youssef Hossam", "Neil Pauffley", "Mikhail Ledovskikh", "Patrick Taubert", "Yuki Bhambri", "Aleksandre Metreveli", "Nikola Mektic", "Timo Nieminen", "Alexandr Zotov", "Chuhan Wang", "Chieh Fu Wang", "Ricardo Seritti", "Artem Dubrivnyy", "Andis Juska", "David Sofaer", "Kirill Komarov", "Claudio Fortuna", "Edoardo Eremin", "Stanislav Poplavskyy", "Mikhail Ptukhin", "Laurent Rochette", "Shinta Fujii", "Fred Simonsson", "Romain Arneodo", "Pascal Meis", "Aldin Setkic", "Blaz Kavcic", "Francesco Borgo", "Mohamed Mamoun", "Jui Chen Hung", "Marek Semjan", "Jonathan Mridha", "Hugo Grenier", "Riccardo Stiglich", "Artur Dubinski", "Ti Chen", "Jerzy Janowicz", "Syrym Abdukhalikov", "Dean Obrien", "Andrei Gorban", "Andrei George Daraban", "Daniel Skripnik", "Sergei Krotiouk", "Denis Yevseyev", "Vladyslav Manafov", "Alon Elia", "Patrik Brydolf", "Cem Hizlialp", "Ilija Bozoljac", "Shuichi Sekiguchi", "Konstantin Kravchuk", "Temur Ismailov", "Maxim Ratniuk", "Maxim Dubarenco", "Mikalai Haliak", "Dane Propoggia", "Kristofer Siimar", "Filip Bergevi", "Ilia Shatskiy", "Andrey Kuznetsov", "David Rice", "Sebastian Rieschick", "Edoardo Castagna", "Brydan Klein", "Alexander Bury", "Andrey Kumantsov", "Bulat Galiev", "Laurent Lokoli", "Dae Soung Oh", "Amir Hadad", "Adrien Bossel", "Gerard Granollers", "Ilya Lebedev", "Beka Komakhidze", "Oscar Otte", "Luca Margaroli", "Nikita Mishin", "Johan Nikles", "Edward Seator", "Tak Khunn Wang", "Mikhail Kukushkin", "Daniiar Duldaev", "Claudio Grassi", "Marcus Mansson", "Karen Khachanov", "Zdenek Kolar", "Ze Zhang", "Evgeny Tyurnev", "Jedrzej Zarski", "Chris Anguelov", "Maximilian Neuchrist", "Matej Sabanov", "Dor Belfer", "Sanjar Fayziev", "Liam Broady", "Martin Cuevas", "Nils Langer", "Grigoriy Reytman", "Patrik Rosenholm", "Stephan Gerritsen", "Thomas Oger", "Barkin Yalcinkale", "Edward Corrie", "Andrej Martin", "Saketh Myneni", "Andrei Karatchenia", "Djanibek Orazoliev", "Ruben Bemelmans", "Hiroyasu Ehara", "Stefan Kozlov", "Mateusz Skorek", "Christoffer Solberg", "Luca Vanni", "Wojciech Lutkowski", "Enrique Lopez Perez", "Shane Vinsant", "Kuatbek Abiyev", "Hugo Nys", "Simon Carr", "Stephane Robert", "Alexander Krasnorutskiy", "Diego Sebastian Schwartzman", "Sergey Betov", "Issei Okamura", "Eero Vasa", "Loic Ducourau", "Aslan Karatsev", "Adrian Menendez Maceiras", "Roberto Marcora", "Murad Inoyatov", "Benjamin Balleret", "Jorge Hernando Ruano", "Igor Rud", "Vadym Zrazhevskyy", "Karue Sell", "Grzegorz Panfil", "Maksim Malyshev", "Antal Van Der Duim", "Daniel Kumlin", "Alexandre Folie", "Artem Smirnov", "Giovanni Lapentti", "Kaza Vinayak Sharma", "Aleksandr Nedovyesov", "Dusan Lajovic", "Di Wu", "Mateusz Kowalczyk", "Jung Woong Na", "Aleksei Khomich", "Hendrik Jebens", "Victor Baluda", "Alexander Lobkov", "Jurgen Zopp", "Uladzimir Ignatik", "Kenneth Raisma", "Dennis Novikov", "Hao Zhang", "Piotr Dzikiewicz", "Paul Capdeville", "Fajing Sun", "Chris Eaton", "Flavio Cipolla", "Roman Hassanov", "Henri Laaksonen", "Pierrick Ysern", "Pavel Katliarov", "Tallon Griekspoor", "Denis Matsukevitch", "Liam Caruana", "Liang Chi Huang", "Mikhail Biryukov", "Nikolai Fidirko", "Anton Galkin", "Ivan Sergeyev", "James Marsalek", "Gregoire Barrere", "Dominik Recek", "Peter Lucassen", "Oskars Vaskis", "Yannick Mertens", "Tim Puetz", "Fedor Chervyakov", "Mikhail Lifshits", "Nigmat Shofayziev", "Gleb Alekseenko", "Edan Leshem", "Go Soeda", "Sekou Bangoura", "Zihao Xia", "Arjun Kadhe", "Vitaliy Kachanovskiy", "Jaak Poldma", "Durukan Durmus", "Matteo Viola", "Gleb Bagateliya", "Karim Mohamed Maamoun", "Kristian Lozan", "Vadym Ursu", "Quentin Halys", "Denys Molchanov", "Darian King", "Vladzimir Kruk", "Martins Podzus", "Robert Godlewski", "Zhizhen Zhang", "Bastian Knittel", "Mohamed Safwat", "Egor Gerasimov", "Andrey Golubev", "Michal Przysiezny", "Kamil Capkovic", "Jack Carpenter", "Lorenzo Papasidero", "Anil Yuksel", "Mikhail Balmashev", "Julien Obry", "Dmitry Popko", "Lukas Lacko", "Andrey Rublev", "Igor Smilansky", "Alexander Kudryavtsev", "Evgeny Karlovskiy", "Adrian Sikora", "Giacomo Miccini", "Marat Deviatiarov", "Andrei Mlendea", "Miliaan Niesten", "Michal Schmid", "Mikhail Fufygin", "Cedrik Marcel Stebe", "Timur Khabibulin", "Andrea Vavassori", "Anton Chekhov", "Andrei Plotniy", "Lucas Catarina", "Janicije Sasha Karic", "Kristjan Tamm", "Alexandr Igoshin", "Illya Marchenko", "Deniss Pavlovs", "Blazej Koniusz", "Yann Marti", "Daniel Appelgren", "Dmitry Kalyuzhny", "Pierre Metenier", "Alexander Mozgovoy", "Vitali Reshetnikov", "Andreas Haider Maurer", "Young Seok Kim", "Lukas Ollert"];
var tdates=["20060612", "20070521", "20070618", "20070820", "20070827", "20071015", "20071029", "20071119", "20071126", "20080505", "20080609", "20080616", "20080630", "20080707", "20080804", "20080811", "20080818", "20080825", "20081020", "20081117", "20081124", "20090119", "20090126", "20090202", "20090302", "20090309", "20090406", "20090413", "20090420", "20090713", "20090720", "20090727", "20090803", "20090817", "20091012", "20091019", "20091116", "20091123", "20091130", "20100215", "20100222", "20100315", "20100322", "20100503", "20100510", "20100517", "20100531", "20100607", "20100719", "20100802", "20100809", "20100816", "20100823", "20100830", "20100906", "20101011", "20101018", "20110314", "20110516", "20110530", "20110606", "20110718", "20110725", "20110801", "20110808", "20110815", "20110822", "20110829", "20111114", "20111121", "20111128", "20120109", "20120116", "20120123", "20120220", "20120312", "20120319", "20120416", "20120423", "20120521", "20120528", "20120604", "20120618", "20120709", "20120716", "20120723", "20120806", "20120813", "20120924", "20121001", "20121015", "20121112", "20121119", "20130114", "20130121", "20130218", "20130225", "20130318", "20130415", "20130422", "20130506", "20130610", "20130624", "20130701", "20130708", "20130715", "20130722", "20130812", "20130826", "20130909", "20130916", "20130923", "20131014", "20131021", "20131111", "20131118", "20140106", "20140113", "20140217", "20140224", "20140324", "20140414", "20140421", "20140519", "20140616", "20140728", "20140804", "20140811", "20140818", "20140915", "20140922", "20141013", "20141020", "20141027", "20141103", "20150119", "20150126", "20150216", "20150223", "20150316", "20150406", "20150413", "20150504", "20150511", "20150518", "20150608", "20150621", "20150706", "20150720", "20150727", "20150810", "20150831", "20150914", "20150921", "20151012", "20151019", "20151026", "20151102", "20151123", "20160104", "20160111", "20160208", "20160215", "20160307", "20160314", "20160328", "20160425", "20160516", "20160523", "20160530", "20160606", "20160613", "20160704", "20160718", "20160725", "20160808", "20160815", "20160822", "20160829", "20160905", "20160919", "20160926", "20161003", "20161017", "20161024", "20161031", "20161107", "20161114", "20170109", "20170116", "20170123", "20170130", "20170320", "20170327", "20170417", "20170424", "20170508", "20170515", "20170529", "20170605", "20170626", "20170703", "20170710", "20170717", "20170731", "20170807", "20170814", "20170821", "20170915", "20170925", "20171002", "20171106", "20180101", "20180108", "20180202", "20180212", "20180219", "20180305", "20180312", "20180319", "20180409", "20180416", "20180423", "20180528", "20180604", "20180618", "20180716", "20180730", "20180806"];
var vranks=["6", "53", "65", "77", "90", "94", "97", "101", "104", "112", "115", "116", "124", "128", "132", "134", "138", "141", "145", "146", "148", "154", "155", "159", "161", "165", "171", "173", "176", "179", "181", "183", "191", "194", "197", "201", "205", "206", "209", "210", "211", "212", "213", "216", "220", "227", "232", "239", "241", "243", "247", "249", "251", "256", "257", "258", "260", "261", "262", "264", "265", "270", "278", "280", "281", "282", "284", "288", "289", "290", "291", "293", "297", "298", "302", "304", "305", "306", "309", "314", "320", "322", "327", "328", "330", "331", "332", "334", "335", "337", "341", "347", "350", "354", "355", "357", "359", "361", "367", "373", "374", "375", "378", "379", "380", "381", "382", "383", "384", "390", "400", "402", "404", "406", "407", "413", "414", "417", "419", "421", "423", "425", "426", "427", "428", "430", "435", "439", "441", "444", "445", "447", "449", "455", "456", "457", "458", "462", "465", "469", "476", "477", "478", "479", "480", "482", "483", "486", "488", "491", "496", "498", "499", "502", "506", "507", "509", "510", "511", "515", "516", "517", "518", "519", "521", "523", "524", "526", "528", "530", "531", "532", "534", "535", "536", "537", "542", "543", "546", "547", "548", "550", "551", "557", "558", "559", "561", "562", "564", "565", "567", "568", "569", "574", "576", "577", "579", "583", "590", "592", "593", "596", "597", "598", "600", "601", "603", "607", "609", "610", "616", "618", "619", "623", "625", "626", "627", "628", "630", "632", "634", "636", "637", "638", "643", "647", "651", "663", "665", "668", "674", "676", "682", "687", "690", "691", "696", "697", "699", "701", "705", "706", "707", "716", "717", "718", "719", "720", "724", "728", "729", "730", "737", "738", "741", "745", "746", "747", "749", "750", "751", "755", "759", "763", "766", "771", "775", "779", "785", "790", "793", "798", "800", "803", "806", "808", "813", "819", "820", "823", "824", "825", "829", "832", "844", "847", "850", "852", "859", "860", "862", "863", "865", "866", "869", "870", "880", "882", "892", "893", "894", "897", "900", "901", "902", "905", "924", "926", "935", "939", "940", "941", "949", "950", "954", "956", "959", "961", "963", "973", "986", "994", "1000", "1005", "1006", "1007", "1008", "1010", "1016", "1026", "1032", "1035", "1042", "1050", "1051", "1053", "1055", "1057", "1059", "1060", "1063", "1075", "1087", "1096", "1101", "1102", "1106", "1118", "1121", "1131", "1134", "1142", "1145", "1150", "1157", "1158", "1163", "1168", "1177", "1184", "1191", "1204", "1208", "1222", "1225", "1245", "1253", "1256", "1257", "1278", "1286", "1293", "1300", "1313", "1314", "1351", "1359", "1379", "1382", "1383", "1395", "1415", "1418", "1423", "1453", "1474", "1485", "1490", "1495", "1543", "1548", "1553", "1573", "1586", "1588", "1615", "1638", "1664", "1667", "1686", "1721", "1752", "1766", "1825", "1829", "1866", "1876", "1877", "1935", "2086", "2103", "2120", "2122"];
var playernews=[];
var upcoming = "";
var matchmx = [["20180806", "Jinan CH", "Hard", "C", "L", "429", "5", "", "Q1", "0-3 RET", "3", "Issei Okamura", "860", "", "", "U", "26.1957563313", "", "JPN", "0", "28", "0", "0", "9", "5", "4", "4", "2", "0", "0", "0", "2", "16", "9", "3", "4", "1", "3", "4", "", "", "", "", "2018-7746-227", "", "", ""],
          ["20180730", "Chengdu CH", "Hard", "C", "L", "426", "6", "", "Q2", "6-1 6-3", "3", "Tak Khunn Wang", "558", "", "", "R", "26.7980835044", "", "FRA", "0", "61", "4", "2", "48", "34", "18", "5", "8", "2", "6", "2", "1", "36", "18", "18", "14", "8", "0", "0", "2", "", "", "", "2018-7772-245", "", "", ""],
          ["20180716", "Astana CH", "Hard", "C", "L", "422", "", "LL", "R32", "6-2 3-3 RET", "3", "Arjun Kadhe", "361", "", "LL", "R", "24.5201916496", "", "IND", "0", "54", "0", "2", "36", "18", "8", "3", "7", "0", "6", "1", "0", "42", "29", "17", "6", "7", "2", "6", "2", "", "", "", "2018-3618-276", "", "1", "1"],
          ["20180716", "Astana CH", "Hard", "C", "L", "422", "5", "", "Q3", "3-6 6-3 7-5", "3", "Hugo Grenier", "341", "1", "", "U", "22.3134839151", "", "FRA", "0", "137", "1", "4", "104", "65", "41", "19", "15", "10", "16", "13", "8", "94", "60", "43", "11", "15", "5", "10", "", "", "", "", "2018-3618-254", "", "", ""],
          ["20180716", "Astana CH", "Hard", "C", "W", "422", "5", "", "Q2", "6-3 7-5", "3", "Alexander Pavlioutchenkov", "1588", "", "", "R", "32.6160164271", "", "RUS", "0", "95", "4", "2", "56", "29", "22", "18", "11", "1", "3", "2", "7", "57", "30", "22", "10", "10", "0", "4", "2", "", "", "", "2018-3618-249", "", "", ""],
          ["20180618", "Fergana CH", "Hard", "C", "L", "406", "", "", "R32", "6-4 6-0", "3", "Saketh Myneni", "447", "", "Q", "R", "30.6639288159", "", "IND", "0", "59", "2", "1", "52", "21", "11", "15", "8", "3", "7", "4", "0", "39", "25", "22", "10", "8", "0", "0", "2", "", "", "", "2018-0603-279", "", "1", "1"],
          ["20180604", "Uzbekistan F4", "Hard", "S", "L", "347", "2", "", "R32", "6-3 7-6(6)", "3", "Anil Yuksel", "803", "", "", "L", "28.0246406571", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-UZB-04A-2018-016", "", "1", "1"],
          ["20180528", "Uzbekistan F3", "Hard", "S", "L", "347", "2", "", "R32", "6-3 4-6 6-4", "3", "Mikhail Fufygin", "583", "", "", "U", "28.0410677618", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-UZB-03A-2018-016", "", "1", "1"],
          ["20180423", "Uzbekistan F2", "Hard", "S", "L", "348", "3", "", "QF", "3-1 RET", "3", "Yaraslau Shyla", "444", "", "", "R", "25.1334702259", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-UZB-02A-2018-027", "", "3", "3"],
          ["20180423", "Uzbekistan F2", "Hard", "S", "W", "348", "3", "", "R16", "7-5 6-3", "3", "Markos Kalovelonis", "741", "", "", "R", "23.9315537303", "", "GRE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-UZB-02A-2018-022", "", "2", "2"],
          ["20180423", "Uzbekistan F2", "Hard", "S", "W", "348", "3", "", "R32", "2-0 RET", "3", "Ivan Liutarevich", "1314", "", "", "U", "22.1711156742", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-UZB-02A-2018-012", "", "1", "1"],
          ["20180416", "Uzbekistan F1", "Hard", "S", "L", "360", "", "", "QF", "6-2 4-6 6-2", "3", "Yaraslau Shyla", "444", "7", "", "R", "25.1143052704", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-UZB-01A-2018-026", "", "3", "3"],
          ["20180416", "Uzbekistan F1", "Hard", "S", "W", "360", "", "", "R16", "6-2 6-1", "3", "Aleksei Khomich", "1177", "", "", "U", "21.2621492129", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-UZB-01A-2018-019", "", "2", "2"],
          ["20180416", "Uzbekistan F1", "Hard", "S", "W", "360", "", "", "R32", "6-2 6-1", "3", "Alexander Pavlioutchenkov", "1543", "", "Q", "R", "32.3668720055", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-UZB-01A-2018-005", "", "1", "1"],
          ["20180409", "Kazakhstan F3", "Clay", "S", "L", "359", "2", "WC", "SF", "7-5 5-7 7-5", "3", "Denis Yevseyev", "551", "", "", "U", "24.8815879535", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-KAZ-03A-2018-030", "", "", ""],
          ["20180409", "Kazakhstan F3", "Clay", "S", "W", "359", "2", "WC", "QF", "3-6 6-4 6-1", "3", "Artem Dubrivnyy", "665", "", "", "U", "19.1868583162", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-KAZ-03A-2018-028", "", "3", "3"],
          ["20180409", "Kazakhstan F3", "Clay", "S", "W", "359", "2", "WC", "R16", "6-3 1-6 6-3", "3", "Johan Nikles", "1057", "", "", "R", "21.0458590007", "", "SUI", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-03A-2018-024", "", "2", "2"],
          ["20180409", "Kazakhstan F3", "Clay", "S", "W", "359", "2", "WC", "R32", "6-1 6-2", "3", "Timur Khabibulin", "785", "", "", "R", "22.6858316222", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-03A-2018-016", "", "1", "1"],
          ["20180319", "Lille CH", "Hard", "C", "L", "346", "6", "", "Q2", "6-4 6-1", "3", "Gregoire Barrere", "406", "", "", "R", "24.0848733744", "183", "FRA", "0", "56", "6", "2", "51", "29", "16", "10", "8", "1", "5", "10", "0", "45", "30", "22", "11", "9", "1", "2", "2", "", "", "", "2018-7874-243", "", "", ""],
          ["20180319", "Lille CH", "Hard", "C", "W", "346", "6", "", "Q1", "3-6 7-5 7-6(1)", "3", "Simon Carr", "870", "", "", "R", "18.3627652293", "", "IRL", "0", "143", "9", "4", "102", "59", "40", "22", "16", "8", "13", "5", "7", "112", "66", "42", "22", "17", "8", "13", "2", "", "", "", "2018-7874-227", "", "", ""],
          ["20180312", "Russia F3", "Hard", "S", "L", "377", "2", "", "R16", "7-6(3) 4-6 7-5", "3", "Alexey Zakharov", "1313", "", "", "R", "17.8699520876", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-RUS-03A-2018-024", "", "2", "2"],
          ["20180312", "Russia F3", "Hard", "S", "W", "377", "2", "", "R32", "6-1 6-4", "3", "Mikalai Haliak", "1053", "", "", "R", "19.5564681725", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-RUS-03A-2018-016", "", "1", "1"],
          ["20180305", "Russia F2", "Hard", "S", "W", "377", "", "", "F", "6-1 3-0 RET", "3", "Evgeny Tyurnev", "381", "2", "", "U", "20.9062286105", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-RUS-02A-2018-031", "", "", ""],
          ["20180305", "Russia F2", "Hard", "S", "W", "377", "", "", "SF", "6-2 6-2", "3", "Yaraslau Shyla", "426", "", "", "R", "24.9993155373", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-RUS-02A-2018-029", "", "", ""],
          ["20180305", "Russia F2", "Hard", "S", "W", "377", "", "", "QF", "6-1 6-7(2) 6-3", "3", "Vadym Ursu", "894", "", "", "R", "21.1718001369", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-RUS-02A-2018-025", "", "3", "3"],
          ["20180305", "Russia F2", "Hard", "S", "W", "377", "", "", "R16", "6-2 7-6(4)", "3", "Bulat Galiev", "", "", "", "U", "20.3832991102", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-RUS-02A-2018-017", "", "2", "2"],
          ["20180305", "Russia F2", "Hard", "S", "W", "377", "", "", "R32", "7-5 6-2", "3", "Maxim Ratniuk", "844", "", "", "U", "21.8507871321", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-RUS-02A-2018-001", "", "1", "1"],
          ["20180219", "Kazakhstan F2", "Hard", "S", "L", "384", "", "", "QF", "6-4 6-2", "3", "Vladyslav Manafov", "496", "8", "", "U", "24.8295687885", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-KAZ-02A-2018-026", "", "3", "3"],
          ["20180219", "Kazakhstan F2", "Hard", "S", "W", "384", "", "", "R16", "6-2 7-6(3)", "3", "Kristian Lozan", "609", "", "", "U", "19.318275154", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-02A-2018-019", "", "2", "2"],
          ["20180219", "Kazakhstan F2", "Hard", "S", "W", "384", "", "", "R32", "5-7 6-2 6-4", "3", "Matej Sabanov", "813", "", "Q", "R", "25.6536618754", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-02A-2018-005", "", "1", "1"],
          ["20180212", "Kazakhstan F1", "Hard", "S", "L", "384", "3", "", "R16", "6-3 6-1", "3", "Lukas Ollert", "728", "", "", "R", "25.2156057495", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-01A-2018-022", "", "2", "2"],
          ["20180212", "Kazakhstan F1", "Hard", "S", "W", "384", "3", "", "R32", "3-6 6-3 6-1", "3", "Anton Chekhov", "1573", "", "", "R", "25.4099931554", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-KAZ-01A-2018-012", "", "1", "1"],
          ["20180202", "Davis Cup G1 R1: AUT vs BLR", "Clay", "D", "L", "389", "", "", "RR", "6-3 6-3", "3", "Dominic Thiem", "6", "", "", "R", "24.4052019165", "185", "AUT", "0", "73", "4", "2", "58", "31", "23", "11", "9", "1", "4", "5", "1", "56", "38", "28", "12", "9", "2", "2", "1", "", "", "", "2018-M-DC-2018-G1-EPA-M-AUT-BLR-01-002", "", "", ""],
          ["20180108", "USA F2", "Hard", "S", "L", "377", "5", "", "R32", "7-6(3) 6-2", "3", "Borna Gojo", "663", "", "", "U", "19.8631074606", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2018-M-FU-USA-02A-2018-004", "", "1", "1"],
          ["20180101", "USA F1", "Hard", "S", "L", "377", "", "", "R32", "6-3 7-5", "3", "Karue Sell", "691", "", "Q", "R", "24.1341546886", "", "BRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2018-M-FU-USA-01A-2018-009", "", "1", "1"],
          ["20171106", "Bratislava CH", "Hard", "C", "L", "363", "5", "", "Q3", "6-7(1) 6-3 6-4", "3", "Franco Skugor", "334", "3", "", "R", "30.13004791", "193", "CRO", "0", "142", "9", "0", "102", "65", "47", "16", "15", "10", "14", "16", "1", "94", "66", "48", "14", "16", "5", "7", "2", "", "", "", "2017-0444-252", "", "", ""],
          ["20171106", "Bratislava CH", "Hard", "C", "W", "363", "5", "", "Q2", "6-3 2-2 RET", "3", "Denys Molchanov", "559", "", "", "R", "30.47775496", "", "UKR", "0", "48", "3", "1", "36", "27", "22", "6", "7", "0", "0", "2", "3", "40", "27", "18", "9", "6", "2", "3", "2", "", "", "", "2017-0444-245", "", "", ""],
          ["20171106", "Bratislava CH", "Hard", "C", "W", "363", "5", "", "Q1", "1-6 6-4 7-6(5)", "3", "Mikhail Elgin", "847", "", "", "R", "36.06297057", "183", "RUS", "0", "104", "4", "0", "94", "61", "42", "16", "15", "7", "11", "17", "1", "79", "57", "43", "10", "14", "1", "3", "", "", "", "", "2017-0444-231", "", "", ""],
          ["20171002", "Sweden F4", "Hard", "S", "L", "347", "7", "", "R16", "6-3 3-6 7-5", "3", "Patrik Brydolf", "900", "", "Q", "R", "25.8480492813", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-SWE-04A-2017-020", "", "2", "2"],
          ["20171002", "Sweden F4", "Hard", "S", "W", "347", "7", "", "R32", "6-4 6-2", "3", "Filip Bergevi", "1150", "", "", "R", "", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-SWE-04A-2017-008", "", "1", "1"],
          ["20170925", "Sweden F3", "Hard", "S", "L", "350", "4", "", "F", "7-6(5) 6-4", "3", "Tallon Griekspoor", "298", "", "", "R", "21.2320328542", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-SWE-03A-2017-031", "", "", ""],
          ["20170925", "Sweden F3", "Hard", "S", "W", "350", "4", "", "SF", "6-4 6-4", "3", "Fred Simonsson", "755", "", "", "R", "22.8281998631", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-SWE-03A-2017-030", "", "", ""],
          ["20170925", "Sweden F3", "Hard", "S", "W", "350", "4", "", "QF", "6-7(5) 7-5 6-0", "3", "Igor Smilansky", "564", "", "", "R", "22.5023956194", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-SWE-03A-2017-027", "", "3", "3"],
          ["20170925", "Sweden F3", "Hard", "S", "W", "350", "4", "", "R16", "6-2 6-3", "3", "Daniel Appelgren", "950", "", "", "R", "21.3880903491", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-SWE-03A-2017-022", "", "2", "2"],
          ["20170925", "Sweden F3", "Hard", "S", "W", "350", "4", "", "R32", "6-3 6-2", "3", "Kenneth Raisma", "716", "", "", "L", "19.4798083504", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-SWE-03A-2017-012", "", "1", "1"],
          ["20170915", "Davis Cup WG PO: SUI vs BLR", "Hard", "D", "L", "333", "", "", "RR", "6-3 4-6 6-4 6-3", "5", "Marco Chiudinelli", "262", "", "", "R", "36.0027378508", "185", "SUI", "0", "168", "9", "3", "132", "66", "45", "31", "19", "8", "14", "5", "2", "106", "66", "49", "23", "19", "6", "9", "2", "", "", "", "2017-M-DC-2017-WG-PO-SUI-BLR-01-002", "", "", ""],
          ["20170915", "Davis Cup WG PO: SUI vs BLR", "Hard", "D", "L", "333", "", "", "RR", "6-2 6-2 5-7 6-2", "5", "Henri Laaksonen", "115", "", "", "R", "25.4483230664", "", "SUI", "0", "155", "3", "9", "129", "78", "53", "19", "18", "17", "23", "11", "11", "111", "66", "53", "24", "18", "3", "4", "2", "", "", "", "2017-M-DC-2017-WG-PO-SUI-BLR-01-004", "", "", ""],
          ["20170821", "Belarus F3", "Hard", "S", "W", "341", "2", "", "F", "7-6(4) 6-2", "3", "Hugo Grenier", "414", "5", "", "U", "21.4127310062", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2017-M-FU-BLR-03A-2017-031", "", "", ""],
          ["20170821", "Belarus F3", "Hard", "S", "W", "341", "2", "", "SF", "6-3 6-2", "3", "Yaraslau Shyla", "375", "3", "", "R", "24.462696783", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-BLR-03A-2017-030", "", "", ""],
          ["20170821", "Belarus F3", "Hard", "S", "W", "341", "2", "", "QF", "6-3 2-6 6-4", "3", "Lucas Catarina", "449", "6", "", "R", "20.9856262834", "", "MON", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-BLR-03A-2017-028", "", "3", "3"],
          ["20170821", "Belarus F3", "Hard", "S", "W", "341", "2", "", "R16", "7-6(5) 4-6 6-4", "3", "George Tsivadze", "954", "", "", "U", "24.6324435318", "", "GEO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-BLR-03A-2017-024", "", "2", "2"],
          ["20170821", "Belarus F3", "Hard", "S", "W", "341", "2", "", "R32", "6-7(1) 6-3 7-5", "3", "Khumoun Sultanov", "961", "", "", "U", "18.81724846", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-BLR-03A-2017-016", "", "1", "1"],
          ["20170814", "Belarus F2", "Hard", "S", "L", "319", "2", "", "F", "6-3 6-3", "3", "Marsel Ilhan", "262", "1", "", "R", "30.1765913758", "190", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2017-M-FU-BLR-02A-2017-031", "", "", ""],
          ["20170814", "Belarus F2", "Hard", "S", "W", "319", "2", "", "SF", "3-1 RET", "3", "Marat Deviatiarov", "564", "", "", "R", "23.3210130048", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-BLR-02A-2017-030", "", "", ""],
          ["20170814", "Belarus F2", "Hard", "S", "W", "319", "2", "", "QF", "6-3 6-0", "3", "Lloyd Glasspool", "499", "6", "", "U", "23.7344284736", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-BLR-02A-2017-028", "", "3", "3"],
          ["20170814", "Belarus F2", "Hard", "S", "W", "319", "2", "", "R16", "6-2 2-0 RET", "3", "Nigmat Shofayziev", "1667", "", "Q", "R", "24.1232032854", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-BLR-02A-2017-024", "", "2", "2"],
          ["20170814", "Belarus F2", "Hard", "S", "W", "319", "2", "", "R32", "6-4 7-6(4)", "3", "Denis Yevseyev", "546", "", "", "U", "24.2299794661", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-BLR-02A-2017-016", "", "1", "1"],
          ["20170807", "Jinan CH", "Hard", "C", "L", "333", "", "", "R16", "7-6(5) 6-7(2) 7-5", "3", "Kento Takeuchi", "462", "", "Q", "L", "29.63449692", "", "JPN", "0", "166", "8", "5", "120", "81", "57", "23", "18", "5", "8", "9", "2", "124", "90", "65", "20", "18", "5", "7", "", "", "", "1", "2017-7746-290", "", "2", "2"],
          ["20170807", "Jinan CH", "Hard", "C", "W", "333", "", "", "R32", "7-6(6) 6-2", "3", "Hiroki Moriya", "210", "8", "", "R", "26.80903491", "", "JPN", "0", "103", "4", "0", "87", "55", "34", "15", "10", "8", "11", "3", "3", "74", "46", "31", "7", "10", "4", "9", "2", "", "", "0", "2017-7746-278", "", "1", "1"],
          ["20170731", "Chengdu CH", "Hard", "C", "L", "333", "", "", "R32", "7-5 6-1", "3", "Di Wu", "220", "8", "", "R", "25.87816564", "", "CHN", "0", "89", "10", "2", "73", "42", "28", "11", "9", "14", "18", "3", "3", "66", "34", "22", "21", "10", "6", "7", "2", "", "", "1", "2017-7772-273", "", "1", "1"],
          ["20170717", "Astana CH", "Hard", "C", "L", "319", "", "", "R32", "6-2 1-6 6-3", "3", "Shuichi Sekiguchi", "354", "", "", "R", "26.00684463", "", "JPN", "0", "93", "4", "4", "78", "43", "28", "19", "12", "3", "6", "2", "1", "78", "48", "33", "18", "12", "9", "11", "2", "", "", "0", "2017-3618-275", "", "1", "1"],
          ["20170710", "China F12", "Hard", "S", "L", "339", "3", "", "QF", "6-4 7-6(4)", "3", "Wishaya Trongcharoenchaikul", "619", "", "", "R", "22.2559890486", "", "THA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-CHN-12A-2017-027", "", "3", "3"],
          ["20170710", "China F12", "Hard", "S", "W", "339", "3", "", "R16", "6-3 6-4", "3", "Zihao Xia", "729", "", "", "U", "20.4407939767", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2017-M-FU-CHN-12A-2017-022", "", "2", "2"],
          ["20170710", "China F12", "Hard", "S", "W", "339", "3", "", "R32", "7-6(5) 6-3", "3", "Jui Chen Hung", "866", "", "", "R", "27.3593429158", "", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-CHN-12A-2017-012", "", "1", "1"],
          ["20170703", "China F11", "Hard", "S", "L", "339", "4", "", "SF", "6-4 3-0 RET", "3", "Zhizhen Zhang", "718", "", "", "U", "20.7118412047", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-CHN-11A-2017-029", "", "", ""],
          ["20170703", "China F11", "Hard", "S", "W", "339", "4", "", "QF", "6-4 5-7 6-4", "3", "Fajing Sun", "427", "5", "", "U", "20.7474332649", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-CHN-11A-2017-026", "", "3", "3"],
          ["20170703", "China F11", "Hard", "S", "W", "339", "4", "", "R16", "6-4 6-4", "3", "Runhao Hua", "", "", "Q", "R", "21.325119781", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-CHN-11A-2017-019", "", "2", "2"],
          ["20170703", "China F11", "Hard", "S", "W", "339", "4", "", "R32", "6-4 6-0", "3", "Chuhan Wang", "561", "", "", "R", "25.3552361396", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-CHN-11A-2017-005", "", "1", "1"],
          ["20170626", "Hong Kong F2", "Hard", "S", "L", "334", "2", "", "R16", "6-1 6-4", "3", "Yuki Mochiduki", "1102", "", "", "U", "19.5893223819", "", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-HKG-04A-2017-024", "", "2", "2"],
          ["20170626", "Hong Kong F2", "Hard", "S", "W", "334", "2", "", "R32", "6-1 7-6(5)", "3", "Shinta Fujii", "1145", "", "Q", "U", "28.59137577", "", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2017-M-FU-HKG-04A-2017-016", "", "1", "1"],
          ["20170605", "Uzbekistan F4", "Hard", "S", "W", "377", "4", "", "F", "7-6(6) 6-3", "3", "Mikhail Fufygin", "859", "", "", "U", "27.0444900753", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-UZB-04A-2017-031", "", "", ""],
          ["20170605", "Uzbekistan F4", "Hard", "S", "W", "377", "4", "", "SF", "7-5 6-1", "3", "Sanjar Fayziev", "306", "1", "", "U", "22.8336755647", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-UZB-04A-2017-029", "", "", ""],
          ["20170605", "Uzbekistan F4", "Hard", "S", "W", "377", "4", "", "QF", "2-6 7-5 6-2", "3", "Youssef Hossam", "564", "8", "", "U", "18.9869952088", "", "EGY", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-UZB-04A-2017-026", "", "3", "3"],
          ["20170605", "Uzbekistan F4", "Hard", "S", "W", "377", "4", "", "R16", "6-2 6-2", "3", "Mikalai Haliak", "1191", "", "", "R", "18.7898699521", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-UZB-04A-2017-019", "", "2", "2"],
          ["20170605", "Uzbekistan F4", "Hard", "S", "W", "377", "4", "", "R32", "6-2 6-1", "3", "Botir Sapaev", "", "", "Q", "U", "25.9028062971", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-UZB-04A-2017-005", "", "1", "1"],
          ["20170529", "Uzbekistan F3", "Hard", "S", "L", "377", "4", "", "SF", "6-1 7-6(3)", "3", "Sanjar Fayziev", "306", "1", "", "U", "22.8336755647", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2017-M-FU-UZB-03A-2017-029", "", "", ""],
          ["20170529", "Uzbekistan F3", "Hard", "S", "W", "377", "4", "", "QF", "3-6 6-1 6-4", "3", "Temur Ismailov", "419", "5", "", "R", "22.3709787817", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-UZB-03A-2017-026", "", "3", "3"],
          ["20170529", "Uzbekistan F3", "Hard", "S", "W", "377", "4", "", "R16", "6-2 6-1", "3", "Sagadat Ayap", "1638", "", "Q", "U", "22.0123203285", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-UZB-03A-2017-019", "", "2", "2"],
          ["20170529", "Uzbekistan F3", "Hard", "S", "W", "377", "4", "", "R32", "6-2 1-2 RET", "3", "Kaza Vinayak Sharma", "1222", "", "", "R", "26.1711156742", "", "IND", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-UZB-03A-2017-005", "", "1", "1"],
          ["20170515", "Samarkand CH", "Clay", "C", "L", "362", "5", "", "Q1", "6-3 6-4", "3", "Denis Yevseyev", "746", "", "", "U", "23.98083504", "", "KAZ", "0", "63", "1", "2", "63", "32", "21", "13", "9", "4", "8", "2", "3", "55", "24", "20", "18", "10", "2", "4", "", "", "", "", "2017-0447-227", "", "", ""],
          ["20170508", "Karshi CH", "Hard", "C", "L", "361", "", "", "R32", "6-2 7-6(7)", "3", "Karim Mohamed Maamoun", "280", "", "", "R", "26.0807666", "", "EGY", "0", "110", "4", "2", "85", "52", "34", "17", "10", "7", "10", "6", "1", "76", "50", "37", "16", "10", "4", "5", "2", "20170508-M-Karshi_CH-R32-Dzmitry_Zhyrmont-Karim_Mohamed_Maamoun.html", "", "0", "2017-3967-284", "", "1", "1"],
          ["20170424", "Uzbekistan F2", "Hard", "S", "L", "368", "5", "", "R16", "6-4 6-0", "3", "Vladimir Ivanov", "444", "", "", "R", "30.0396988364", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-UZB-02A-2017-020", "", "2", "2"],
          ["20170424", "Uzbekistan F2", "Hard", "S", "W", "368", "5", "", "R32", "6-7(3) 7-5 6-4", "3", "Richard Muzaev", "793", "", "", "R", "25.0924024641", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-UZB-02A-2017-008", "", "1", "1"],
          ["20170417", "Uzbekistan F1", "Hard", "S", "L", "366", "5", "", "R16", "6-3 2-6 6-2", "3", "Alexander Lobkov", "720", "", "", "R", "26.5270362765", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-UZB-01A-2017-023", "", "2", "2"],
          ["20170417", "Uzbekistan F1", "Hard", "S", "W", "366", "5", "", "R32", "6-4 6-2", "3", "Grigoriy Reytman", "", "", "Q", "U", "21.8179329227", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-UZB-01A-2017-013", "", "1", "1"],
          ["20170327", "Greece F4", "Hard", "S", "L", "361", "3", "", "R16", "6-7(3) 6-3 2-0 RET", "3", "Liam Caruana", "1222", "", "Q", "U", "19.1567419576", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-GRE-04A-2017-019", "", "2", "2"],
          ["20170327", "Greece F4", "Hard", "S", "W", "361", "3", "", "R32", "6-2 6-3", "3", "Martin Beran", "790", "", "", "R", "21.311430527", "", "CAN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-GRE-04A-2017-005", "", "1", "1"],
          ["20170320", "Greece F3", "Hard", "S", "L", "361", "4", "", "QF", "6-3 4-6 7-5", "3", "Jaroslav Pospisil", "425", "7", "", "R", "36.1067761807", "", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2017-M-FU-GRE-03A-2017-027", "", "3", "3"],
          ["20170320", "Greece F3", "Hard", "S", "W", "361", "4", "", "R16", "6-7(4) 6-4 6-4", "3", "Jonny Omara", "502", "", "", "R", "22.0506502396", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2017-M-FU-GRE-03A-2017-022", "", "2", "2"],
          ["20170320", "Greece F3", "Hard", "S", "W", "361", "4", "", "R32", "6-3 6-7(5) 6-3", "3", "Hunter Callahan", "897", "", "Q", "R", "24.2436687201", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2017-M-FU-GRE-03A-2017-012", "", "1", "1"],
          ["20170130", "Kazakhstan F2", "Hard", "S", "L", "343", "4", "", "R32", "7-6(5) 6-1", "3", "Andriej Kapas", "476", "", "", "R", "27.4715947981", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-KAZ-02A-2017-012", "", "1", "1"],
          ["20170123", "Kazakhstan F1", "Hard", "S", "L", "349", "4", "", "R16", "6-2 6-4", "3", "David Pichler", "610", "", "", "R", "20.9089664613", "", "AUT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2017-M-FU-KAZ-01A-2017-022", "", "2", "2"],
          ["20170123", "Kazakhstan F1", "Hard", "S", "W", "349", "4", "", "R32", "6-3 6-3", "3", "Ivan Davydov", "806", "", "Q", "R", "20.2464065708", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-KAZ-01A-2017-012", "", "1", "1"],
          ["20170116", "Koblenz CH", "Hard", "C", "L", "349", "", "", "Q2", "5-7 6-0 6-3", "3", "Adrien Bossel", "488", "", "", "L", "30.05338809", "", "SUI", "0", "103", "8", "1", "80", "60", "35", "11", "13", "4", "9", "4", "5", "82", "46", "34", "19", "14", "4", "6", "2", "", "", "", "2017-7652-243", "", "", ""],
          ["20170116", "Koblenz CH", "Hard", "C", "W", "349", "", "", "Q1", "7-5 6-3", "3", "Sam Barry", "281", "5", "", "R", "24.97193703", "", "IRL", "0", "93", "3", "1", "59", "50", "40", "6", "11", "3", "3", "3", "1", "64", "43", "29", "12", "10", "4", "6", "2", "", "", "", "2017-7652-227", "", "", ""],
          ["20170109", "Germany F1", "Carpet", "S", "L", "321", "2", "", "SF", "7-5 6-4", "3", "Yaraslau Shyla", "519", "4", "", "R", "23.8494182067", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-GER-01A-2017-030", "", "", ""],
          ["20170109", "Germany F1", "Carpet", "S", "W", "321", "2", "", "QF", "6-2 6-4", "3", "Oscar Otte", "523", "5", "", "R", "23.485284052", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2017-M-FU-GER-01A-2017-028", "", "3", "3"],
          ["20170109", "Germany F1", "Carpet", "S", "W", "321", "2", "", "R16", "7-5 6-4", "3", "Hendrik Jebens", "1876", "", "WC", "U", "21.4236824093", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2017-M-FU-GER-01A-2017-024", "", "2", "2"],
          ["20170109", "Germany F1", "Carpet", "S", "W", "321", "2", "", "R32", "6-2 6-1", "3", "Martins Podzus", "793", "", "Q", "R", "22.5325119781", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2017-M-FU-GER-01A-2017-016", "", "1", "1"],
          ["20161114", "Finland F4", "Hard", "S", "L", "324", "2", "", "QF", "6-3 5-7 7-5", "3", "Nino Serdarusic", "498", "8", "", "U", "19.9206023272", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2016-M-FU-FIN-04A-2016-028", "", "3", "3"],
          ["20161114", "Finland F4", "Hard", "S", "W", "324", "2", "", "R16", "1-6 6-3 6-2", "3", "Vitaly Kozyukov", "592", "", "", "R", "22.4531143053", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-FIN-04A-2016-024", "", "2", "2"],
          ["20161114", "Finland F4", "Hard", "S", "W", "324", "2", "", "R32", "6-3 6-3", "3", "Eero Vasa", "1158", "", "WC", "U", "", "", "FIN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-FIN-04A-2016-016", "", "1", "1"],
          ["20161107", "Estonia F4", "Hard", "S", "L", "295", "1", "", "R16", "6-2 4-3 RET", "3", "Vitaly Kozyukov", "593", "", "", "R", "22.4339493498", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-EST-04A-2016-017", "", "2", "2"],
          ["20161107", "Estonia F4", "Hard", "S", "W", "295", "1", "", "R32", "6-3 6-2", "3", "Patrik Niklas Salminen", "745", "", "", "U", "19.6769336071", "", "FIN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2016-M-FU-EST-04A-2016-001", "", "1", "1"],
          ["20161031", "Estonia F3", "Hard", "S", "L", "302", "1", "", "QF", "6-1 6-7(5) 7-5", "3", "Alexander Vasilenko", "676", "", "", "R", "21.6783025325", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-EST-03A-2016-025", "", "3", "3"],
          ["20161031", "Estonia F3", "Hard", "S", "W", "302", "1", "", "R16", "6-4 6-2", "3", "Shane Vinsant", "1395", "", "Q", "R", "23.0171115674", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-EST-03A-2016-017", "", "2", "2"],
          ["20161031", "Estonia F3", "Hard", "S", "W", "302", "1", "", "R32", "6-4 6-1", "3", "Alexander Lobkov", "728", "", "", "R", "26.0670773443", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-EST-03A-2016-001", "", "1", "1"],
          ["20161024", "Estonia F2", "Carpet", "S", "L", "288", "1", "", "SF", "6-3 6-7(5) 6-2", "3", "Vladimir Ivanov", "536", "3", "", "R", "29.5414099932", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-EST-02A-2016-029", "", "", ""],
          ["20161024", "Estonia F2", "Carpet", "S", "W", "288", "1", "", "QF", "6-3 6-3", "3", "Patrik Fabian", "628", "6", "", "L", "22.598220397", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-EST-02A-2016-025", "", "3", "3"],
          ["20161024", "Estonia F2", "Carpet", "S", "W", "288", "1", "", "R16", "6-3 4-6 6-3", "3", "Kristjan Tamm", "", "", "WC", "U", "18.3572895277", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "2016-M-FU-EST-02A-2016-017", "", "2", "2"],
          ["20161024", "Estonia F2", "Carpet", "S", "W", "288", "1", "", "R32", "6-0 6-0", "3", "Kristofer Siimar", "", "", "WC", "R", "18.7214236824", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-EST-02A-2016-001", "", "1", "1"],
          ["20161017", "Moscow", "Hard", "A", "L", "262", "", "", "Q1", "7-6(4) 6-3", "3", "Federico Gaio", "181", "7", "", "R", "24.6187542779", "", "ITA", "0", "101", "3", "2", "78", "50", "30", "17", "10", "5", "7", "1", "0", "72", "36", "27", "23", "11", "0", "1", "1", "", "", "0", "2016-M014-249", "", "", ""],
          ["20161003", "Sweden F5", "Hard", "S", "L", "285", "2", "", "R32", "6-1 3-6 6-3", "3", "Andriej Kapas", "479", "", "", "R", "27.1457905544", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-SWE-05A-2016-016", "", "1", "1"],
          ["20160926", "Sweden F4", "Hard", "S", "W", "285", "2", "", "F", "7-6(5) 6-1", "3", "Edward Corrie", "332", "5", "", "U", "28.5968514716", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-SWE-04A-2016-031", "", "", ""],
          ["20160926", "Sweden F4", "Hard", "S", "W", "285", "2", "", "SF", "6-2 6-3", "3", "Sam Barry", "291", "3", "", "R", "24.6652977413", "", "IRL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-SWE-04A-2016-030", "", "", ""],
          ["20160926", "Sweden F4", "Hard", "S", "W", "285", "2", "", "QF", "6-4 3-6 6-4", "3", "Markus Eriksson", "421", "8", "", "R", "26.8254620123", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-SWE-04A-2016-028", "", "3", "3"],
          ["20160926", "Sweden F4", "Hard", "S", "W", "285", "2", "", "R16", "6-4 6-4", "3", "Jonathan Mridha", "832", "", "", "R", "21.4702258727", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-SWE-04A-2016-024", "", "2", "2"],
          ["20160926", "Sweden F4", "Hard", "S", "W", "285", "2", "", "R32", "7-6(7) 7-6(4)", "3", "Marcus Mansson", "1615", "", "Q", "U", "21.1143052704", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-SWE-04A-2016-016", "", "1", "1"],
          ["20160919", "St.Petersburg", "Hard", "A", "L", "284", "", "", "Q1", "6-2 4-6 6-4", "3", "Radu Albot", "101", "1", "", "R", "26.855578371", "", "MDA", "0", "125", "3", "4", "97", "54", "31", "20", "14", "6", "12", "1", "6", "97", "57", "38", "18", "14", "4", "8", "2", "", "", "1", "2016-0568-265", "", "", ""],
          ["20160905", "Russia F8", "Hard", "S", "L", "314", "1", "", "SF", "6-4 3-6 6-3", "3", "Alexander Vasilenko", "766", "", "", "R", "21.5058179329", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-RUS-08A-2016-029", "", "", ""],
          ["20160905", "Russia F8", "Hard", "S", "W", "314", "1", "", "QF", "6-2 6-4", "3", "Alexandr Igoshin", "542", "8", "", "U", "24.6351813826", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-RUS-08A-2016-025", "", "3", "3"],
          ["20160905", "Russia F8", "Hard", "S", "W", "314", "1", "", "R16", "6-1 6-3", "3", "Denis Matsukevitch", "824", "", "PR", "R", "30.4229979466", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-RUS-08A-2016-017", "", "2", "2"],
          ["20160905", "Russia F8", "Hard", "S", "W", "314", "1", "", "R32", "6-4 6-2", "3", "Maxim Kravtsov", "1686", "", "Q", "U", "21.4839151266", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-RUS-08A-2016-001", "", "1", "1"],
          ["20160829", "Russia F7", "Hard", "S", "L", "314", "4", "", "R16", "6-4 4-6 6-2", "3", "Marat Deviatiarov", "717", "", "", "R", "22.3627652293", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-RUS-07A-2016-019", "", "2", "2"],
          ["20160829", "Russia F7", "Hard", "S", "W", "314", "4", "", "R32", "3-6 6-1 6-4", "3", "Nikita Mishin", "1686", "", "Q", "U", "17.7713894593", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2016-M-FU-RUS-07A-2016-005", "", "1", "1"],
          ["20160822", "Belarus F3", "Hard", "S", "W", "330", "1", "", "F", "6-4 6-2", "3", "Anil Yuksel", "569", "7", "", "L", "26.2614647502", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-03A-2016-031", "", "", ""],
          ["20160822", "Belarus F3", "Hard", "S", "W", "330", "1", "", "SF", "6-1 6-2", "3", "Markos Kalovelonis", "498", "3", "", "R", "22.264202601", "", "GRE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-BLR-03A-2016-029", "", "", ""],
          ["20160822", "Belarus F3", "Hard", "S", "W", "330", "1", "", "QF", "6-2 7-5", "3", "Andrei Vasilevski", "590", "8", "", "R", "25.2375085558", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-03A-2016-025", "", "3", "3"],
          ["20160822", "Belarus F3", "Hard", "S", "W", "330", "1", "", "R16", "6-0 6-2", "3", "Alon Elia", "905", "", "", "U", "21.196440794", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-BLR-03A-2016-017", "", "2", "2"],
          ["20160822", "Belarus F3", "Hard", "S", "W", "330", "1", "", "R32", "6-0 6-0", "3", "Vadym Zrazhevskyy", "", "", "Q", "U", "23.1759069131", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-BLR-03A-2016-001", "", "1", "1"],
          ["20160815", "Belarus F2", "Hard", "S", "L", "341", "1", "", "F", "6-4 7-5", "3", "Yaraslau Shyla", "771", "", "", "R", "23.446954141", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-02A-2016-031", "", "", ""],
          ["20160815", "Belarus F2", "Hard", "S", "W", "341", "1", "", "SF", "7-6(5) 6-4", "3", "Sanjar Fayziev", "638", "7", "", "U", "22.0479123888", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2016-M-FU-BLR-02A-2016-029", "", "", ""],
          ["20160815", "Belarus F2", "Hard", "S", "W", "341", "1", "", "QF", "6-3 6-4", "3", "Anil Yuksel", "569", "6", "", "L", "26.2422997947", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-BLR-02A-2016-025", "", "3", "3"],
          ["20160815", "Belarus F2", "Hard", "S", "W", "341", "1", "", "R16", "7-5 6-2", "3", "Daniel Cukierman", "870", "", "", "U", "21.1033538672", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-BLR-02A-2016-017", "", "2", "2"],
          ["20160815", "Belarus F2", "Hard", "S", "W", "341", "1", "", "R32", "6-3 6-2", "3", "Sarp Agabigun", "941", "", "", "R", "19.1759069131", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2016-M-FU-BLR-02A-2016-001", "", "1", "1"],
          ["20160808", "Belarus F1", "Hard", "S", "L", "339", "1", "", "F", "6-4 6-1", "3", "Yaraslau Shyla", "763", "7", "", "R", "23.4277891855", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-01A-2016-031", "", "", ""],
          ["20160808", "Belarus F1", "Hard", "S", "W", "339", "1", "", "SF", "6-1 6-1", "3", "Artur Dubinski", "751", "6", "", "U", "20.3668720055", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2016-M-FU-BLR-01A-2016-029", "", "", ""],
          ["20160808", "Belarus F1", "Hard", "S", "W", "339", "1", "", "QF", "6-0 6-1", "3", "Roman Hassanov", "1157", "", "", "R", "19.9178644764", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-01A-2016-025", "", "3", "3"],
          ["20160808", "Belarus F1", "Hard", "S", "W", "339", "1", "", "R16", "6-1 6-1", "3", "Szymon Walkow", "1208", "", "", "R", "20.8788501027", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2016-M-FU-BLR-01A-2016-017", "", "2", "2"],
          ["20160808", "Belarus F1", "Hard", "S", "W", "339", "1", "", "R32", "6-3 2-6 6-4", "3", "Denis Yevseyev", "1032", "", "", "U", "23.2142368241", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2016-M-FU-BLR-01A-2016-001", "", "1", "1"],
          ["20160725", "Astana CH", "Hard", "C", "L", "337", "", "", "R32", "6-2 6-2", "3", "Blaz Kavcic", "367", "", "", "R", "29.3908281999", "188", "SLO", "0", "67", "3", "6", "50", "25", "15", "7", "8", "4", "9", "1", "5", "59", "38", "26", "12", "8", "5", "6", "2", "", "", "0", "2016-3618-275", "", "1", "1"],
          ["20160718", "Recanati CH", "Hard", "C", "L", "336", "", "LL", "R16", "6-1 6-7(2) 6-3", "3", "Luca Vanni", "179", "6", "", "R", "31.1211498973", "", "ITA", "0", "129", "3", "2", "104", "64", "40", "12", "15", "7", "16", "9", "3", "77", "52", "36", "11", "13", "0", "4", "2", "", "", "0", "2016-1743-292", "", "2", "2"],
          ["20160718", "Recanati CH", "Hard", "C", "W", "336", "", "LL", "R32", "6-7(5) 6-3 7-6(5)", "3", "Andrea Vavassori", "706", "", "WC", "U", "21.2046543463", "", "ITA", "0", "146", "7", "1", "108", "65", "46", "24", "16", "3", "5", "6", "11", "113", "70", "47", "21", "17", "3", "7", "", "", "", "1", "2016-1743-283", "", "1", "1"],
          ["20160718", "Recanati CH", "Hard", "C", "L", "336", "1", "", "Q3", "7-5 5-7 6-1", "3", "Filip Veger", "576", "8", "", "R", "21.5742642026", "", "CRO", "0", "129", "11", "5", "98", "67", "44", "11", "15", "7", "13", "5", "0", "94", "70", "46", "15", "16", "5", "9", "2", "", "", "", "2016-1743-269", "", "", ""],
          ["20160718", "Recanati CH", "Hard", "C", "W", "336", "1", "", "Q2", "6-0 6-2", "3", "Edoardo Castagna", "", "", "WC", "U", "", "", "ITA", "0", "48", "5", "0", "34", "24", "20", "8", "7", "0", "0", "0", "5", "51", "22", "14", "9", "7", "5", "10", "", "", "", "", "2016-1743-265", "", "", ""],
          ["20160704", "Netherlands F4", "Clay", "S", "L", "337", "8", "", "R16", "7-5 6-2", "3", "Gijs Brouwer", "2086", "", "Q", "L", "20.2874743326", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2016-M-FU-NED-04A-2016-023", "", "2", "2"],
          ["20160704", "Netherlands F4", "Clay", "S", "W", "337", "8", "", "R32", "6-4 6-0", "3", "Stephan Gerritsen", "1825", "", "Q", "U", "19.9917864476", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "0", "2016-M-FU-NED-04A-2016-013", "", "1", "1"],
          ["20160613", "Fergana CH", "Hard", "C", "L", "364", "", "Q", "R16", "6-3 4-6 6-3", "3", "Shuichi Sekiguchi", "337", "", "", "R", "24.9144421629", "", "JPN", "0", "106", "2", "2", "78", "55", "37", "15", "14", "4", "7", "2", "3", "78", "54", "39", "16", "14", "2", "3", "2", "", "", "0", "2016-0603-287", "", "2", "2"],
          ["20160613", "Fergana CH", "Hard", "C", "W", "364", "", "Q", "R32", "6-3 1-0 RET", "3", "Giovanni Lapentti", "322", "", "", "R", "33.3826146475", "193", "ECU", "0", "32", "7", "0", "25", "16", "14", "6", "5", "0", "0", "3", "1", "30", "18", "12", "4", "5", "0", "2", "2", "", "", "", "2016-0603-272", "", "1", "1"],
          ["20160613", "Fergana CH", "Hard", "C", "W", "364", "3", "", "Q3", "7-5 6-2", "3", "Yaraslau Shyla", "", "8", "", "R", "23.2744695414", "", "BLR", "0", "87", "2", "5", "66", "35", "23", "16", "10", "8", "11", "1", "5", "69", "42", "23", "10", "10", "11", "17", "2", "", "", "", "2016-0603-267", "", "", ""],
          ["20160613", "Fergana CH", "Hard", "C", "W", "364", "3", "", "Q2", "6-1 6-4", "3", "Luca Margaroli", "973", "", "", "R", "24.3258042437", "", "SUI", "0", "60", "8", "3", "43", "22", "18", "15", "8", "0", "0", "7", "4", "54", "35", "21", "7", "9", "1", "5", "", "", "", "", "2016-0603-261", "", "", ""],
          ["20160606", "Prague CH", "Clay", "C", "L", "375", "", "Q", "R32", "6-1 6-3", "3", "Cedrik Marcel Stebe", "986", "", "PR", "L", "25.659137577", "183", "GER", "0", "73", "0", "0", "63", "48", "23", "5", "8", "4", "10", "1", "2", "42", "25", "20", "8", "8", "1", "3", "2", "", "", "1", "2016-0600-279", "", "1", "1"],
          ["20160606", "Prague CH", "Clay", "C", "W", "375", "", "", "Q3", "6-2 2-6 6-3", "3", "Yannick Maden", "430", "", "", "U", "26.6064339493", "", "GER", "0", "112", "3", "2", "86", "60", "38", "12", "13", "6", "9", "1", "1", "69", "42", "26", "16", "12", "3", "7", "", "", "", "", "2016-0600-268", "", "", ""],
          ["20160606", "Prague CH", "Clay", "C", "W", "375", "", "", "Q2", "3-6 6-3 7-6(4)", "3", "Nicolas Barrientos", "304", "5", "", "R", "29.1197809719", "175", "COL", "0", "131", "8", "4", "98", "66", "47", "15", "15", "2", "5", "3", "3", "106", "81", "54", "13", "15", "10", "13", "2", "", "", "", "2016-0600-262", "", "", ""],
          ["20160606", "Prague CH", "Clay", "C", "W", "375", "", "", "Q1", "6-1 3-6 6-3", "3", "Martin Cuevas", "486", "", "", "R", "24.3942505133", "", "URU", "0", "100", "2", "0", "82", "54", "41", "15", "13", "5", "6", "8", "4", "81", "38", "27", "19", "12", "5", "8", "", "", "", "", "2016-0600-251", "", "", ""],
          ["20160530", "Prostejov CH", "Clay", "C", "L", "377", "", "", "Q1", "7-5 4-6 6-4", "3", "Patrik Fabian", "597", "", "", "L", "22.1765913758", "", "SVK", "0", "135", "2", "6", "93", "48", "38", "20", "16", "3", "7", "11", "4", "106", "70", "48", "18", "16", "9", "12", "2", "", "", "", "2016-0558-255", "", "", ""],
          ["20160523", "Vicenza CH", "Clay", "C", "L", "377", "", "", "Q1", "6-3 6-3", "3", "Enrique Lopez Perez", "247", "3", "", "R", "24.9719370294", "", "ESP", "0", "62", "1", "5", "51", "29", "19", "8", "9", "1", "5", "4", "1", "48", "33", "27", "9", "9", "1", "2", "2", "", "", "", "2016-7015-249", "", "", ""],
          ["20160516", "Nice", "Clay", "A", "L", "375", "", "", "Q2", "6-2 6-1", "3", "Diego Sebastian Schwartzman", "65", "1", "", "R", "23.7481177276", "", "ARG", "0", "67", "0", "5", "59", "34", "14", "10", "8", "6", "12", "1", "1", "52", "37", "23", "9", "7", "4", "5", "2", "", "", "0", "2016-6120-269", "", "", ""],
          ["20160516", "Nice", "Clay", "A", "W", "375", "", "", "Q1", "6-4 6-4", "3", "Miljan Zekic", "249", "7", "", "U", "27.8439425051", "", "SRB", "0", "", "2", "1", "53", "33", "25", "11", "10", "0", "2", "4", "4", "65", "38", "24", "13", "10", "3", "7", "", "", "", "0", "2016-6120-264", "", "", ""],
          ["20160425", "Ostrava CH", "Clay", "C", "L", "372", "7", "", "Q2", "7-6(0) 4-6 6-3", "3", "Stefano Napolitano", "417", "", "", "R", "21.0403832991", "", "ITA", "0", "132", "4", "7", "99", "49", "35", "22", "15", "4", "8", "2", "2", "120", "70", "49", "23", "16", "9", "13", "2", "", "", "", "2016-1797-258", "", "", ""],
          ["20160328", "St. Brieuc CH", "Hard", "C", "L", "313", "1", "", "Q1", "6-2 0-6 7-5", "3", "Laurent Rochette", "441", "", "", "R", "28.1232032854", "", "FRA", "0", "97", "3", "3", "91", "54", "34", "16", "13", "7", "12", "3", "2", "78", "40", "26", "19", "13", "6", "11", "2", "", "", "", "2016-1796-257", "", "", ""],
          ["20160314", "Kazan CH", "Hard", "C", "L", "319", "", "Q", "R16", "6-4 6-4", "3", "Konstantin Kravchuk", "128", "3", "", "R", "31.0335386721", "190", "RUS", "0", "72", "2", "5", "58", "35", "26", "12", "10", "3", "5", "7", "0", "60", "35", "30", "14", "10", "2", "2", "2", "", "", "0", "2016-6114-288", "", "2", "2"],
          ["20160314", "Kazan CH", "Hard", "C", "W", "319", "", "Q", "R32", "6-2 2-6 6-2", "3", "Denis Matsukevitch", "1006", "", "LL", "R", "29.9438740589", "190", "RUS", "0", "87", "0", "2", "62", "30", "21", "15", "12", "2", "6", "6", "5", "81", "50", "30", "12", "12", "7", "13", "2", "", "", "", "2016-6114-275", "", "1", "1"],
          ["20160314", "Kazan CH", "Hard", "C", "W", "319", "3", "", "Q3", "6-4 6-4", "3", "Denis Matsukevitch", "1006", "", "WC", "R", "29.9438740589", "190", "RUS", "0", "64", "2", "3", "56", "32", "28", "10", "10", "2", "4", "2", "4", "49", "24", "13", "14", "10", "0", "4", "2", "", "", "", "2016-6114-267", "", "", ""],
          ["20160314", "Kazan CH", "Hard", "C", "W", "319", "3", "", "Q2", "1-6 6-3 7-5", "3", "Jordi Munoz Abreu", "1204", "", "", "U", "26.135523614", "", "VEN", "0", "120", "1", "6", "85", "50", "29", "20", "14", "6", "12", "3", "9", "102", "57", "32", "21", "14", "11", "17", "", "", "", "", "2016-6114-261", "", "", ""],
          ["20160307", "Jonkoping CH", "Hard", "C", "L", "319", "3", "", "Q3", "6-4 3-6 7-6(5)", "3", "Patrik Rosenholm", "1026", "", "", "R", "28.0054757016", "", "SWE", "0", "120", "11", "9", "115", "78", "59", "15", "16", "8", "10", "4", "5", "97", "46", "35", "28", "15", "6", "8", "1", "", "", "", "2016-7482-267", "", "", ""],
          ["20160307", "Jonkoping CH", "Hard", "C", "W", "319", "3", "", "Q2", "6-1 7-6(5)", "3", "Carl Soderlund", "790", "", "", "R", "18.7597535934", "", "SWE", "0", "72", "4", "3", "56", "34", "23", "15", "9", "2", "3", "4", "4", "87", "54", "32", "14", "10", "8", "12", "2", "", "", "", "2016-7482-261", "", "", ""],
          ["20160215", "Wroclaw CH", "Hard", "C", "L", "296", "7", "", "Q3", "7-6(2) 2-6 6-4", "3", "Zdenek Kolar", "636", "", "", "U", "19.3511293634", "", "CZE", "0", "108", "9", "5", "95", "69", "54", "12", "15", "5", "6", "15", "9", "104", "58", "45", "23", "15", "6", "8", "", "", "", "", "2016-7205-268", "", "", ""],
          ["20160215", "Wroclaw CH", "Hard", "C", "W", "296", "7", "", "Q2", "3-1 RET", "3", "Maximilian Neuchrist", "359", "", "", "R", "24.5694729637", "", "AUT", "0", "27", "1", "1", "11", "5", "3", "5", "2", "0", "0", "5", "0", "21", "12", "8", "3", "2", "6", "7", "2", "", "", "", "2016-7205-262", "", "", ""],
          ["20160215", "Wroclaw CH", "Hard", "C", "W", "296", "7", "", "Q1", "6-7(9) 6-4 7-6(3)", "3", "Matteo Berrettini", "530", "", "", "U", "19.8439425051", "", "ITA", "0", "129", "14", "1", "116", "83", "65", "22", "17", "4", "4", "15", "2", "105", "62", "55", "25", "17", "7", "8", "", "", "", "", "2016-7205-250", "", "", ""],
          ["20160208", "Bergamo CH", "Hard", "C", "L", "304", "", "Q", "R32", "7-6(2) 6-7(3) 7-6(8)", "3", "Gregoire Barrere", "270", "", "Q", "R", "21.9767282683", "183", "FRA", "0", "159", "15", "5", "127", "72", "54", "30", "18", "5", "7", "14", "5", "128", "71", "56", "27", "18", "5", "7", "2", "", "", "1", "2016-0854-280", "", "1", "1"],
          ["20160208", "Bergamo CH", "Hard", "C", "W", "304", "", "", "Q3", "7-5 6-3", "3", "Jan Satral", "216", "3", "", "R", "25.5441478439", "", "CZE", "0", "80", "12", "3", "71", "46", "37", "9", "11", "4", "6", "15", "6", "91", "57", "37", "11", "10", "8", "12", "2", "", "", "", "2016-0854-267", "", "", ""],
          ["20160208", "Bergamo CH", "Hard", "C", "W", "304", "", "", "Q2", "6-4 6-7(5) 6-3", "3", "Roberto Marcora", "262", "6", "", "R", "26.4421629021", "", "ITA", "0", "125", "12", "4", "86", "48", "40", "24", "16", "0", "1", "16", "6", "108", "68", "50", "17", "15", "8", "11", "", "", "", "", "2016-0854-260", "", "", ""],
          ["20160208", "Bergamo CH", "Hard", "C", "W", "304", "", "", "Q1", "6-2 6-2", "3", "Pascal Meis", "616", "", "WC", "U", "22.6611909651", "", "GER", "0", "53", "5", "4", "40", "22", "21", "11", "8", "0", "0", "2", "1", "54", "39", "20", "6", "8", "3", "7", "", "", "", "", "2016-0854-247", "", "", ""],
          ["20160111", "Bangkok CH", "Hard", "C", "L", "311", "", "", "QF", "0-6 6-2 7-5", "3", "Adam Pavlasek", "161", "2", "", "R", "21.2594113621", "", "CZE", "0", "102", "4", "2", "83", "53", "32", "17", "13", "5", "8", "4", "3", "86", "63", "41", "11", "13", "4", "7", "2", "", "", "0", "2016-7438-294", "", "3", "3"],
          ["20160111", "Bangkok CH", "Hard", "C", "W", "311", "", "", "R16", "7-6(0) 6-0", "3", "Liam Broady", "309", "", "", "L", "22.0177960301", "", "GBR", "0", "79", "6", "3", "52", "31", "28", "12", "9", "0", "0", "2", "7", "70", "35", "21", "16", "9", "4", "7", "2", "", "", "0", "2016-7438-287", "", "2", "2"],
          ["20160111", "Bangkok CH", "Hard", "C", "W", "311", "", "", "R32", "1-6 6-1 6-2", "3", "Gerard Granollers", "305", "", "", "R", "26.945927447", "", "ESP", "0", "92", "9", "2", "80", "50", "36", "14", "11", "6", "8", "2", "5", "76", "34", "24", "17", "11", "6", "10", "1", "", "", "0", "2016-7438-272", "", "1", "1"],
          ["20160104", "Bangkok CH", "Hard", "C", "L", "312", "", "", "Q2", "7-5 7-5", "3", "Jason Jung", "256", "2", "", "R", "26.5544147844", "", "TPE", "0", "91", "5", "4", "69", "43", "31", "16", "12", "5", "7", "9", "2", "72", "46", "35", "18", "12", "0", "0", "2", "", "", "", "2016-5047-263", "", "", ""],
          ["20160104", "Bangkok CH", "Hard", "C", "W", "312", "", "", "Q1", "6-4 6-3", "3", "Wishaya Trongcharoenchaikul", "1423", "", "WC", "R", "20.7419575633", "", "THA", "0", "37", "2", "0", "46", "29", "26", "11", "9", "2", "2", "3", "3", "61", "37", "25", "13", "10", "4", "7", "2", "", "", "", "2016-5047-252", "", "", ""],
          ["20151123", "Czech Republic F7", "Carpet", "S", "L", "310", "5", "", "R16", "7-6(3) 6-3", "3", "Filip Veger", "623", "", "", "R", "20.9226557153", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-CZE-07A-2015-021", "", "2", "2"],
          ["20151123", "Czech Republic F7", "Carpet", "S", "W", "310", "5", "", "R32", "6-2 7-6(3)", "3", "Dominik Recek", "1877", "", "WC", "U", "20.758384668", "", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-CZE-07A-2015-009", "", "1", "1"],
          ["20151102", "Estonia F3", "Hard", "S", "W", "295", "1", "", "F", "4-6 6-4 6-0", "3", "Clement Geens", "428", "4", "", "R", "19.6440793977", "", "BEL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-EST-03A-2015-031", "", "", ""],
          ["20151102", "Estonia F3", "Hard", "S", "W", "295", "1", "", "SF", "6-2 6-0", "3", "Evgeny Tyurnev", "724", "", "", "U", "18.5681040383", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-EST-03A-2015-029", "", "", ""],
          ["20151102", "Estonia F3", "Hard", "S", "W", "295", "1", "", "QF", "6-3 7-6(6)", "3", "Anton Zaitsev", "528", "8", "", "U", "28.2819986311", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-EST-03A-2015-025", "", "3", "3"],
          ["20151102", "Estonia F3", "Hard", "S", "W", "295", "1", "", "R16", "6-3 3-6 6-3", "3", "Miliaan Niesten", "532", "", "", "U", "27.3483915127", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-EST-03A-2015-017", "", "2", "2"],
          ["20151102", "Estonia F3", "Hard", "S", "W", "295", "1", "", "R32", "6-4 6-3", "3", "Mikelis Libietis", "860", "", "", "U", "23.3155373032", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-EST-03A-2015-001", "", "1", "1"],
          ["20151026", "Estonia F2", "Carpet", "S", "L", "317", "1", "", "QF", "6-3 4-6 6-3", "3", "Lucas Catarina", "1007", "", "", "R", "19.1649555099", "", "MON", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-EST-02A-2015-025", "", "3", "3"],
          ["20151026", "Estonia F2", "Carpet", "S", "W", "317", "1", "", "R16", "6-3 6-4", "3", "Neil Pauffley", "800", "", "", "R", "25.5770020534", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-EST-02A-2015-017", "", "2", "2"],
          ["20151026", "Estonia F2", "Carpet", "S", "W", "317", "1", "", "R32", "7-6(7) 6-1", "3", "Mikelis Libietis", "863", "", "", "U", "23.2963723477", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-EST-02A-2015-001", "", "1", "1"],
          ["20151019", "Belarus F4", "Hard", "S", "L", "319", "2", "", "F", "6-1 7-6(1)", "3", "Stefan Kozlov", "548", "5", "", "R", "17.711156742", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-04A-2015-031", "", "", ""],
          ["20151019", "Belarus F4", "Hard", "S", "W", "319", "2", "", "SF", "6-1 3-0 RET", "3", "Ivan Davydov", "1485", "", "Q", "R", "19.0006844627", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-04A-2015-030", "", "", ""],
          ["20151019", "Belarus F4", "Hard", "S", "W", "319", "2", "", "QF", "6-4 3-6 6-4", "3", "Evgeny Tyurnev", "564", "6", "", "U", "18.5297741273", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-04A-2015-028", "", "3", "3"],
          ["20151019", "Belarus F4", "Hard", "S", "W", "319", "2", "", "R16", "6-7(5) 6-4 6-1", "3", "Artur Dubinski", "901", "", "", "U", "19.5619438741", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-04A-2015-024", "", "2", "2"],
          ["20151019", "Belarus F4", "Hard", "S", "W", "319", "2", "", "R32", "3-6 6-3 7-6(5)", "3", "Vitaly Kozyukov", "1150", "", "", "R", "21.3798767967", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-04A-2015-016", "", "1", "1"],
          ["20151012", "Belarus F3", "Hard", "S", "W", "316", "3", "", "F", "6-1 6-4", "3", "Stefan Kozlov", "546", "5", "", "R", "17.6919917864", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-03A-2015-031", "", "", ""],
          ["20151012", "Belarus F3", "Hard", "S", "W", "316", "3", "", "SF", "6-2 4-6 6-4", "3", "Evgeny Elistratov", "506", "", "Q", "U", "20.7885010267", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-03A-2015-029", "", "", ""],
          ["20151012", "Belarus F3", "Hard", "S", "W", "316", "3", "", "QF", "6-3 6-4", "3", "Alexander Perfilov", "850", "", "", "R", "30.4038329911", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-03A-2015-026", "", "3", "3"],
          ["20151012", "Belarus F3", "Hard", "S", "W", "316", "3", "", "R16", "6-1 6-4", "3", "Daniil Zarichanskyy", "", "", "Q", "L", "17.7768651608", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-03A-2015-019", "", "2", "2"],
          ["20151012", "Belarus F3", "Hard", "S", "W", "316", "3", "", "R32", "6-1 6-2", "3", "Maxim Ratniuk", "1005", "", "", "U", "19.4551676934", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-03A-2015-005", "", "1", "1"],
          ["20150921", "St. Petersburg Q", "Hard", "Q", "L", "301", "4", "", "Q1", "1-6 6-3 6-2", "3", "Vladimir Polyakov", "1359", "", "", "R", "21.2594113621", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2015-22-013", "", "", ""],
          ["20150914", "Istanbul CH", "Hard", "C", "L", "314", "", "", "R16", "1-6 6-4 6-3", "3", "Andrey Kuznetsov", "97", "4", "", "R", "24.5585215606", "185", "RUS", "0", "", "1", "4", "94", "59", "42", "12", "13", "8", "12", "5", "4", "79", "44", "28", "17", "13", "3", "7", "2", "", "", "", "2015-7083-019", "", "2", "2"],
          ["20150914", "Istanbul CH", "Hard", "C", "W", "314", "", "", "R32", "6-2 6-2", "3", "Barkin Yalcinkale", "924", "", "WC", "U", "24.2217659138", "", "TUR", "0", "", "3", "5", "46", "27", "22", "12", "8", "0", "0", "1", "2", "62", "42", "25", "7", "8", "8", "12", "", "", "", "0", "2015-7083-006", "", "1", "1"],
          ["20150831", "US Open Q", "Hard", "Q", "L", "281", "", "", "Q1", "6-2 6-2", "3", "Adrian Menendez Maceiras", "134", "28", "", "R", "29.839835729", "", "ESP", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-995-064", "", "", ""],
          ["20150810", "Belarus F1", "Hard", "S", "L", "238", "1", "", "QF", "6-3 6-4", "3", "Sanjar Fayziev", "524", "8", "", "U", "21.0321697467", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-01A-2015-025", "", "3", "3"],
          ["20150810", "Belarus F1", "Hard", "S", "W", "238", "1", "", "R16", "6-3 6-4", "3", "Andrei Vasilevski", "869", "", "", "R", "24.2026009582", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-BLR-01A-2015-017", "", "2", "2"],
          ["20150810", "Belarus F1", "Hard", "S", "W", "238", "1", "", "R32", "6-3 6-7(3) 6-2", "3", "Daniil Zarichanskyy", "", "", "Q", "L", "17.6043805613", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-BLR-01A-2015-001", "", "1", "1"],
          ["20150727", "Astana CH", "Hard", "C", "L", "230", "", "", "R32", "6-2 3-0 RET", "3", "Konstantin Kravchuk", "173", "2", "", "R", "30.4202600958", "190", "RUS", "0", "", "2", "6", "37", "18", "12", "3", "6", "5", "9", "3", "0", "22", "15", "14", "6", "5", "0", "0", "2", "", "", "", "2015-3618-016", "", "1", "1"],
          ["20150720", "Recanati CH", "Hard", "C", "L", "236", "", "", "R16", "6-2 6-4", "3", "Ruben Bemelmans", "94", "2", "", "L", "27.5126625599", "", "BEL", "0", "", "1", "6", "55", "31", "21", "11", "9", "5", "8", "7", "3", "44", "28", "27", "9", "9", "0", "0", "2", "", "", "1", "2015-1743-024", "", "2", "2"],
          ["20150720", "Recanati CH", "Hard", "C", "W", "236", "", "", "R32", "6-2 6-2", "3", "Giacomo Miccini", "1142", "", "WC", "R", "23.0390143737", "", "ITA", "0", "", "8", "2", "47", "30", "23", "12", "8", "2", "2", "4", "2", "55", "33", "20", "7", "8", "6", "10", "2", "", "", "0", "2015-1743-015", "", "1", "1"],
          ["20150706", "Turkey F27", "Hard", "S", "L", "249", "2", "", "QF", "6-4 6-0", "3", "Aleksandre Metreveli", "579", "8", "", "R", "21.8836413415", "", "GEO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-TUR-27A-2015-028", "", "3", "3"],
          ["20150706", "Turkey F27", "Hard", "S", "W", "249", "2", "", "R16", "6-3 6-3", "3", "Daniiar Duldaev", "682", "", "", "R", "22.6694045175", "", "KGZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-TUR-27A-2015-024", "", "2", "2"],
          ["20150706", "Turkey F27", "Hard", "S", "W", "249", "2", "", "R32", "6-2 6-3", "3", "Juan Manuel Matute", "1055", "", "", "R", "23.5017111567", "", "ARG", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-TUR-27A-2015-016", "", "1", "1"],
          ["20150621", "Nottingham Q", "Grass", "Q", "L", "248", "", "", "Q1", "6-4 6-3", "3", "Go Soeda", "90", "5", "", "R", "30.7926078029", "178", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2015-36-004", "", "", ""],
          ["20150608", "Stuttgart Q", "Grass", "Q", "L", "246", "", "", "Q2", "7-6(4) 6-3", "3", "Dustin Brown", "104", "2", "", "R", "30.4969199179", "196", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "0", "2015-981-019", "", "", ""],
          ["20150608", "Stuttgart Q", "Grass", "Q", "W", "246", "", "", "Q1", "7-6(1) 7-5", "3", "David Vega Hernandez", "509", "", "WC", "R", "20.9582477755", "", "ESP", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "1", "2015-981-006", "", "", ""],
          ["20150518", "Eskisehir CH", "Hard", "C", "L", "256", "", "", "R16", "6-1 4-6 6-3", "3", "Marco Chiudinelli", "374", "", "", "R", "33.6837782341", "185", "SUI", "0", "113", "5", "2", "89", "55", "28", "17", "13", "4", "10", "5", "1", "74", "44", "31", "17", "13", "4", "7", "2", "", "", "1", "2015-6791-022", "", "2", "2"],
          ["20150518", "Eskisehir CH", "Hard", "C", "W", "256", "", "", "R32", "7-6(6) 6-3", "3", "Ti Chen", "213", "3", "", "R", "31.6221765914", "183", "TPE", "0", "105", "7", "2", "81", "50", "36", "15", "11", "2", "4", "2", "0", "74", "57", "38", "6", "10", "3", "6", "2", "", "", "0", "2015-6791-012", "", "1", "1"],
          ["20150511", "Samarkand CH", "Clay", "C", "L", "255", "", "", "R32", "6-4 6-2", "3", "Laurynas Grigelis", "379", "", "", "R", "23.7399041752", "183", "LTU", "0", "64", "3", "5", "62", "34", "21", "12", "9", "1", "4", "9", "1", "47", "29", "25", "12", "9", "0", "0", "2", "", "", "0", "2015-447-002", "", "1", "1"],
          ["20150504", "Karshi CH", "Hard", "C", "L", "258", "", "", "R32", "6-4 7-6(2)", "3", "Ivan Gakhov", "535", "", "LL", "L", "18.4941820671", "", "RUS", "0", "107", "4", "3", "87", "53", "39", "15", "11", "8", "9", "6", "2", "85", "56", "40", "18", "11", "4", "4", "2", "", "", "0", "2015-3967-007", "", "1", "1"],
          ["20150413", "Uzbekistan F2", "Hard", "S", "L", "267", "2", "", "F", "7-5 4-6 6-3", "3", "Karen Khachanov", "278", "3", "", "R", "18.893908282", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-UZB-02A-2015-031", "", "", ""],
          ["20150413", "Uzbekistan F2", "Hard", "S", "W", "267", "2", "", "SF", "4-6 6-1 6-4", "3", "Djurabek Karimov", "1474", "", "WC", "U", "16.8569472964", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-02A-2015-030", "", "", ""],
          ["20150413", "Uzbekistan F2", "Hard", "S", "W", "267", "2", "", "QF", "4-6 6-4 6-3", "3", "Evgeny Tyurnev", "511", "7", "", "U", "18.0123203285", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-02A-2015-028", "", "3", "3"],
          ["20150413", "Uzbekistan F2", "Hard", "S", "W", "267", "2", "", "R16", "6-3 6-1", "3", "Anton Galkin", "1721", "", "Q", "U", "23.3018480493", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-02A-2015-024", "", "2", "2"],
          ["20150413", "Uzbekistan F2", "Hard", "S", "W", "267", "2", "", "R32", "7-5 6-0", "3", "Sanjar Fayziev", "603", "", "", "U", "20.7063655031", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-02A-2015-016", "", "1", "1"],
          ["20150406", "Uzbekistan F1", "Hard", "S", "L", "262", "3", "", "F", "6-2 6-4", "3", "Yuki Bhambri", "251", "2", "", "R", "22.7542778919", "183", "IND", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-UZB-01A-2015-031", "", "", ""],
          ["20150406", "Uzbekistan F1", "Hard", "S", "W", "262", "3", "", "SF", "7-6(9) 2-6 6-1", "3", "Ti Chen", "201", "1", "", "R", "31.5071868583", "183", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-UZB-01A-2015-029", "", "", ""],
          ["20150406", "Uzbekistan F1", "Hard", "S", "W", "262", "3", "", "QF", "2-6 6-3 7-5", "3", "Daniiar Duldaev", "852", "", "", "R", "22.4394250513", "", "KGZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-UZB-01A-2015-026", "", "3", "3"],
          ["20150406", "Uzbekistan F1", "Hard", "S", "W", "262", "3", "", "R16", "6-3 7-5", "3", "Evgeny Tyurnev", "510", "", "", "U", "17.993155373", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-01A-2015-019", "", "2", "2"],
          ["20150406", "Uzbekistan F1", "Hard", "S", "W", "262", "3", "", "R32", "6-3 3-6 6-2", "3", "Ilya Lebedev", "847", "", "", "U", "24.6789869952", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-UZB-01A-2015-005", "", "1", "1"],
          ["20150316", "Kazan CH", "Hard", "C", "L", "268", "", "", "R16", "6-3 7-5", "3", "Marsel Ilhan", "77", "1", "", "R", "27.742642026", "190", "TUR", "0", "75", "2", "7", "60", "25", "19", "16", "10", "3", "6", "4", "1", "64", "42", "30", "15", "11", "3", "4", "2", "", "", "1", "2015-6114-017", "", "2", "2"],
          ["20150316", "Kazan CH", "Hard", "C", "W", "268", "", "", "R32", "6-2 5-7 6-2", "3", "Laurent Lokoli", "211", "", "", "R", "20.3887748118", "", "FRA", "0", "116", "5", "6", "79", "41", "37", "16", "14", "3", "6", "4", "9", "100", "40", "24", "27", "14", "7", "13", "2", "", "", "0", "2015-6114-002", "", "1", "1"],
          ["20150223", "Italy F2", "Carpet", "S", "L", "281", "2", "", "SF", "6-2 6-4", "3", "Philip Bester", "483", "", "", "R", "26.3819301848", "188", "CAN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-ITA-02A-2015-030", "", "", ""],
          ["20150223", "Italy F2", "Carpet", "S", "W", "281", "2", "", "QF", "6-4 6-4", "3", "Gregoire Barrere", "441", "", "", "R", "21.0184804928", "183", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-02A-2015-028", "", "3", "3"],
          ["20150223", "Italy F2", "Carpet", "S", "W", "281", "2", "", "R16", "6-4 6-3", "3", "Robin Kern", "517", "", "", "R", "21.3908281999", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-02A-2015-024", "", "2", "2"],
          ["20150223", "Italy F2", "Carpet", "S", "W", "281", "2", "", "R32", "4-6 6-3 7-5", "3", "Stefano Napolitano", "445", "", "", "R", "19.871321013", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-02A-2015-016", "", "1", "1"],
          ["20150216", "Italy F1", "Hard", "S", "L", "274", "2", "", "SF", "6-3 6-7(4) 6-1", "3", "Quentin Halys", "627", "", "JE", "R", "18.3080082136", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-01A-2015-030", "", "", ""],
          ["20150216", "Italy F1", "Hard", "S", "W", "274", "2", "", "QF", "4-6 7-5 6-1", "3", "Adrian Sikora", "373", "6", "", "U", "26.6173853525", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-ITA-01A-2015-028", "", "3", "3"],
          ["20150216", "Italy F1", "Hard", "S", "W", "274", "2", "", "R16", "6-2 4-6 6-2", "3", "Filip Veger", "478", "", "", "R", "20.1560574949", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-01A-2015-024", "", "2", "2"],
          ["20150216", "Italy F1", "Hard", "S", "W", "274", "2", "", "R32", "6-2 6-1", "3", "Riccardo Stiglich", "2122", "", "WC", "R", "24.4544832307", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-ITA-01A-2015-016", "", "1", "1"],
          ["20150126", "Kazakhstan F2", "Hard", "S", "L", "300", "1", "", "F", "3-6 6-4 7-6(5)", "3", "Mikhail Elgin", "1059", "", "Q", "R", "33.2648870637", "183", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-KAZ-02A-2015-031", "", "", ""],
          ["20150126", "Kazakhstan F2", "Hard", "S", "W", "300", "1", "", "SF", "3-6 7-6(7) 6-1", "3", "Sanjar Fayziev", "775", "", "", "U", "20.476386037", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-KAZ-02A-2015-029", "", "", ""],
          ["20150126", "Kazakhstan F2", "Hard", "S", "W", "300", "1", "", "QF", "6-4 6-3", "3", "Evgeny Tyurnev", "516", "7", "", "U", "17.7823408624", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-KAZ-02A-2015-025", "", "3", "3"],
          ["20150126", "Kazakhstan F2", "Hard", "S", "W", "300", "1", "", "R16", "6-1 6-4", "3", "Tom Jomby", "690", "", "", "R", "23.9178644764", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-KAZ-02A-2015-017", "", "2", "2"],
          ["20150126", "Kazakhstan F2", "Hard", "S", "W", "300", "1", "", "R32", "6-3 6-1", "3", "Denis Yevseyev", "697", "", "", "U", "21.6618754278", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2015-M-FU-KAZ-02A-2015-001", "", "1", "1"],
          ["20150119", "Kazakhstan F1", "Hard", "S", "L", "300", "1", "", "R32", "7-6(4) 6-7(5) 7-6(8)", "3", "Dmitry Popko", "634", "", "WC", "R", "18.2368240931", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2015-M-FU-KAZ-01A-2015-001", "", "1", "1"],
          ["20141103", "Estonia F4", "Hard", "S", "L", "322", "3", "", "SF", "7-5 2-6 7-5", "3", "Evgeny Elistratov", "1096", "", "Q", "U", "19.8494182067", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-04A-2014-030", "", "", ""],
          ["20141103", "Estonia F4", "Hard", "S", "W", "322", "3", "", "QF", "7-6(3) 6-1", "3", "Christoffer Solberg", "1000", "", "Q", "U", "20.7529089665", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-04A-2014-027", "", "3", "3"],
          ["20141103", "Estonia F4", "Hard", "S", "W", "322", "3", "", "R16", "6-2 6-3", "3", "Jorge Hernando Ruano", "687", "", "", "U", "27.4195756331", "", "ESP", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-04A-2014-022", "", "2", "2"],
          ["20141103", "Estonia F4", "Hard", "S", "W", "322", "3", "", "R32", "7-6(3) 6-1", "3", "Alexander Mozgovoy", "1256", "", "Q", "R", "19.5838466804", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-04A-2014-012", "", "1", "1"],
          ["20141027", "Estonia F3", "Carpet", "S", "W", "325", "2", "", "F", "6-4 6-2", "3", "Andrey Rublev", "491", "6", "Q", "R", "17.0184804928", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-EST-03A-2014-031", "", "", ""],
          ["20141027", "Estonia F3", "Carpet", "S", "W", "325", "2", "", "SF", "6-1 6-4", "3", "Yaraslau Shyla", "426", "4", "", "R", "21.6454483231", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-EST-03A-2014-030", "", "", ""],
          ["20141027", "Estonia F3", "Carpet", "S", "W", "325", "2", "", "QF", "6-3 6-4", "3", "Alexander Vasilenko", "478", "5", "", "R", "19.665982204", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-EST-03A-2014-028", "", "3", "3"],
          ["20141027", "Estonia F3", "Carpet", "S", "W", "325", "2", "", "R16", "6-0 6-2", "3", "Kristjan Tamm", "", "", "WC", "U", "16.3641341547", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-03A-2014-024", "", "2", "2"],
          ["20141027", "Estonia F3", "Carpet", "S", "W", "325", "2", "", "R32", "6-2 6-3", "3", "Chris Anguelov", "", "", "", "U", "24.2491444216", "", "BUL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-EST-03A-2014-016", "", "1", "1"],
          ["20141020", "Belarus F4", "Hard", "S", "L", "383", "5", "", "QF", "7-6(6) 6-4", "3", "Egor Gerasimov", "239", "1", "", "R", "21.9383983573", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-04A-2014-025", "", "3", "3"],
          ["20141020", "Belarus F4", "Hard", "S", "W", "383", "5", "", "R16", "6-1 6-2", "3", "Kirill Komarov", "1829", "", "Q", "R", "22.803559206", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-04A-2014-018", "", "2", "2"],
          ["20141020", "Belarus F4", "Hard", "S", "W", "383", "5", "", "R32", "6-2 7-6(2)", "3", "Evgeny Karlovskiy", "697", "", "", "R", "20.2026009582", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-04A-2014-004", "", "1", "1"],
          ["20141013", "Belarus F3", "Hard", "S", "W", "380", "3", "", "F", "6-2 3-6 7-6(5)", "3", "Maxim Dubarenco", "384", "4", "", "R", "21.3032169747", "", "MDA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-03A-2014-031", "", "", ""],
          ["20141013", "Belarus F3", "Hard", "S", "W", "380", "3", "", "SF", "6-3 4-6 6-3", "3", "Laurynas Grigelis", "258", "1", "", "R", "23.1649555099", "183", "LTU", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-03A-2014-029", "", "", ""],
          ["20141013", "Belarus F3", "Hard", "S", "W", "380", "3", "", "QF", "6-4 6-2", "3", "Ilya Ivashka", "601", "", "", "R", "20.6324435318", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-03A-2014-026", "", "3", "3"],
          ["20141013", "Belarus F3", "Hard", "S", "W", "380", "3", "", "R16", "6-1 4-6 6-1", "3", "Maksim Malyshev", "2120", "", "Q", "R", "22.5023956194", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-03A-2014-019", "", "2", "2"],
          ["20141013", "Belarus F3", "Hard", "S", "W", "380", "3", "", "R32", "6-2 6-2", "3", "Vladimir Uzhylovsky", "593", "", "", "R", "26.5516769336", "183", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-03A-2014-005", "", "1", "1"],
          ["20140922", "Turkey F33", "Hard", "S", "L", "392", "3", "", "QF", "6-2 5-7 6-4", "3", "Anil Yuksel", "902", "", "WC", "L", "24.3449691992", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-TUR-33A-2014-026", "", "3", "3"],
          ["20140922", "Turkey F33", "Hard", "S", "W", "392", "3", "", "R16", "6-2 6-4", "3", "Young Seok Kim", "940", "", "", "L", "19.3648186174", "", "KOR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-TUR-33A-2014-019", "", "2", "2"],
          ["20140922", "Turkey F33", "Hard", "S", "W", "392", "3", "", "R32", "6-2 6-4", "3", "Vadym Ursu", "1225", "", "LL", "R", "17.7221081451", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-TUR-33A-2014-005", "", "1", "1"],
          ["20140915", "Izmir CH", "Hard", "C", "L", "395", "", "LL", "R32", "3-6 6-3 6-2", "3", "Yann Marti", "212", "", "", "R", "26.2724161533", "173", "SUI", "0", "107", "1", "4", "81", "45", "29", "14", "13", "4", "10", "2", "7", "80", "40", "26", "21", "13", "7", "11", "2", "", "", "", "2014-3834-014", "", "1", "1"],
          ["20140818", "Belarus F2", "Hard", "S", "W", "529", "", "", "F", "6-1 6-4", "3", "Dane Propoggia", "439", "5", "", "R", "24.3175906913", "", "AUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-BLR-02A-2014-031", "", "", ""],
          ["20140818", "Belarus F2", "Hard", "S", "W", "529", "", "", "SF", "6-1 6-3", "3", "Yaraslau Shyla", "577", "", "", "R", "21.453798768", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-02A-2014-029", "", "", ""],
          ["20140818", "Belarus F2", "Hard", "S", "W", "529", "", "", "QF", "6-3 7-6(3)", "3", "Vladimir Uzhylovsky", "590", "", "", "R", "26.3983572895", "183", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-02A-2014-026", "", "3", "3"],
          ["20140818", "Belarus F2", "Hard", "S", "W", "529", "", "", "R16", "6-2 6-4", "3", "Edan Leshem", "1383", "", "Q", "U", "17.4154688569", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-BLR-02A-2014-019", "", "2", "2"],
          ["20140818", "Belarus F2", "Hard", "S", "W", "529", "", "", "R32", "6-2 5-7 6-2", "3", "Hugo Nys", "380", "3", "", "R", "23.5017111567", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2014-M-FU-BLR-02A-2014-005", "", "1", "1"],
          ["20140811", "Belarus F1", "Hard", "S", "W", "567", "", "", "F", "7-6(4) 1-6 6-0", "3", "Dane Propoggia", "419", "5", "", "R", "24.2984257358", "", "AUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-BLR-01A-2014-031", "", "", ""],
          ["20140811", "Belarus F1", "Hard", "S", "W", "567", "", "", "SF", "6-3 4-6 6-3", "3", "Ilya Ivashka", "759", "", "", "R", "20.4599589322", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-01A-2014-030", "", "", ""],
          ["20140811", "Belarus F1", "Hard", "S", "W", "567", "", "", "QF", "7-5 2-0 RET", "3", "Maxim Dubarenco", "354", "3", "", "R", "21.1307323751", "", "MDA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-01A-2014-027", "", "3", "3"],
          ["20140811", "Belarus F1", "Hard", "S", "W", "567", "", "", "R16", "6-4 6-3", "3", "Filip Veger", "518", "8", "", "R", "19.6386036961", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-BLR-01A-2014-021", "", "2", "2"],
          ["20140811", "Belarus F1", "Hard", "S", "W", "567", "", "", "R32", "6-1 3-6 6-4", "3", "Daniel Cukierman", "1453", "", "Q", "U", "19.0910335387", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-BLR-01A-2014-010", "", "1", "1"],
          ["20140804", "Kazakhstan F11", "Hard", "S", "L", "620", "", "", "SF", "6-3 4-6 6-4", "3", "Liang Chi Huang", "282", "3", "", "R", "22.4065708419", "", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-11A-2014-030", "", "", ""],
          ["20140804", "Kazakhstan F11", "Hard", "S", "W", "620", "", "", "QF", "7-6(3) 3-6 6-4", "3", "Ti Chen", "261", "2", "", "R", "30.8364134155", "183", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-11A-2014-028", "", "3", "3"],
          ["20140804", "Kazakhstan F11", "Hard", "S", "W", "620", "", "", "R16", "6-3 6-1", "3", "Daniel Skripnik", "1300", "", "", "R", "21.0403832991", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-11A-2014-023", "", "2", "2"],
          ["20140804", "Kazakhstan F11", "Hard", "S", "W", "620", "", "", "R32", "6-4 3-6 6-0", "3", "Denis Matsukevitch", "455", "6", "", "R", "28.3531827515", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-11A-2014-013", "", "1", "1"],
          ["20140728", "Kazakhstan F10", "Hard", "S", "L", "617", "", "", "SF", "6-1 2-0 RET", "3", "Denys Molchanov", "191", "1", "", "R", "27.2005475702", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-10A-2014-029", "", "", ""],
          ["20140728", "Kazakhstan F10", "Hard", "S", "W", "617", "", "", "QF", "6-1 7-6(3)", "3", "Andrei Vasilevski", "618", "", "", "R", "23.1676933607", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-10A-2014-026", "", "3", "3"],
          ["20140728", "Kazakhstan F10", "Hard", "S", "W", "617", "", "", "R16", "4-6 6-2 6-1", "3", "Mikhail Biryukov", "390", "6", "", "R", "22.2477754962", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-10A-2014-020", "", "2", "2"],
          ["20140728", "Kazakhstan F10", "Hard", "S", "W", "617", "", "", "R32", "6-1 6-0", "3", "Temur Ismailov", "515", "", "", "R", "19.5345653662", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KAZ-10A-2014-007", "", "1", "1"],
          ["20140616", "Tianjin CH", "Hard", "C", "L", "379", "", "", "R32", "6-3 7-5", "3", "Mikhail Ledovskikh", "625", "", "Q", "R", "27.8548939083", "188", "RUS", "0", "81", "6", "1", "59", "36", "23", "13", "10", "5", "8", "7", "3", "63", "39", "30", "13", "11", "1", "2", "", "", "", "1", "2014-7023-010", "", "1", "1"],
          ["20140519", "Karshi CH", "Hard", "C", "L", "335", "", "", "R32", "7-5 6-1", "3", "Jeevan Nedunchezhiyan", "359", "", "", "L", "25.5770020534", "", "IND", "0", "71", "6", "7", "61", "34", "22", "10", "9", "3", "7", "10", "1", "64", "42", "32", "9", "10", "4", "5", "2", "", "", "", "2014-3967-006", "", "1", "1"],
          ["20140421", "Korea F1", "Hard", "S", "L", "327", "2", "", "SF", "6-4 7-6(4)", "3", "Maximilian Neuchrist", "350", "3", "", "R", "22.7488021903", "", "AUT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KOR-01A-2014-030", "", "", ""],
          ["20140421", "Korea F1", "Hard", "S", "W", "327", "2", "", "QF", "7-5 7-6(4)", "3", "Frederik Nielsen", "741", "", "", "R", "30.6502395619", "190", "DEN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KOR-01A-2014-028", "", "3", "3"],
          ["20140421", "Korea F1", "Hard", "S", "W", "327", "2", "", "R16", "7-5 5-1 RET", "3", "Dae Soung Oh", "", "", "Q", "R", "24.2272416153", "", "KOR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-KOR-01A-2014-024", "", "2", "2"],
          ["20140421", "Korea F1", "Hard", "S", "W", "327", "2", "", "R32", "6-0 7-6(5)", "3", "Chan Yeong Oh", "", "", "WC", "U", "15.8165639973", "", "KOR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-KOR-01A-2014-016", "", "1", "1"],
          ["20140414", "China F5", "Hard", "S", "L", "326", "8", "", "F", "3-6 6-3 6-2", "3", "Ze Zhang", "206", "2", "", "R", "23.7782340862", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-CHN-05A-2014-031", "", "", ""],
          ["20140414", "China F5", "Hard", "S", "W", "326", "8", "", "SF", "6-3 6-4", "3", "Tim Puetz", "232", "3", "", "R", "26.4010951403", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-CHN-05A-2014-029", "", "", ""],
          ["20140414", "China F5", "Hard", "S", "W", "326", "8", "", "QF", "6-3 2-6 7-5", "3", "Di Wu", "194", "1", "", "R", "22.5817932923", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-CHN-05A-2014-025", "", "3", "3"],
          ["20140414", "China F5", "Hard", "S", "W", "326", "8", "", "R16", "7-6(6) 6-4", "3", "Hiroki Kondo", "327", "", "", "R", "31.4387405886", "", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-CHN-05A-2014-018", "", "2", "2"],
          ["20140414", "China F5", "Hard", "S", "W", "326", "8", "", "R32", "7-6(4) 6-4", "3", "Chieh Fu Wang", "779", "", "", "U", "20.5886379192", "", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-CHN-05A-2014-004", "", "1", "1"],
          ["20140324", "Croatia F5", "Clay", "S", "L", "312", "", "", "R16", "6-4 6-1", "3", "Juan Lizariturry", "320", "", "", "U", "22.9075975359", "", "ESP", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-CRO-05A-2014-021", "", "2", "2"],
          ["20140324", "Croatia F5", "Clay", "S", "W", "312", "", "", "R32", "6-2 6-2", "3", "Joachim Bjerke", "935", "", "Q", "R", "19.3456536619", "", "NOR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-CRO-05A-2014-010", "", "1", "1"],
          ["20140224", "Russia F2", "Hard", "S", "L", "315", "3", "", "QF", "4-6 6-3 6-1", "3", "Sergey Betov", "456", "7", "", "R", "26.3627652293", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-RUS-02A-2014-027", "", "3", "3"],
          ["20140224", "Russia F2", "Hard", "S", "W", "315", "3", "", "R16", "6-2 6-1", "3", "Beka Komakhidze", "1586", "", "Q", "R", "26.46954141", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-RUS-02A-2014-022", "", "2", "2"],
          ["20140224", "Russia F2", "Hard", "S", "W", "315", "3", "", "R32", "6-3 6-7(6) 6-3", "3", "Anton Manegin", "1351", "", "Q", "R", "23.9561943874", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-RUS-02A-2014-012", "", "1", "1"],
          ["20140217", "Astana CH", "Hard", "C", "L", "323", "", "", "R16", "4-6 7-5 6-1", "3", "Matteo Viola", "206", "2", "", "R", "26.6173853525", "", "ITA", "0", "101", "4", "0", "88", "60", "41", "12", "14", "7", "11", "2", "1", "79", "57", "42", "14", "15", "0", "2", "2", "", "", "1", "2014-3618-024", "", "2", "2"],
          ["20140217", "Astana CH", "Hard", "C", "W", "323", "", "", "R32", "6-4 6-1", "3", "Kuatbek Abiyev", "2103", "", "WC", "U", "19.1211498973", "", "KAZ", "0", "46", "12", "1", "46", "34", "29", "6", "8", "1", "1", "0", "1", "49", "32", "17", "9", "9", "1", "5", "", "", "", "0", "2014-3618-015", "", "1", "1"],
          ["20140113", "USA F2", "Clay", "S", "L", "307", "2", "", "R32", "7-6(9) 6-2", "3", "Darian King", "483", "", "", "R", "21.7166324435", "", "BAR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-USA-02A-2014-016", "", "1", "1"],
          ["20140106", "USA F1", "Clay", "S", "L", "308", "3", "", "R16", "6-4 3-6 7-6(2)", "3", "Sekou Bangoura", "737", "", "Q", "R", "22.135523614", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2014-M-FU-USA-01A-2014-022", "", "2", "2"],
          ["20140106", "USA F1", "Clay", "S", "W", "308", "3", "", "R32", "6-1 6-3", "3", "Dennis Novikov", "636", "", "", "R", "20.167008898", "", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2014-M-FU-USA-01A-2014-012", "", "1", "1"],
          ["20131118", "Tyumen CH", "Hard", "C", "L", "298", "", "Q", "R32", "4-6 7-6(0) 6-3", "3", "Ante Pavic", "297", "", "", "R", "24.7008898015", "", "CRO", "0", "125", "4", "9", "123", "79", "49", "16", "16", "6", "12", "7", "2", "97", "57", "43", "17", "15", "10", "15", "2", "", "", "1", "2013-6630-007", "", "1", "1"],
          ["20131111", "Helsinki CH", "Hard", "C", "L", "254", "", "", "R32", "6-3 6-4", "3", "Andreas Haider Maurer", "112", "7", "", "R", "26.6420260096", "190", "AUT", "0", "75", "5", "5", "48", "29", "20", "8", "9", "3", "7", "4", "4", "72", "39", "29", "14", "10", "3", "5", "2", "", "", "1", "2013-305-013", "", "1", "1"],
          ["20131021", "Kazan2 CH", "Hard", "C", "L", "257", "", "", "R32", "6-1 6-4", "3", "Antal Van Der Duim", "457", "", "Q", "R", "26.0971937029", "", "NED", "0", "50", "2", "8", "42", "18", "11", "8", "8", "0", "4", "9", "1", "45", "25", "21", "12", "9", "0", "1", "2", "", "", "1", "2013-6861-006", "", "1", "1"],
          ["20131014", "Moscow Q", "Hard", "Q", "L", "256", "", "", "Q1", "4-6 7-6(5) 7-5", "3", "Richard Muzaev", "963", "", "", "R", "21.5660506502", "", "RUS", "0", "146", "12", "10", "114", "67", "47", "21", "17", "7", "12", "9", "5", "122", "70", "45", "27", "17", "7", "12", "2", "", "", "0", "2013-897-006", "", "", ""],
          ["20130923", "Fergana CH", "Hard", "C", "L", "252", "8", "", "R32", "6-4 7-5", "3", "Ilija Bozoljac", "314", "", "", "R", "28.1423682409", "193", "SRB", "0", "80", "3", "0", "60", "42", "28", "12", "11", "2", "4", "10", "3", "68", "41", "35", "14", "11", "3", "3", "2", "", "", "0", "2013-603-008", "", "1", "1"],
          ["20130916", "Izmir CH", "Hard", "C", "L", "250", "", "", "R32", "6-3 6-3", "3", "Mikhail Kukushkin", "124", "1", "", "R", "25.7248459959", "183", "KAZ", "0", "68", "5", "3", "65", "34", "18", "10", "9", "8", "14", "3", "0", "47", "27", "18", "12", "9", "4", "7", "2", "", "", "", "2013-3834-001", "", "1", "1"],
          ["20130909", "Istanbul2 CH", "Hard", "C", "L", "262", "", "", "R16", "6-2 6-3", "3", "Flavio Cipolla", "183", "6", "", "R", "29.8891170431", "173", "ITA", "0", "73", "0", "1", "50", "35", "18", "7", "9", "3", "8", "0", "1", "56", "38", "26", "9", "8", "6", "7", "1", "", "", "0", "2013-6837-018", "", "2", "2"],
          ["20130909", "Istanbul2 CH", "Hard", "C", "W", "262", "", "", "R32", "4-6 7-6(4) 6-1", "3", "Mohamed Safwat", "241", "", "", "R", "22.9733059548", "183", "EGY", "0", "129", "7", "7", "96", "58", "43", "18", "14", "5", "8", "3", "11", "114", "71", "45", "18", "15", "6", "11", "2", "", "", "1", "2013-6837-003", "", "1", "1"],
          ["20130826", "US Open Q", "Hard", "Q", "L", "266", "", "", "Q1", "7-5 4-6 6-1", "3", "Aldin Setkic", "257", "", "", "R", "25.6810403833", "193", "BIH", "0", "111", "5", "5", "90", "53", "32", "20", "14", "5", "9", "2", "6", "91", "52", "37", "25", "15", "5", "7", "2", "", "", "", "2013-995-062", "", "", ""],
          ["20130812", "Kazan CH", "Hard", "C", "L", "210", "6", "", "R32", "7-6(6) 2-6 6-3", "3", "Alexander Lobkov", "290", "", "", "R", "22.8473648186", "", "RUS", "0", "135", "10", "1", "84", "50", "37", "17", "14", "1", "4", "4", "2", "110", "64", "40", "25", "15", "8", "12", "2", "", "", "", "2013-6114-013", "", "1", "1"],
          ["20130722", "Astana CH", "Hard", "C", "L", "201", "8", "", "QF", "3-6 6-2 7-6(3)", "3", "Konstantin Kravchuk", "191", "4", "", "R", "28.4079397673", "190", "RUS", "0", "117", "1", "3", "100", "59", "42", "16", "15", "6", "11", "7", "2", "79", "52", "34", "18", "14", "2", "6", "2", "", "", "0", "2013-3618-026", "", "3", "3"],
          ["20130722", "Astana CH", "Hard", "C", "W", "201", "8", "", "R16", "3-0 RET", "3", "Alexander Kudryavtsev", "414", "", "Q", "R", "27.7371663244", "183", "RUS", "0", "9", "1", "1", "10", "6", "6", "2", "2", "0", "0", "0", "0", "5", "2", "1", "0", "1", "1", "2", "2", "", "", "", "2013-3618-020", "", "2", "2"],
          ["20130722", "Astana CH", "Hard", "C", "W", "201", "8", "", "R32", "6-1 5-7 2-0 RET", "3", "Mikhail Ledovskikh", "961", "", "Q", "R", "26.9541409993", "188", "RUS", "0", "69", "18", "2", "58", "38", "30", "13", "11", "2", "3", "3", "2", "60", "28", "18", "17", "10", "4", "7", "", "", "", "", "2013-3618-008", "", "1", "1"],
          ["20130715", "Eskisehir CH", "Hard", "C", "L", "203", "8", "", "R16", "3-6 6-3 6-4", "3", "Enrique Lopez Perez", "284", "", "", "R", "22.1163586585", "", "ESP", "0", "99", "4", "7", "84", "46", "27", "24", "14", "5", "9", "10", "3", "78", "46", "34", "16", "14", "3", "6", "2", "", "", "0", "2013-6791-020", "", "2", "2"],
          ["20130715", "Eskisehir CH", "Hard", "C", "W", "203", "8", "", "R32", "6-0 6-2", "3", "Durukan Durmus", "", "", "WC", "L", "19.5071868583", "", "TUR", "0", "49", "5", "2", "33", "19", "18", "10", "7", "0", "0", "0", "5", "61", "33", "17", "10", "7", "5", "10", "2", "", "", "0", "2013-6791-008", "", "1", "1"],
          ["20130708", "Istanbul CH", "Hard", "C", "L", "224", "", "", "R16", "6-4 3-6 6-2", "3", "Mohamed Safwat", "322", "", "", "R", "22.8008213552", "183", "EGY", "0", "94", "5", "5", "76", "44", "26", "13", "14", "6", "13", "3", "2", "68", "42", "25", "13", "13", "0", "5", "2", "", "", "0", "2013-226-020", "", "2", "2"],
          ["20130708", "Istanbul CH", "Hard", "C", "W", "224", "", "", "R32", "7-6(3) 1-0 RET", "3", "Uladzimir Ignatik", "155", "6", "", "R", "22.984257358", "", "BLR", "0", "69", "3", "0", "41", "27", "16", "9", "6", "2", "4", "4", "6", "46", "19", "13", "10", "7", "0", "3", "2", "", "", "", "2013-226-008", "", "1", "1"],
          ["20130701", "Turkey F26", "Hard", "S", "W", "241", "1", "", "F", "6-3 6-1", "3", "David Sofaer", "", "", "Q", "U", "21.9493497604", "", "AUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-TUR-26A-2013-031", "", "", ""],
          ["20130701", "Turkey F26", "Hard", "S", "W", "241", "1", "", "SF", "7-6(6) 7-5", "3", "Ruan Roelofse", "532", "3", "", "R", "23.5975359343", "", "RSA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-TUR-26A-2013-029", "", "", ""],
          ["20130701", "Turkey F26", "Hard", "S", "W", "241", "1", "", "QF", "6-3 6-7(7) 6-3", "3", "Dean Obrien", "691", "7", "", "U", "23.1101984942", "", "RSA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-TUR-26A-2013-025", "", "3", "3"],
          ["20130701", "Turkey F26", "Hard", "S", "W", "241", "1", "", "R16", "6-2 6-1", "3", "Hao Zhang", "", "", "Q", "U", "17.9383983573", "", "CHN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-TUR-26A-2013-017", "", "2", "2"],
          ["20130701", "Turkey F26", "Hard", "S", "W", "241", "1", "", "R32", "6-4 6-3", "3", "Cem Hizlialp", "", "", "WC", "R", "17.2676249144", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-TUR-26A-2013-001", "", "1", "1"],
          ["20130624", "Wimbledon Q", "Grass", "Q", "L", "241", "", "", "Q3", "6-4 1-6 3-6 6-4 6-4", "5", "Stephane Robert", "165", "", "", "R", "33.1033538672", "185", "FRA", "0", "141", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-990-097", "", "", ""],
          ["20130624", "Wimbledon Q", "Grass", "Q", "W", "241", "", "", "Q2", "6-3 7-6(3)", "3", "Paul Capdeville", "148", "32", "", "R", "30.2286105407", "190", "CHI", "0", "74", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-990-066", "", "", ""],
          ["20130624", "Wimbledon Q", "Grass", "Q", "W", "241", "", "", "Q1", "6-4 7-6(5)", "3", "Radu Albot", "197", "", "", "R", "23.6167008898", "", "MDA", "0", "83", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-990-003", "", "", ""],
          ["20130610", "Nottingham2 CH", "Grass", "C", "L", "246", "", "", "QF", "6-2 6-2", "3", "Ruben Bemelmans", "141", "", "", "L", "25.4045174538", "", "BEL", "0", "52", "2", "3", "50", "31", "16", "7", "8", "7", "11", "7", "2", "49", "34", "27", "8", "8", "1", "1", "2", "", "", "0", "2013-6286-025", "", "3", "3"],
          ["20130610", "Nottingham2 CH", "Grass", "C", "W", "246", "", "", "R16", "6-4 6-3", "3", "Uladzimir Ignatik", "159", "", "", "R", "22.9075975359", "", "BLR", "0", "80", "3", "2", "62", "43", "35", "9", "10", "3", "4", "2", "7", "60", "36", "22", "11", "9", "9", "12", "2", "", "", "1", "2013-6286-017", "", "2", "2"],
          ["20130610", "Nottingham2 CH", "Grass", "C", "W", "246", "", "", "R32", "4-6 6-4 6-3", "3", "Karol Beck", "176", "", "", "R", "31.1868583162", "180", "SVK", "0", "120", "4", "5", "107", "71", "51", "13", "15", "6", "9", "6", "6", "80", "42", "32", "19", "14", "3", "7", "2", "", "", "1", "2013-6286-002", "", "1", "1"],
          ["20130506", "Karshi CH", "Hard", "C", "L", "240", "8", "", "R32", "6-4 3-6 7-6(3)", "3", "Vaja Uzakov", "1075", "", "Q", "R", "24.9199178645", "", "UZB", "0", "126", "9", "9", "101", "62", "43", "18", "15", "10", "14", "7", "7", "118", "69", "45", "23", "16", "10", "15", "2", "", "", "1", "2013-3967-013", "", "1", "1"],
          ["20130422", "Uzbekistan F2", "Hard", "S", "W", "276", "3", "", "F", "6-3 7-6(6)", "3", "Marek Semjan", "289", "4", "", "U", "25.4565366188", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-UZB-02A-2013-031", "", "", ""],
          ["20130422", "Uzbekistan F2", "Hard", "S", "W", "276", "3", "", "SF", "7-6(5) 6-2", "3", "Ti Chen", "209", "2", "", "R", "29.5523613963", "183", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-UZB-02A-2013-030", "", "", ""],
          ["20130422", "Uzbekistan F2", "Hard", "S", "W", "276", "3", "", "QF", "6-3 6-2", "3", "Sanjar Fayziev", "", "", "WC", "U", "18.7323750856", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-UZB-02A-2013-027", "", "3", "3"],
          ["20130422", "Uzbekistan F2", "Hard", "S", "W", "276", "3", "", "R16", "6-2 6-2", "3", "Denis Matsukevitch", "601", "", "", "R", "27.0691307324", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-UZB-02A-2013-022", "", "2", "2"],
          ["20130422", "Uzbekistan F2", "Hard", "S", "W", "276", "3", "", "R32", "6-1 6-1", "3", "Batyr Sapaev", "1286", "", "Q", "R", "21.7467488022", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-UZB-02A-2013-012", "", "1", "1"],
          ["20130415", "Uzbekistan F1", "Hard", "S", "L", "279", "3", "", "R16", "6-3 6-4", "3", "Alexander Bury", "623", "", "", "R", "25.5852156057", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-UZB-01A-2013-022", "", "2", "2"],
          ["20130415", "Uzbekistan F1", "Hard", "S", "W", "279", "3", "", "R32", "6-2 6-1", "3", "Denis Matsukevitch", "596", "", "", "R", "27.0499657769", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-UZB-01A-2013-012", "", "1", "1"],
          ["20130318", "Russia F3", "Hard", "S", "L", "275", "3", "", "SF", "7-6(5) 7-6(4)", "3", "Konstantin Kravchuk", "243", "2", "", "R", "28.0629705681", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-RUS-03A-2013-030", "", "", ""],
          ["20130318", "Russia F3", "Hard", "S", "W", "275", "3", "", "QF", "7-5 7-6(7)", "3", "Mikhail Elgin", "", "", "Q", "R", "31.4250513347", "183", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-RUS-03A-2013-027", "", "3", "3"],
          ["20130318", "Russia F3", "Hard", "S", "W", "275", "3", "", "R16", "6-3 6-3", "3", "Fedor Chervyakov", "1548", "", "Q", "R", "20.1752224504", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-RUS-03A-2013-022", "", "2", "2"],
          ["20130318", "Russia F3", "Hard", "S", "W", "275", "3", "", "R32", "7-6(7) 6-3", "3", "Alexander Bury", "626", "", "", "R", "25.5085557837", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-RUS-03A-2013-012", "", "1", "1"],
          ["20130225", "Kazakhstan F2", "Hard", "S", "L", "283", "5", "", "R32", "7-6(5) 7-6(6)", "3", "Aslan Karatsev", "750", "", "", "R", "19.4770704997", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-KAZ-02A-2013-013", "", "1", "1"],
          ["20130218", "Kazakhstan F1", "Hard", "S", "L", "287", "3", "", "QF", "7-6(8) 7-5", "3", "Victor Baluda", "423", "8", "", "R", "20.386036961", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-KAZ-01A-2013-027", "", "3", "3"],
          ["20130218", "Kazakhstan F1", "Hard", "S", "W", "287", "3", "", "R16", "5-0 RET", "3", "Yahor Yatsyk", "1253", "", "Q", "R", "20.5366187543", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-KAZ-01A-2013-022", "", "2", "2"],
          ["20130218", "Kazakhstan F1", "Hard", "S", "W", "287", "3", "", "R32", "6-4 6-2", "3", "Yan Sabanin", "1131", "", "", "U", "23.0499657769", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-KAZ-01A-2013-012", "", "1", "1"],
          ["20130121", "Germany F3", "Carpet", "S", "L", "288", "5", "", "QF", "4-6 6-4 6-2", "3", "Nikola Mektic", "257", "3", "", "R", "24.0574948665", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-GER-03A-2013-027", "", "3", "3"],
          ["20130121", "Germany F3", "Carpet", "S", "W", "288", "5", "", "R16", "4-6 6-4 6-2", "3", "Oscar Otte", "1163", "", "Q", "R", "19.498973306", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-GER-03A-2013-021", "", "2", "2"],
          ["20130121", "Germany F3", "Carpet", "S", "W", "288", "5", "", "R32", "6-3 4-6 6-1", "3", "Jaroslav Pospisil", "404", "", "", "R", "31.9288158795", "", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-GER-03A-2013-009", "", "1", "1"],
          ["20130114", "Germany F2", "Hard", "S", "L", "288", "2", "", "SF", "4-6 6-1 6-2", "3", "Nils Langer", "305", "3", "", "R", "22.970568104", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2013-M-FU-GER-02A-2013-030", "", "", ""],
          ["20130114", "Germany F2", "Hard", "S", "W", "288", "2", "", "QF", "6-2 7-6(3)", "3", "Kevin Krawietz", "373", "8", "", "R", "20.9746748802", "190", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-GER-02A-2013-028", "", "3", "3"],
          ["20130114", "Germany F2", "Hard", "S", "W", "288", "2", "", "R16", "7-6(5) 6-2", "3", "Edoardo Eremin", "561", "", "", "R", "19.2772073922", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-GER-02A-2013-024", "", "2", "2"],
          ["20130114", "Germany F2", "Hard", "S", "W", "288", "2", "", "R32", "6-4 6-4", "3", "Franck Pepe", "651", "", "Q", "R", "24.5393566051", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2013-M-FU-GER-02A-2013-016", "", "1", "1"],
          ["20121119", "Tyumen CH", "Hard", "C", "L", "275", "", "", "R16", "6-1 6-2", "3", "Denys Molchanov", "281", "", "", "R", "25.5140314853", "", "UKR", "0", "56", "3", "3", "45", "25", "16", "6", "8", "1", "6", "2", "0", "46", "24", "17", "15", "7", "3", "3", "2", "", "", "", "2012-6630-020", "", "2", "2"],
          ["20121119", "Tyumen CH", "Hard", "C", "W", "275", "", "", "R32", "6-0 6-4", "3", "Aleksandr Nedovyesov", "205", "7", "", "R", "25.7604380561", "", "KAZ", "0", "70", "6", "0", "51", "30", "21", "16", "8", "2", "2", "1", "1", "54", "31", "15", "13", "8", "6", "10", "2", "", "", "", "2012-6630-008", "", "1", "1"],
          ["20121112", "Helsinki CH", "Hard", "C", "L", "314", "", "Q", "QF", "6-1 6-2", "3", "Lukas Lacko", "53", "2", "", "R", "25.0266940452", "185", "SVK", "0", "51", "3", "4", "50", "31", "21", "2", "8", "5", "10", "4", "0", "31", "18", "17", "11", "7", "0", "0", "2", "", "", "0", "2012-305-028", "", "3", "3"],
          ["20121112", "Helsinki CH", "Hard", "C", "W", "314", "", "Q", "R16", "4-6 6-4 7-5", "3", "Dustin Brown", "154", "", "", "R", "27.9288158795", "196", "GER", "0", "136", "9", "10", "138", "72", "51", "32", "16", "13", "16", "3", "3", "91", "56", "39", "19", "16", "2", "6", "2", "", "", "1", "2012-305-023", "", "2", "2"],
          ["20121112", "Helsinki CH", "Hard", "C", "W", "314", "", "Q", "R32", "6-2 6-4", "3", "Karol Beck", "132", "", "", "R", "30.6119096509", "180", "SVK", "0", "78", "5", "5", "72", "42", "26", "13", "9", "8", "11", "5", "6", "56", "32", "18", "6", "9", "5", "11", "2", "", "", "1", "2012-305-014", "", "1", "1"],
          ["20121015", "Moscow Q", "Hard", "Q", "L", "313", "", "", "Q2", "6-2 6-1", "3", "Edouard Roger Vasselin", "116", "3", "", "R", "28.8815879535", "188", "FRA", "0", "53", "3", "3", "47", "26", "14", "5", "8", "1", "7", "4", "2", "38", "23", "19", "7", "7", "1", "2", "2", "", "", "0", "2012-897-021", "", "", ""],
          ["20121015", "Moscow Q", "Hard", "Q", "W", "313", "", "", "Q1", "6-3 6-3", "3", "Artem Smirnov", "507", "", "", "U", "24.7008898015", "", "UKR", "0", "74", "8", "3", "55", "31", "27", "13", "9", "6", "6", "0", "7", "53", "20", "13", "18", "9", "1", "4", "", "", "", "", "2012-897-010", "", "", ""],
          ["20121001", "Turkey F38", "Hard", "S", "L", "310", "4", "", "R16", "W/O", "3", "Tristan Samuel Weissborn", "668", "", "", "L", "20.93908282", "", "AUT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-TUR-38A-2012-019", "", "2", "2"],
          ["20121001", "Turkey F38", "Hard", "S", "W", "310", "4", "", "R32", "7-6(1) 6-4", "3", "Janicije Sasha Karic", "", "", "WC", "R", "17.0568104038", "183", "USA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-TUR-38A-2012-005", "", "1", "1"],
          ["20120924", "Turkey F37", "Hard", "S", "L", "314", "4", "", "QF", "7-6(5) 6-2", "3", "Adam Pavlasek", "516", "6", "", "R", "17.9630390144", "", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-TUR-37A-2012-026", "", "3", "3"],
          ["20120924", "Turkey F37", "Hard", "S", "W", "314", "4", "", "R16", "6-2 6-2", "3", "Claudio Fortuna", "696", "", "", "L", "22.4339493498", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-TUR-37A-2012-019", "", "2", "2"],
          ["20120924", "Turkey F37", "Hard", "S", "W", "314", "4", "", "R32", "6-2 6-2", "3", "Durukan Durmus", "1935", "", "WC", "L", "18.7022587269", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-TUR-37A-2012-005", "", "1", "1"],
          ["20120813", "Karshi CH", "Hard", "C", "L", "404", "", "Q", "F", "7-6(10) 6-2", "3", "Igor Kunitsyn", "145", "1", "", "R", "30.8692676249", "180", "RUS", "0", "98", "7", "5", "68", "42", "32", "9", "10", "6", "9", "2", "0", "73", "39", "31", "21", "10", "4", "5", "2", "", "", "1", "2012-3967-031", "", "", ""],
          ["20120813", "Karshi CH", "Hard", "C", "W", "404", "", "Q", "SF", "3-6 6-2 6-1", "3", "Di Wu", "227", "4", "", "R", "20.9144421629", "", "CHN", "0", "85", "13", "6", "71", "38", "31", "14", "12", "3", "6", "0", "2", "82", "47", "23", "18", "12", "8", "14", "2", "", "", "", "2012-3967-030", "", "", ""],
          ["20120813", "Karshi CH", "Hard", "C", "W", "404", "", "Q", "QF", "6-3 6-2", "3", "Dusan Lajovic", "138", "2", "", "R", "22.12183436", "180", "SRB", "0", "88", "3", "4", "73", "44", "32", "15", "9", "4", "4", "2", "3", "63", "38", "22", "11", "8", "4", "7", "1", "", "", "", "2012-3967-028", "", "3", "3"],
          ["20120813", "Karshi CH", "Hard", "C", "W", "404", "", "Q", "R16", "6-7(5) 6-2 5-2 RET", "3", "Denis Matsukevitch", "478", "", "Q", "R", "26.379192334", "190", "RUS", "0", "124", "7", "6", "84", "56", "44", "12", "13", "3", "5", "7", "4", "100", "68", "42", "15", "14", "7", "13", "2", "", "", "", "2012-3967-023", "", "2", "2"],
          ["20120813", "Karshi CH", "Hard", "C", "W", "404", "", "Q", "R32", "2-6 7-5 6-4", "3", "Illya Marchenko", "243", "6", "", "R", "24.9308692676", "185", "UKR", "0", "149", "5", "3", "110", "64", "40", "23", "15", "12", "16", "10", "7", "91", "47", "33", "23", "15", "6", "10", "2", "", "", "", "2012-3967-013", "", "1", "1"],
          ["20120806", "Samarkand CH", "Clay", "C", "L", "408", "", "Q", "R32", "6-4 6-4", "3", "Andrey Golubev", "146", "2", "", "R", "25.0431211499", "185", "KAZ", "0", "79", "3", "5", "66", "38", "26", "15", "10", "1", "3", "6", "1", "55", "29", "26", "16", "10", "0", "0", "1", "", "", "0", "2012-447-016", "", "1", "1"],
          ["20120723", "Astana CH", "Hard", "C", "L", "499", "", "Q", "R32", "6-2 6-3", "3", "Brydan Klein", "288", "", "", "R", "22.559890486", "183", "AUS", "0", "69", "3", "3", "65", "41", "24", "8", "9", "5", "10", "3", "0", "50", "31", "24", "10", "8", "4", "5", "2", "", "", "0", "2012-3618-006", "", "1", "1"],
          ["20120716", "Kazakhstan F7", "Hard", "S", "W", "531", "3", "", "F", "6-1 6-4", "3", "Ti Chen", "260", "1", "", "R", "28.7857631759", "183", "TPE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-KAZ-07A-2012-031", "", "", ""],
          ["20120716", "Kazakhstan F7", "Hard", "S", "W", "531", "3", "", "SF", "6-4 6-3", "3", "Denis Matsukevitch", "537", "2", "", "R", "26.302532512", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-KAZ-07A-2012-030", "", "", ""],
          ["20120716", "Kazakhstan F7", "Hard", "S", "W", "531", "3", "", "QF", "6-1 6-4", "3", "Denis Yevseyev", "607", "5", "", "U", "19.151266256", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-KAZ-07A-2012-027", "", "3", "3"],
          ["20120716", "Kazakhstan F7", "Hard", "S", "W", "531", "3", "", "R16", "6-1 7-6(1)", "3", "Temur Ismailov", "1063", "", "", "R", "17.5030800821", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-KAZ-07A-2012-022", "", "2", "2"],
          ["20120716", "Kazakhstan F7", "Hard", "S", "W", "531", "3", "", "R32", "6-3 6-4", "3", "Dor Belfer", "1825", "", "Q", "L", "19.3347022587", "", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-KAZ-07A-2012-012", "", "1", "1"],
          ["20120709", "Kazakhstan F6", "Hard", "S", "L", "534", "4", "", "SF", "3-6 6-2 6-1", "3", "Illya Marchenko", "441", "2", "", "R", "24.8350444901", "185", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-KAZ-06A-2012-030", "", "", ""],
          ["20120709", "Kazakhstan F6", "Hard", "S", "W", "534", "4", "", "QF", "6-1 6-2", "3", "Jung Woong Na", "719", "", "", "U", "19.6878850103", "", "KOR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-KAZ-06A-2012-027", "", "3", "3"],
          ["20120709", "Kazakhstan F6", "Hard", "S", "W", "534", "4", "", "R16", "6-1 RET", "3", "Vitaliy Kachanovskiy", "994", "", "", "U", "21.2429842574", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-KAZ-06A-2012-022", "", "2", "2"],
          ["20120709", "Kazakhstan F6", "Hard", "S", "W", "534", "4", "", "R32", "6-2 6-0", "3", "Danjil Braun", "1121", "", "", "U", "23.2443531828", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-KAZ-06A-2012-012", "", "1", "1"],
          ["20120618", "Germany F6", "Clay", "S", "L", "549", "", "", "QF", "6-2 1-6 7-5", "3", "Jean Marc Werner", "674", "", "Q", "R", "21.993155373", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-GER-06A-2012-025", "", "3", "3"],
          ["20120618", "Germany F6", "Clay", "S", "W", "549", "", "", "R16", "6-4 6-1", "3", "Julien Obry", "302", "1", "", "R", "20.7885010267", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-GER-06A-2012-017", "", "2", "2"],
          ["20120618", "Germany F6", "Clay", "S", "W", "549", "", "", "R32", "6-1 6-4", "3", "Alexey Vatutin", "542", "", "", "U", "19.6413415469", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-GER-06A-2012-002", "", "1", "1"],
          ["20120604", "Poland F3", "Clay", "S", "L", "565", "8", "", "QF", "6-0 6-4", "3", "Mateusz Kowalczyk", "829", "", "", "R", "25.0704996578", "193", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-POL-03A-2012-028", "", "3", "3"],
          ["20120604", "Poland F3", "Clay", "S", "W", "565", "8", "", "R16", "6-3 6-2", "3", "Neil Pauffley", "862", "", "", "R", "22.1656399726", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-POL-03A-2012-023", "", "2", "2"],
          ["20120604", "Poland F3", "Clay", "S", "W", "565", "8", "", "R32", "6-2 6-4", "3", "Andrei Vasilevski", "820", "", "", "R", "21.0020533881", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-POL-03A-2012-013", "", "1", "1"],
          ["20120528", "Poland F2", "Clay", "S", "L", "565", "7", "", "SF", "6-4 6-7(3) 6-4", "3", "Patrik Rosenholm", "383", "3", "", "R", "24.2299794661", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2012-M-FU-POL-02A-2012-030", "", "", ""],
          ["20120528", "Poland F2", "Clay", "S", "W", "565", "7", "", "QF", "7-5 6-2", "3", "Guillermo Hormazabal", "350", "2", "", "R", "27.2689938398", "", "CHI", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-POL-02A-2012-028", "", "3", "3"],
          ["20120528", "Poland F2", "Clay", "S", "W", "565", "7", "", "R16", "6-4 6-2", "3", "Jack Carpenter", "893", "", "Q", "U", "20.128678987", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-POL-02A-2012-023", "", "2", "2"],
          ["20120528", "Poland F2", "Clay", "S", "W", "565", "7", "", "R32", "6-4 6-0", "3", "James Marsalek", "668", "", "", "U", "20.1451060917", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-POL-02A-2012-013", "", "1", "1"],
          ["20120521", "Czech Republic F3", "Clay", "S", "L", "561", "", "", "R32", "6-1 6-4", "3", "Andrej Martin", "330", "3", "", "R", "22.6666666667", "180", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-CZE-03A-2012-012", "", "1", "1"],
          ["20120423", "Uzbekistan F2", "Hard", "S", "L", "574", "", "", "QF", "7-6(4) 2-6 7-6(8)", "3", "Ivan Sergeyev", "526", "", "", "R", "24.257357974", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-UZB-02A-2012-027", "", "3", "3"],
          ["20120423", "Uzbekistan F2", "Hard", "S", "W", "574", "", "", "R16", "6-3 6-3", "3", "Filip Veger", "1016", "", "Q", "R", "17.3388090349", "", "CRO", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-UZB-02A-2012-022", "", "2", "2"],
          ["20120423", "Uzbekistan F2", "Hard", "S", "W", "574", "", "", "R32", "6-2 6-2", "3", "Stanislav Poplavskyy", "458", "4", "", "R", "21.0595482546", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-UZB-02A-2012-012", "", "1", "1"],
          ["20120416", "Uzbekistan F1", "Hard", "S", "L", "576", "", "", "R32", "6-2 6-3", "3", "Vladyslav Manafov", "1293", "", "Q", "U", "18.984257358", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-UZB-01A-2012-010", "", "1", "1"],
          ["20120319", "Russia F7", "Hard", "S", "L", "581", "", "", "R16", "6-4 6-2", "3", "Aslan Karatsev", "1106", "", "Q", "R", "18.5379876797", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-07A-2012-021", "", "2", "2"],
          ["20120319", "Russia F7", "Hard", "S", "W", "581", "", "", "R32", "6-2 6-4", "3", "Gleb Alekseenko", "882", "", "", "R", "28.8350444901", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-07A-2012-010", "", "1", "1"],
          ["20120312", "Russia F6", "Carpet", "S", "L", "582", "", "", "R32", "6-4 6-7(6) 7-6(9)", "3", "Mikhail Fufygin", "507", "", "", "U", "21.8124572211", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-RUS-06A-2012-003", "", "1", "1"],
          ["20120220", "Russia F5", "Hard", "S", "L", "576", "", "", "R32", "6-2 6-3", "3", "Mikhail Biryukov", "746", "", "", "R", "19.8138261465", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-05A-2012-015", "", "1", "1"],
          ["20120123", "Russia F3", "Hard", "S", "L", "613", "", "", "SF", "6-4 6-4", "3", "Stanislav Poplavskyy", "567", "8", "", "R", "20.7912388775", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-RUS-03A-2012-029", "", "", ""],
          ["20120123", "Russia F3", "Hard", "S", "W", "613", "", "", "QF", "7-6(6) 7-5", "3", "Andis Juska", "531", "5", "", "R", "26.6529774127", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-RUS-03A-2012-026", "", "3", "3"],
          ["20120123", "Russia F3", "Hard", "S", "W", "613", "", "", "R16", "4-6 6-3 6-2", "3", "Anton Zaitsev", "1051", "", "", "U", "24.4873374401", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-RUS-03A-2012-019", "", "2", "2"],
          ["20120123", "Russia F3", "Hard", "S", "W", "613", "", "", "R32", "6-3 6-2", "3", "Andrey Kumantsov", "400", "3", "", "R", "25.4510609172", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-03A-2012-005", "", "1", "1"],
          ["20120116", "Russia F2", "Hard", "S", "L", "613", "", "", "R32", "7-6(6) 6-3", "3", "Andrei Levine", "1050", "", "", "R", "23.3456536619", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-02A-2012-011", "", "1", "1"],
          ["20120109", "Russia F1", "Hard", "S", "L", "613", "", "", "QF", "7-5 7-6(3)", "3", "Mikhail Fufygin", "568", "", "", "U", "21.659137577", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2012-M-FU-RUS-01A-2012-026", "", "3", "3"],
          ["20120109", "Russia F1", "Hard", "S", "W", "613", "", "", "R16", "6-4 7-6(5)", "3", "Sergey Betov", "547", "7", "", "R", "24.2354551677", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-01A-2012-020", "", "2", "2"],
          ["20120109", "Russia F1", "Hard", "S", "W", "613", "", "", "R32", "6-3 6-3", "3", "Nigmat Shofayziev", "1055", "", "", "R", "18.5270362765", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2012-M-FU-RUS-01A-2012-007", "", "1", "1"],
          ["20111128", "Kazakhstan F8", "Hard", "S", "L", "808", "", "", "F", "7-6(3) 6-2", "3", "Adrien Bossel", "559", "4", "", "L", "24.9171800137", "", "SUI", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-08A-2011-031", "", "", ""],
          ["20111128", "Kazakhstan F8", "Hard", "S", "W", "808", "", "", "SF", "6-1 6-3", "3", "Sergei Krotiouk", "750", "", "", "R", "33.4373716632", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-KAZ-08A-2011-030", "", "", ""],
          ["20111128", "Kazakhstan F8", "Hard", "S", "W", "808", "", "", "QF", "6-1 6-0", "3", "Gleb Bagateliya", "", "", "Q", "R", "19.9014373717", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-08A-2011-027", "", "3", "3"],
          ["20111128", "Kazakhstan F8", "Hard", "S", "W", "808", "", "", "R16", "6-2 7-6(3)", "3", "Daniiar Duldaev", "1866", "", "Q", "R", "19.0855578371", "", "KGZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-08A-2011-022", "", "2", "2"],
          ["20111128", "Kazakhstan F8", "Hard", "S", "W", "808", "", "", "R32", "7-6(2) 6-2", "3", "Murad Inoyatov", "521", "3", "", "R", "27.0390143737", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-08A-2011-012", "", "1", "1"],
          ["20111121", "Kazakhstan F7", "Hard", "S", "L", "837", "", "", "F", "6-2 7-6(6)", "3", "Adrien Bossel", "562", "5", "", "L", "24.8980150582", "", "SUI", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-07A-2011-031", "", "", ""],
          ["20111121", "Kazakhstan F7", "Hard", "S", "W", "837", "", "", "SF", "6-4 6-4", "3", "Julien Dubail", "402", "1", "", "R", "23.7672826831", "", "BEL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-07A-2011-029", "", "", ""],
          ["20111121", "Kazakhstan F7", "Hard", "S", "W", "837", "", "", "QF", "7-6(3) 6-4", "3", "Sergei Krotiouk", "747", "", "", "R", "33.4182067077", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-KAZ-07A-2011-026", "", "3", "3"],
          ["20111121", "Kazakhstan F7", "Hard", "S", "W", "837", "", "", "R16", "3-1 RET", "3", "Vitaliy Kachanovskiy", "1168", "", "Q", "U", "20.6105407255", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-KAZ-07A-2011-020", "", "2", "2"],
          ["20111121", "Kazakhstan F7", "Hard", "S", "W", "837", "", "", "R32", "7-6(6) 6-4", "3", "Marek Semjan", "707", "7", "", "U", "24.038329911", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-KAZ-07A-2011-008", "", "1", "1"],
          ["20111114", "Kazakhstan F6", "Hard", "S", "L", "829", "", "", "QF", "6-4 3-6 7-5", "3", "Vladimir Ivanov", "597", "5", "", "R", "24.5968514716", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-06A-2011-027", "", "3", "3"],
          ["20111114", "Kazakhstan F6", "Hard", "S", "W", "829", "", "", "R16", "7-5 2-6 6-3", "3", "Marek Semjan", "574", "4", "", "U", "24.0191649555", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-KAZ-06A-2011-022", "", "2", "2"],
          ["20111114", "Kazakhstan F6", "Hard", "S", "W", "829", "", "", "R32", "6-2 6-0", "3", "Nigmat Shofayziev", "1042", "", "", "R", "18.3737166324", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-KAZ-06A-2011-011", "", "1", "1"],
          ["20110829", "Poland F8", "Clay", "S", "L", "884", "", "", "R16", "6-3 6-3", "3", "Jerzy Janowicz", "141", "1", "WC", "R", "20.7912388775", "203", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-08A-2011-017", "", "2", "2"],
          ["20110829", "Poland F8", "Clay", "S", "W", "884", "", "", "R32", "6-3 6-0", "3", "Andrei Vasilevski", "699", "", "", "R", "20.2546201232", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-08A-2011-002", "", "1", "1"],
          ["20110822", "Poland F7", "Clay", "S", "L", "884", "", "", "QF", "5-7 6-0 6-4", "3", "Peter Torebko", "378", "2", "", "R", "23.5290896646", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-07A-2011-028", "", "3", "3"],
          ["20110822", "Poland F7", "Clay", "S", "W", "884", "", "", "R16", "6-3 6-4", "3", "Adam Chadaj", "637", "8", "", "L", "27.3073237509", "178", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-07A-2011-023", "", "2", "2"],
          ["20110822", "Poland F7", "Clay", "S", "W", "884", "", "", "R32", "6-3 4-6 6-3", "3", "Vladzimir Kruk", "1495", "", "LL", "R", "20.3668720055", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-07A-2011-014", "", "1", "1"],
          ["20110815", "Poland F6", "Clay", "S", "L", "1067", "", "", "R32", "6-1 6-2", "3", "Robert Varga", "813", "", "", "U", "23.0417522245", "", "HUN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-POL-06A-2011-014", "", "1", "1"],
          ["20110808", "Latvia F1", "Clay", "S", "L", "879", "", "", "SF", "5-7 7-5 6-1", "3", "Claudio Grassi", "328", "1", "", "U", "26.0369609856", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-LAT-01A-2011-029", "", "", ""],
          ["20110808", "Latvia F1", "Clay", "S", "W", "879", "", "", "QF", "5-7 6-3 6-2", "3", "Goncalo Pereira", "819", "8", "", "R", "26.9185489391", "", "POR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-LAT-01A-2011-026", "", "3", "3"],
          ["20110808", "Latvia F1", "Clay", "S", "W", "879", "", "", "R16", "6-4 6-1", "3", "Andis Juska", "413", "3", "", "R", "26.212183436", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-LAT-01A-2011-019", "", "2", "2"],
          ["20110808", "Latvia F1", "Clay", "S", "W", "879", "", "", "R32", "6-2 6-0", "3", "Anton Pavlov", "", "", "Q", "L", "16.0109514031", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-LAT-01A-2011-006", "", "1", "1"],
          ["20110801", "Lithuania F1", "Clay", "S", "L", "900", "", "", "R32", "6-2 7-6(10)", "3", "Jonas Luetjen", "1490", "", "Q", "U", "20.9664613279", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-LTU-01A-2011-006", "", "1", "1"],
          ["20110725", "Estonia F2", "Clay", "S", "L", "893", "", "", "R16", "6-3 6-2", "3", "Jozef Kovalik", "543", "6", "", "R", "18.7186858316", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-EST-02A-2011-021", "", "2", "2"],
          ["20110725", "Estonia F2", "Clay", "S", "W", "893", "", "", "R32", "6-2 6-2", "3", "Lorenzo Papasidero", "1118", "", "", "R", "21.2019164956", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-EST-02A-2011-010", "", "1", "1"],
          ["20110718", "Estonia F1", "Clay", "S", "L", "894", "", "", "R32", "6-3 4-6 7-5", "3", "Jozef Kovalik", "557", "8", "", "R", "18.6995208761", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-EST-01A-2011-004", "", "1", "1"],
          ["20110606", "Poland F4", "Clay", "S", "L", "884", "", "LL", "R16", "6-4 6-0", "3", "Pavol Cervenak", "264", "1", "", "R", "23.9315537303", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-04A-2011-017", "", "2", "2"],
          ["20110606", "Poland F4", "Clay", "S", "W", "884", "", "LL", "R32", "2-6 6-4 6-3", "3", "Romain Arneodo", "1101", "", "Q", "R", "18.8364134155", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-04A-2011-002", "", "1", "1"],
          ["20110530", "Poland F3", "Clay", "S", "L", "910", "", "", "R32", "6-3 1-6 6-4", "3", "Andriej Kapas", "1752", "", "WC", "R", "21.7796030116", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-03A-2011-002", "", "1", "1"],
          ["20110516", "Poland F1", "Clay", "S", "L", "902", "", "", "R16", "6-3 6-3", "3", "Blazej Koniusz", "600", "8", "", "R", "23.227926078", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-01A-2011-021", "", "2", "2"],
          ["20110516", "Poland F1", "Clay", "S", "W", "902", "", "", "R32", "6-3 7-6(5)", "3", "Francesco Borgo", "939", "", "", "R", "25.8370978782", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2011-M-FU-POL-01A-2011-010", "", "1", "1"],
          ["20110314", "Ukraine F3", "Hard", "S", "L", "901", "", "", "R32", "6-2 6-1", "3", "Nikolai Fidirko", "749", "7", "", "R", "23.7262149213", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2011-M-FU-UKR-03A-2011-013", "", "1", "1"],
          ["20101018", "Belarus F4", "Hard", "S", "L", "761", "", "", "R32", "6-3 7-5", "3", "Marcin Gawron", "407", "3", "", "U", "22.3983572895", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-BLR-04A-2010-005", "", "1", "1"],
          ["20101011", "Belarus F3", "Hard", "S", "L", "766", "", "", "R32", "7-5 6-4", "3", "Robert Godlewski", "949", "", "Q", "U", "26.6064339493", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-BLR-03A-2010-007", "", "1", "1"],
          ["20100906", "Russia F8", "Clay", "S", "L", "", "8", "", "QF", "6-2 6-4", "3", "Alexander Lobkov", "", "1", "", "R", "19.9151266256", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-RUS-08A-2010-025", "", "3", "3"],
          ["20100906", "Russia F8", "Clay", "S", "W", "", "8", "", "R16", "6-1 7-5", "3", "Vitali Reshetnikov", "1010", "", "", "U", "21.8370978782", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-RUS-08A-2010-018", "", "2", "2"],
          ["20100906", "Russia F8", "Clay", "S", "W", "", "8", "", "R32", "6-1 6-4", "3", "Dmitry Kalyuzhny", "", "", "Q", "R", "19.8521560575", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-RUS-08A-2010-004", "", "1", "1"],
          ["20100830", "Poland F7", "Clay", "S", "L", "803", "8", "", "R32", "6-3 6-4", "3", "Wojciech Lutkowski", "", "", "LL", "R", "18.5270362765", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-POL-07A-2010-013", "", "1", "1"],
          ["20100823", "Poland F6", "Clay", "S", "L", "759", "", "", "R16", "6-3 6-4", "3", "Grzegorz Panfil", "499", "4", "", "L", "22.6420260096", "183", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-POL-06A-2010-022", "", "2", "2"],
          ["20100823", "Poland F6", "Clay", "S", "W", "759", "", "", "R32", "6-1 6-3", "3", "Hiroyasu Ehara", "956", "", "", "U", "19.1813826146", "", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-POL-06A-2010-011", "", "1", "1"],
          ["20100816", "Belarus F2", "Clay", "S", "L", "760", "", "", "R32", "6-3 7-5", "3", "Patrick Taubert", "630", "", "Q", "U", "23.0527036277", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-BLR-02A-2010-006", "", "1", "1"],
          ["20100809", "Belarus F1", "Clay", "S", "L", "842", "", "", "R32", "3-6 6-4 6-2", "3", "Igor Rud", "", "", "Q", "R", "22.2313483915", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-BLR-01A-2010-014", "", "1", "1"],
          ["20100802", "Lithuania F1", "Clay", "S", "L", "840", "7", "", "SF", "6-4 7-5", "3", "Timo Nieminen", "304", "1", "", "R", "28.8213552361", "185", "FIN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-LTU-01A-2010-029", "", "", ""],
          ["20100802", "Lithuania F1", "Clay", "S", "W", "840", "7", "", "QF", "6-4 2-6 6-3", "3", "Michal Schmid", "462", "4", "", "U", "21.6755646817", "", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-LTU-01A-2010-026", "", "3", "3"],
          ["20100802", "Lithuania F1", "Clay", "S", "W", "840", "7", "", "R16", "6-1 6-2", "3", "Loic Ducourau", "", "", "Q", "U", "18.9678302533", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-LTU-01A-2010-020", "", "2", "2"],
          ["20100802", "Lithuania F1", "Clay", "S", "W", "840", "7", "", "R32", "6-1 6-3", "3", "Artun Klimenka", "", "", "Q", "R", "21.3059548255", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-LTU-01A-2010-008", "", "1", "1"],
          ["20100719", "Estonia F2", "Clay", "S", "L", "767", "", "", "R32", "6-2 6-4", "3", "Pablo Santos", "335", "4", "", "R", "26.0917180014", "183", "ESP", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-EST-02A-2010-005", "", "1", "1"],
          ["20100607", "Poland F4", "Clay", "S", "L", "783", "", "", "R32", "1-6 6-2 6-3", "3", "Stanislav Poplavskyy", "1035", "", "Q", "U", "19.1813826146", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-POL-04A-2010-014", "", "1", "1"],
          ["20100531", "Poland F3", "Clay", "S", "L", "", "", "", "R16", "6-3 6-3", "3", "Grzegorz Panfil", "", "5", "", "L", "22.4120465435", "183", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-POL-03A-2010-021", "", "2", "2"],
          ["20100531", "Poland F3", "Clay", "S", "W", "", "", "", "R32", "6-3 4-6 6-4", "3", "Peter Lucassen", "", "", "", "R", "22.2258726899", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-POL-03A-2010-010", "", "1", "1"],
          ["20100517", "Bulgaria F3", "Clay", "S", "L", "792", "", "Q", "R32", "6-3 6-3", "3", "Pavel Katliarov", "825", "", "Q", "U", "22.2313483915", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-BUL-03A-2010-007", "", "1", "1"],
          ["20100510", "Bulgaria F2", "Clay", "S", "L", "792", "", "", "R32", "6-2 6-3", "3", "Alexandre Folie", "548", "5", "", "U", "20.2710472279", "", "BEL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-BUL-02A-2010-013", "", "1", "1"],
          ["20100503", "Bulgaria F1", "Clay", "S", "L", "796", "", "", "R32", "6-3 6-0", "3", "Andrei Mlendea", "465", "1", "", "U", "25.7467488022", "", "ROU", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-BUL-01A-2010-001", "", "1", "1"],
          ["20100322", "Kazakhstan F2", "Hard", "S", "L", "716", "", "", "R32", "6-3 6-4", "3", "Alexander Slabinsky", "718", "", "", "R", "24.0438056126", "185", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-KAZ-02A-2010-015", "", "1", "1"],
          ["20100315", "Kazakhstan F1", "Hard", "S", "L", "", "", "", "R32", "0-6 7-6(4) 6-0", "3", "Alexander Slabinsky", "", "", "", "R", "24.0246406571", "185", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-KAZ-01A-2010-007", "", "1", "1"],
          ["20100222", "Azerbaijan F2", "Hard", "S", "L", "714", "", "", "R16", "6-0 2-6 6-2", "3", "Denis Matsukevitch", "414", "7", "", "R", "23.9069130732", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-AZE-02A-2010-020", "", "2", "2"],
          ["20100222", "Azerbaijan F2", "Hard", "S", "W", "714", "", "", "R32", "6-2 6-2", "3", "Vugar Aliev", "", "", "WC", "U", "16.4709103354", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2010-M-FU-AZE-02A-2010-007", "", "1", "1"],
          ["20100215", "Azerbaijan F1", "Hard", "S", "L", "713", "", "", "R16", "6-4 6-4", "3", "Jerzy Janowicz", "332", "1", "", "R", "19.2580424367", "203", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-AZE-01A-2010-017", "", "2", "2"],
          ["20100215", "Azerbaijan F1", "Hard", "S", "W", "713", "", "", "R32", "3-6 7-6(7) 6-4", "3", "Alexander Lobkov", "480", "", "", "R", "19.3593429158", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2010-M-FU-AZE-01A-2010-002", "", "1", "1"],
          ["20091130", "Malaysia F6", "Hard", "S", "L", "662", "", "", "R32", "1-6 7-5 6-0", "3", "David Rice", "521", "8", "", "R", "20.9117043121", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-MAS-06A-2009-009", "", "1", "1"],
          ["20091123", "Malaysia F5", "Hard", "S", "L", "664", "", "", "R32", "6-3 6-3", "3", "Sean Thornley", "823", "", "Q", "R", "20.4818617385", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-MAS-05A-2009-014", "", "1", "1"],
          ["20091116", "Malaysia F4", "Hard", "S", "L", "669", "", "", "R32", "6-2 7-5", "3", "Thomas Oger", "435", "2", "", "U", "29.6536618754", "", "MON", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-MAS-04A-2009-016", "", "1", "1"],
          ["20091019", "Belarus F2", "Hard", "S", "L", "736", "7", "", "QF", "3-6 6-3 6-4", "3", "Patrick Taubert", "469", "2", "", "U", "22.2286105407", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-BLR-02A-2009-028", "", "3", "3"],
          ["20091019", "Belarus F2", "Hard", "S", "W", "736", "7", "", "R16", "5-0 RET", "3", "Vitali Reshetnikov", "901", "", "", "U", "20.9555099247", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-BLR-02A-2009-023", "", "2", "2"],
          ["20091019", "Belarus F2", "Hard", "S", "W", "736", "7", "", "R32", "7-5 6-1", "3", "Egor Gerasimov", "", "", "WC", "R", "16.9363449692", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-BLR-02A-2009-013", "", "1", "1"],
          ["20091012", "Belarus F1", "Carpet", "S", "L", "742", "6", "", "QF", "2-6 6-2 6-1", "3", "Michal Przysiezny", "601", "4", "", "R", "25.6536618754", "185", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2009-M-FU-BLR-01A-2009-027", "", "3", "3"],
          ["20091012", "Belarus F1", "Carpet", "S", "W", "742", "6", "", "R16", "7-5 6-4", "3", "Nikolai Fidirko", "1184", "", "", "U", "22.3271731691", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-BLR-01A-2009-021", "", "2", "2"],
          ["20091012", "Belarus F1", "Carpet", "S", "W", "742", "6", "", "R32", "6-4 6-1", "3", "Andemir Karanashev", "1379", "", "", "U", "23.4277891855", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-BLR-01A-2009-009", "", "1", "1"],
          ["20090817", "Poland F4", "Clay", "S", "L", "735", "7", "", "QF", "6-2 6-4", "3", "Marcin Gawron", "293", "1", "WC", "U", "21.2292950034", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-POL-04A-2009-025", "", "3", "3"],
          ["20090817", "Poland F4", "Clay", "S", "W", "735", "7", "", "R16", "6-4 6-3", "3", "Jedrzej Zarski", "1087", "", "", "U", "28.4873374401", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-POL-04A-2009-018", "", "2", "2"],
          ["20090817", "Poland F4", "Clay", "S", "W", "735", "7", "", "R32", "6-2 6-2", "3", "Mateusz Skorek", "", "", "Q", "U", "21.6372347707", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-POL-04A-2009-004", "", "1", "1"],
          ["20090803", "Lithuania F1", "Clay", "S", "L", "617", "", "", "R16", "6-2 6-3", "3", "Pierre Metenier", "402", "1", "", "U", "25.8015058179", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-LTU-01A-2009-017", "", "2", "2"],
          ["20090803", "Lithuania F1", "Clay", "S", "W", "617", "", "", "R32", "7-5 4-6 6-1", "3", "Benas Majauskas", "", "", "WC", "R", "17.2238193018", "", "LTU", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-LTU-01A-2009-002", "", "1", "1"],
          ["20090727", "Latvia F1", "Clay", "S", "L", "626", "7", "", "R32", "7-6(7) 6-1", "3", "Mikhail Balmashev", "1418", "", "Q", "U", "18.9760438056", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-LAT-01A-2009-009", "", "1", "1"],
          ["20090720", "Estonia F2", "Clay", "S", "L", "643", "8", "", "R16", "6-1 6-2", "3", "Markus Eriksson", "1008", "", "", "U", "19.6386036961", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-EST-02A-2009-020", "", "2", "2"],
          ["20090720", "Estonia F2", "Clay", "S", "W", "643", "8", "", "R32", "6-1 2-1 RET", "3", "Jaak Poldma", "798", "", "", "U", "21.1772758385", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-EST-02A-2009-008", "", "1", "1"],
          ["20090713", "Estonia F1", "Clay", "S", "L", "655", "", "", "QF", "6-2 6-1", "3", "Jurgen Zopp", "482", "5", "", "R", "21.2895277207", "190", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-EST-01A-2009-026", "", "3", "3"],
          ["20090713", "Estonia F1", "Clay", "S", "W", "655", "", "", "R16", "6-4 6-1", "3", "Oskars Vaskis", "1553", "", "", "U", "29.5277207392", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-EST-01A-2009-019", "", "2", "2"],
          ["20090713", "Estonia F1", "Clay", "S", "W", "655", "", "", "R32", "6-3 6-2", "3", "Taavo Roos", "1766", "", "LL", "R", "25.6563997262", "", "EST", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-EST-01A-2009-005", "", "1", "1"],
          ["20090420", "Uzbekistan F2", "Hard", "S", "L", "595", "8", "", "R16", "3-6 7-5 6-3", "3", "Syrym Abdukhalikov", "701", "", "", "U", "21.7029431896", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-UZB-02A-2009-023", "", "2", "2"],
          ["20090420", "Uzbekistan F2", "Hard", "S", "W", "595", "8", "", "R32", "6-0 6-2", "3", "Andrei Plotniy", "730", "", "", "U", "21.0349075975", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-UZB-02A-2009-013", "", "1", "1"],
          ["20090413", "Uzbekistan F1", "Hard", "S", "L", "603", "5", "", "QF", "6-1 6-3", "3", "Kamil Capkovic", "278", "1", "", "R", "22.8637919233", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-UZB-01A-2009-025", "", "3", "3"],
          ["20090413", "Uzbekistan F1", "Hard", "S", "W", "603", "5", "", "R16", "6-2 7-6(3)", "3", "Alexander Lobkov", "1059", "", "", "R", "18.5160848734", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-UZB-01A-2009-018", "", "2", "2"],
          ["20090413", "Uzbekistan F1", "Hard", "S", "W", "603", "5", "", "R32", "1-6 7-6(5) 6-3", "3", "Ilia Shatskiy", "", "", "Q", "U", "17.7303216975", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-UZB-01A-2009-004", "", "1", "1"],
          ["20090406", "Russia F1", "Carpet", "S", "L", "605", "", "", "R16", "6-3 6-2", "3", "Konstantin Kravchuk", "280", "1", "Q", "R", "24.1149897331", "190", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-RUS-01A-2009-017", "", "2", "2"],
          ["20090406", "Russia F1", "Carpet", "S", "W", "605", "", "", "R32", "6-2 1-6 6-4", "3", "Sergei Krotiouk", "550", "", "", "R", "30.7926078029", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-RUS-01A-2009-002", "", "1", "1"],
          ["20090309", "Kazakhstan F2", "Hard", "S", "L", "617", "", "", "QF", "2-6 6-3 6-4", "3", "Marek Semjan", "355", "2", "", "U", "21.3360711841", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-KAZ-02A-2009-028", "", "3", "3"],
          ["20090309", "Kazakhstan F2", "Hard", "S", "W", "617", "", "", "R16", "6-3 6-3", "3", "Syrym Abdukhalikov", "728", "", "", "U", "21.5879534565", "", "KAZ", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-KAZ-02A-2009-023", "", "2", "2"],
          ["20090309", "Kazakhstan F2", "Hard", "S", "W", "617", "", "", "R32", "6-4 6-7(7) 7-6(5)", "3", "Artem Smirnov", "559", "8", "", "U", "21.0978781656", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-KAZ-02A-2009-013", "", "1", "1"],
          ["20090302", "Kazakhstan F1", "Hard", "S", "L", "620", "", "", "R32", "4-6 6-2 7-6(4)", "3", "Marek Semjan", "357", "3", "", "U", "21.3169062286", "", "SVK", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-KAZ-01A-2009-012", "", "1", "1"],
          ["20090202", "Israel F3", "Hard", "S", "L", "642", "", "", "SF", "3-6 6-0 6-0", "3", "Harel Levy", "265", "1", "WC", "R", "30.4969199179", "185", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2009-M-FU-ISR-03A-2009-029", "", "", ""],
          ["20090202", "Israel F3", "Hard", "S", "W", "642", "", "", "QF", "7-6(6) 7-5", "3", "Xander Spong", "", "", "Q", "U", "18.9486652977", "", "NED", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-ISR-03A-2009-026", "", "3", "3"],
          ["20090202", "Israel F3", "Hard", "S", "W", "642", "", "", "R16", "6-7(6) 6-4 6-4", "3", "Sergey Betov", "647", "", "", "U", "21.3032169747", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-ISR-03A-2009-019", "", "2", "2"],
          ["20090202", "Israel F3", "Hard", "S", "W", "642", "", "", "R32", "6-1 6-4", "3", "Daniel Kumlin", "1278", "", "Q", "U", "21.4674880219", "", "SWE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-ISR-03A-2009-006", "", "1", "1"],
          ["20090126", "Israel F2", "Hard", "S", "L", "", "", "", "R32", "6-2 6-2", "3", "Mikhail Fufygin", "", "", "", "U", "18.7077344285", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-ISR-02A-2009-015", "", "1", "1"],
          ["20090119", "Israel F1", "Hard", "S", "L", "663", "7", "", "QF", "7-6(4) 6-3", "3", "Amir Hadad", "1060", "", "", "R", "30.9212867899", "183", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2009-M-FU-ISR-01A-2009-028", "", "3", "3"],
          ["20090119", "Israel F1", "Hard", "S", "W", "663", "7", "", "R16", "6-0 6-1", "3", "Andrei George Daraban", "", "", "Q", "L", "19.5728952772", "", "ROU", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-ISR-01A-2009-023", "", "2", "2"],
          ["20090119", "Israel F1", "Hard", "S", "W", "663", "7", "", "R32", "2-6 6-3 6-2", "3", "Ilia Shatskiy", "", "", "Q", "U", "17.5003422313", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2009-M-FU-ISR-01A-2009-013", "", "1", "1"],
          ["20081124", "Israel F5", "Hard", "S", "L", "647", "", "", "R16", "6-4 6-1", "3", "Pierre Metenier", "417", "7", "", "U", "25.1115674196", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-ISR-05A-2008-021", "", "2", "2"],
          ["20081124", "Israel F5", "Hard", "S", "W", "647", "", "", "R32", "6-3 6-3", "3", "Bastian Knittel", "598", "", "", "L", "25.2977412731", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2008-M-FU-ISR-05A-2008-010", "", "1", "1"],
          ["20081117", "Israel F4", "Hard", "S", "L", "652", "", "", "R32", "6-4 6-4", "3", "Yannick Mertens", "331", "4", "", "R", "21.3990417522", "", "BEL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-ISR-04A-2008-005", "", "1", "1"],
          ["20081020", "St. Petersburg Q", "Hard", "Q", "L", "641", "", "", "Q1", "6-1 6-4", "3", "Artem Smirnov", "441", "", "", "U", "20.7145790554", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-22-011", "", "", ""],
          ["20080825", "Poland F6", "Clay", "S", "L", "660", "", "", "R32", "7-6(8) 4-6 6-2", "3", "Robert Godlewski", "699", "", "", "U", "24.4791238877", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-POL-06A-2008-003", "", "1", "1"],
          ["20080818", "Poland F5", "Clay", "S", "L", "668", "8", "", "QF", "6-0 6-0", "3", "Benjamin Balleret", "406", "2", "", "R", "25.5906913073", "185", "MON", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-POL-05A-2008-028", "", "3", "3"],
          ["20080818", "Poland F5", "Clay", "S", "W", "668", "8", "", "R16", "6-1 6-7(5) 6-1", "3", "Piotr Dzikiewicz", "", "", "Q", "R", "26.417522245", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-POL-05A-2008-023", "", "2", "2"],
          ["20080818", "Poland F5", "Clay", "S", "W", "668", "8", "", "R32", "7-6(1) 2-6 7-5", "3", "Andrzej Grusiecki", "1134", "", "Q", "U", "25.8097193703", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-POL-05A-2008-013", "", "1", "1"],
          ["20080811", "Belarus F4", "Clay", "S", "L", "809", "", "", "R16", "6-1 6-0", "3", "Deniss Pavlovs", "518", "2", "", "U", "25.325119781", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-04A-2008-024", "", "2", "2"],
          ["20080811", "Belarus F4", "Clay", "S", "W", "809", "", "", "R32", "6-1 3-1 RET", "3", "Ricardo Seritti", "", "", "Q", "U", "24.2984257358", "", "ARG", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-BLR-04A-2008-015", "", "1", "1"],
          ["20080804", "Belarus F3", "Clay", "S", "L", "815", "6", "", "F", "6-4 6-2", "3", "Jan Mertl", "382", "1", "", "R", "26.5845311431", "190", "CZE", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-03A-2008-031", "", "", ""],
          ["20080804", "Belarus F3", "Clay", "S", "W", "815", "6", "", "SF", "0-6 6-1 6-2", "3", "Deniss Pavlovs", "477", "2", "", "U", "25.3059548255", "", "LAT", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-03A-2008-030", "", "", ""],
          ["20080804", "Belarus F3", "Clay", "S", "W", "815", "6", "", "QF", "2-6 7-5 6-3", "3", "Andrei Karatchenia", "632", "3", "", "U", "19.5865845311", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-03A-2008-027", "", "3", "3"],
          ["20080804", "Belarus F3", "Clay", "S", "W", "815", "6", "", "R16", "6-0 6-1", "3", "Marco Bella", "926", "", "", "U", "20.3367556468", "", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-03A-2008-021", "", "2", "2"],
          ["20080804", "Belarus F3", "Clay", "S", "W", "815", "6", "", "R32", "6-1 1-6 6-4", "3", "Nick Trkulja", "1257", "", "", "R", "24.9555099247", "", "AUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-03A-2008-009", "", "1", "1"],
          ["20080707", "Turkey F8", "Hard", "S", "L", "857", "", "", "R32", "6-3  6-3", "3", "Pierrick Ysern", "565", "6", "", "U", "23.7015742642", "", "FRA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-TUR-08A-2008-008", "", "1", "1"],
          ["20080630", "Turkey F7", "Hard", "S", "L", "", "", "Q", "QF", "6-4 3-6 6-1", "3", "Sebastian Rieschick", "", "6", "", "R", "22.3709787817", "", "GER", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-TUR-07A-2008-027", "", "3", "3"],
          ["20080630", "Turkey F7", "Hard", "S", "W", "", "", "Q", "R16", "2-6 6-3 6-1", "3", "Baris Erguden", "", "", "WC", "U", "22.4941820671", "", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-TUR-07A-2008-022", "", "2", "2"],
          ["20080630", "Turkey F7", "Hard", "S", "W", "", "", "Q", "R32", "6-4 6-4", "3", "Riccardo Ghedin", "", "4", "", "R", "22.5681040383", "188", "ITA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-TUR-07A-2008-012", "", "1", "1"],
          ["20080616", "Belarus F2", "Hard", "S", "L", "1160", "", "", "QF", "4-6 6-1 7-5", "3", "Sergey Betov", "880", "", "", "U", "20.6707734428", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-02A-2008-026", "", "3", "3"],
          ["20080616", "Belarus F2", "Hard", "S", "W", "1160", "", "", "R16", "5-7 6-2 6-2", "3", "Mikhail Fufygin", "865", "", "", "U", "18.0944558522", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-BLR-02A-2008-020", "", "2", "2"],
          ["20080616", "Belarus F2", "Hard", "S", "W", "1160", "", "", "R32", "4-6 7-6(2) 6-2", "3", "Andrei Gorban", "534", "7", "", "U", "24.9117043121", "", "MDA", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-BLR-02A-2008-008", "", "1", "1"],
          ["20080609", "Belarus F1", "Hard", "S", "L", "1165", "", "WC", "SF", "6-2 6-2", "3", "Uladzimir Ignatik", "506", "", "", "R", "17.9055441478", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-01A-2008-030", "", "", ""],
          ["20080609", "Belarus F1", "Hard", "S", "W", "1165", "", "WC", "QF", "7-5 6-2", "3", "Andrei Karatchenia", "803", "", "", "U", "19.4332648871", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-01A-2008-027", "", "3", "3"],
          ["20080609", "Belarus F1", "Hard", "S", "W", "1165", "", "WC", "R16", "6-3 6-3", "3", "Dmitri Sitak", "705", "", "", "R", "25.2676249144", "183", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-01A-2008-022", "", "2", "2"],
          ["20080609", "Belarus F1", "Hard", "S", "W", "1165", "", "WC", "R32", "6-3 5-7 6-4", "3", "Alexander Krasnorutskiy", "", "", "", "R", "20.9801505818", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2008-M-FU-BLR-01A-2008-011", "", "1", "1"],
          ["20080505", "Uzbekistan F1", "Hard", "S", "L", "1172", "", "Q", "R16", "7-6(6) 7-5", "3", "Kento Takeuchi", "643", "5", "", "U", "20.3778234086", "", "JPN", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-UZB-01A-2008-018", "", "2", "2"],
          ["20080505", "Uzbekistan F1", "Hard", "S", "W", "1172", "", "Q", "R32", "6-2 6-0", "3", "Djanibek Orazoliev", "1664", "", "WC", "U", "18.160164271", "", "UZB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2008-M-FU-UZB-01A-2008-003", "", "1", "1"],
          ["20071126", "Israel F5", "Hard", "S", "L", "1288", "", "Q", "R16", "6-2 6-2", "3", "Harel Levy", "171", "1", "", "R", "29.3086926762", "185", "ISR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2007-M-FU-ISR-05A-2007-017", "", "2", "2"],
          ["20071126", "Israel F5", "Hard", "S", "W", "1288", "", "Q", "R32", "6-1 6-4", "3", "Valentin Dimov", "1382", "", "Q", "R", "18.7077344285", "", "BUL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-ISR-05A-2007-002", "", "1", "1"],
          ["20071119", "Israel F4", "Hard", "S", "L", "1277", "", "Q", "R16", "7-6(5) 6-1", "3", "Chris Eaton", "738", "", "", "R", "19.9780971937", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2007-M-FU-ISR-04A-2007-024", "", "2", "2"],
          ["20071119", "Israel F4", "Hard", "S", "W", "1277", "", "Q", "R32", "6-2 6-3", "3", "Todor Enev", "357", "2", "", "R", "25.7768651608", "", "BUL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-ISR-04A-2007-016", "", "1", "1"],
          ["20071029", "Tunisia F6", "Hard", "S", "L", "1364", "", "Q", "R16", "6-3 6-1", "3", "Mohamed Mamoun", "330", "4", "", "U", "26.0369609856", "", "EGY", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-TUN-06A-2007-022", "", "2", "2"],
          ["20071029", "Tunisia F6", "Hard", "S", "W", "1364", "", "Q", "R32", "6-3 6-4", "3", "Simeon Ivanov", "750", "", "Q", "U", "22.2669404517", "", "BUL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-TUN-06A-2007-011", "", "1", "1"],
          ["20071015", "Tunisia F4", "Hard", "S", "L", "1474", "", "Q", "R16", "7-5 7-6(3)", "3", "Marsel Ilhan", "347", "2", "", "R", "20.3449691992", "190", "TUR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-TUN-04A-2007-024", "", "2", "2"],
          ["20071015", "Tunisia F4", "Hard", "S", "W", "1474", "", "Q", "R32", "3-6 7-6(3) 7-5", "3", "Ivan Djurdjevic", "1245", "", "Q", "U", "20.1314168378", "", "SRB", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2007-M-FU-TUN-04A-2007-015", "", "1", "1"],
          ["20070827", "Poland F8", "Clay", "S", "L", "1506", "", "Q", "R32", "6-2 4-6 6-4", "3", "Edward Seator", "808", "", "", "U", "21.3880903491", "", "GBR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-POL-08A-2007-002", "", "1", "1"],
          ["20070820", "Poland F7", "Clay", "S", "L", "1504", "", "Q", "R32", "6-4 6-3", "3", "Jedrzej Zarski", "892", "", "", "U", "26.4941820671", "", "POL", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2007-M-FU-POL-07A-2007-006", "", "1", "1"],
          ["20070618", "Belarus F4", "Clay", "S", "L", "1500", "", "WC", "R32", "2-6 6-4 7-5", "3", "Mikhail Lifshits", "959", "", "", "U", "20.8240930869", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-BLR-04A-2007-011", "", "1", "1"],
          ["20070521", "Belarus F2", "Hard", "S", "L", "", "", "Q", "R16", "6-3 3-6 6-1", "3", "Artem Smirnov", "959", "", "", "U", "19.2963723477", "", "UKR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2007-M-FU-BLR-02A-2007-024", "", "2", "2"],
          ["20070521", "Belarus F2", "Hard", "S", "W", "", "", "Q", "R32", "6-1 7-5", "3", "Alexandr Zotov", "", "", "Q", "U", "19.0335386721", "", "BLR", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "2007-M-FU-BLR-02A-2007-015", "", "1", "1"],
          ["20060612", "Belarus F1", "Clay", "S", "L", "", "", "Q", "R32", "6-4 4-6 6-3", "3", "Mikhail Ptukhin", "1415", "", "Q", "R", "20.2299794661", "", "RUS", "0", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2006-M-FU-BLR-01A-2006-003", "", "1", "1"]
          ];


var fourspaces = "\u00a0\u00a0\u00a0\u00a0";

var round_dict = { "R16": 9,
                   "W": 14,
                   "F": 13,
                   "RR": 8,
                   "R64": 6,
                   "R128": 5,
                   "QF": 10,
                   "SF": 11,
                   "R32": 7,
                   'Q1': 1,
                   'Q2': 2,
                   'Q3': 3,
                   'Q4': 4,
                   "": 0,
                   "BR": 12
                  };

// add parser through the tablesorter addParser method 
$.tablesorter.addParser({ 
    // set a unique id 
    id: 'rounds', 
    is: function(s) { 
        // return false so this parser is not auto detected 
        return false; 
    }, 
    format: function(s) { 
        // format your data for normalization 
        return round_dict[s]; 
    }, 
    // set type, either numeric or text 
    type: 'numeric'
});

$.tablesorter.addParser({ 
    id: 'roundsDesc', 
    is: function(s) {  
        return false; 
    }, 
    format: function(s) {  
        return 100 - round_dict[s]; 
    }, 
    type: 'numeric'
});

$.tablesorter.addParser({  
    id: 'scores', 
    is: function(s) {return false;}, 
    format: function(s) {
        if (s == 'W/O') {return 0;}
        if (s.slice(-3) == 'RET') {s = s.slice(0, -4);}        
        if (s == 'UNR') {return 2000;}
        else {return s;}
    },  
    type: 'numeric'
});

$.tablesorter.addParser({  
    id: 'ranks', 
    is: function(s) {return false;}, 
    format: function(s) { 
        if (s == 'UNR') {return 3000;}
        else if (s.indexOf('/') !== -1) {
            var dranks = s.split(/\//);
            if (dranks[0] == "UNR") {var rank1 = 3000;}
            else {rank1 = parseInt(dranks[0]);}
            if (dranks[1] == "UNR") {var rank2 = 3000;}
            else {rank2 = parseInt(dranks[1]);}
            return rank1 + rank2;
            }
        else {return s;} 
    },  
    type: 'numeric'
});

$.tablesorter.addParser({  
    id: 'ascNum', 
    is: function(s) {return false;}, 
    format: function(s) { 
        if (s == '' || s == '-') {return 1000;} 
        else if (s.indexOf("%") != -1) {return parseFloat(s.slice(0,-1));}
        else if (s.indexOf(":") != -1) {
            var hm = s.split(':');
            var minutes = (parseInt(hm[0])*60) + parseInt(hm[1]);
            return minutes;
            }
        else {return s;} 
    },  
    type: 'numeric'
});

$.tablesorter.addParser({  
    id: 'descNum', 
    is: function(s) {return false;}, 
    format: function(s) { 
        if (s == '' || s == '-') {return 1000;} 
        else if (s.indexOf("%") != -1) {return 1000 - parseFloat(s.slice(0,-1));}
        else if (s.indexOf(":") != -1) {
            var hm = s.split(':');
            var minutes = (parseInt(hm[0])*60) + parseInt(hm[1]);
            return 1000 - minutes;
            }        
        else {return 1000 - s;} 
    },  
    type: 'numeric'
});

$.tablesorter.addParser({  
    id: 'dates', 
    is: function(s) {return false;}, 
    format: function(s) { 
        // format your data for normalization
        var yyyy = s.slice(-4);
        var mm = rmonths[s.slice(-8, -5)];
        var day = s.slice(0, -9);
        if (day.length == 1) {
            var dd = '0' + day;
            }
        else {
            var dd = day;
            }
        return yyyy + mm + dd; 
    },  
    type: 'numeric'
}); 

$.tablesorter.addParser({ 
    id: 'datesDesc', 
    is: function(s) {return false;}, 
    format: function(s) { 
        var yyyy = s.slice(-4);
        var mm = rmonths[s.slice(-8, -5)];
        var day = s.slice(0, -9);
        if (day.length == 1) {
            var dd = '0' + day;
            }
        else {
            var dd = day;
            }
        var ymd = yyyy + mm + dd; 
        return 100000000 - parseInt(ymd);
    },  
    type: 'numeric'
});
 
function playeratt(pname, s, q, cc, lk) {
    // lk = 1 or 0
    var precede = ''
    if (s != '') {
        precede = '(' + s;
        if (q != '') {
            precede = precede + '/' + q;
            }
        precede = precede + ')';
        }
    else if (q != '') {
        precede = '(' + q + ')';
        }
    //var nlink = '<a href="http://www.tennisabstract.com/cgi-bin/player.cgi?p=' + pname.replace(/ /g, '') + '">' + pname + '</a>'
    if (cc == '') {var country = '';}
    else {var country = ' [' + cc + ']';}
    if (lk == 1) {return precede + nlink + country;}
    else {return precede + pname + country;}
    
    };

function alignRound(num, dec, perc) {
    if (perc == 1) {
        num = num*100;
        }
    var intrate = Math.round((num)*Math.pow(10, dec))/Math.pow(10, dec);
    var extra = intrate + Math.pow(10, -1*(dec+1));
    var strex = String(extra);
    var indexdot = strex.indexOf('.');
    var done;
    if (perc == 1) {done = strex.slice(0, (indexdot+dec+1)) + '%';}
    else {done = strex.slice(0, (indexdot+dec+1));}
    if (done[0] == 'N' || done[0] == '%') {return '-';}
    else if (done[0] == 'I') {return '-';} // infinity
    else if (dec == 0) {return done.slice(0, -2) + done.slice(-1);}
    else {return done;}
    };
                  
function make(tag, attr, cont) {
    if (arguments.length == 2 && (attr instanceof Array || typeof attr == "string")) {
        cont = attr;
        attributes = null;
        }
    var open = "<" + tag;
    var close = "</" + tag + ">";
    if (attr) {
	for(var name in attr) {
            attx = " " + name + '="' + attr[name] + '"';
	    open = open.concat(attx);
            }
        }
    open = open.concat(">");
    if (cont instanceof Array) {
	var content = cont.join("");
	}
    else {
	var content = cont;
	} 
    var elem = open + content + close;
    return elem;
    }

function sortRev(a,b) {return b - a;}

url2filter = {'K': 'hand',
              'E': 'round',
              'I': 'rank',
              'L': 'age',
              'C': 'level',
              'B': 'surface',
              'A': 'span', 
              'N': 'country', 
              'D': 'tourney', 
              'G': 'asrank',
              'H': 'entry',
              'J': 'oentry',
              'M': 'height',
              'F': 'results',
              'P': 'sets',
              'Q': 'scores',
              'T': 'stats',
              'X': 'extras',
              'U': 'minimum',
              'R': 'crank',
              'Y': 'minyears',
              's': 'sort',
              'r': 'return',
              'v': 'reverse',
              'o': 'overall',
              'w': 'raw',
              'z': 'hands',
              'S': 'prank',
              'V': 'phand'
              };

filter2url = {'hand': 'K',
              'round': 'E',
              'rank': 'I',
              'age': 'L',
              'level': 'C',
              'surface': 'B',
              'span': 'A', 
              'country': 'N', 
              'tourney': 'D', 
              'asrank': 'G',
              'entry': 'H',
              'oentry': 'J',
              'height': 'M',
              'results': 'F',
              'sets': 'P',
              'scores': 'Q',
              'stats': 'T',
              'extras': 'X',
              'minimum': 'U',
              'crank': 'R',
              'minyears': 'Y',
              'hands': 'Z',
              'prank': 'S',
              'phand': 'V'
              };

var filterlist = ['span', 'minyears', 'minimum', 'surface', 'level', 'tourney', 'round', 'results', 'sets', 'scores', 'asrank', 'entry',
              'rank', 'crank', 'oentry', 'hand', 'hands', 'age', 'height', 'country', 'phand', 'prank', 'stats']; //, 'extras'];

var filteropts = {'hand': ['vs Hand', 'All', 'Right', 'Left', 'One-hand BH', 'Two-hand BH'],
                  'phand': ['Partner Hand', 'All', 'Right', 'Left'],
                  'hands': ['vs Hands', 'All', 'Right/Right', 'Right/Left', 'Left/Left'],
                  'round': ['Round', 'All', 'Final', 'Semis', 'Quarters', 'R16', 'R32', 'R64', 'R128', "First Round", "Second Round", "Third Round", "First Match", "Second Match", "Third Match"],
                  'rank': ['vs Rank', 'All', 'Top 5', 'Top 10', 'Top 20', 'Top 50', 'Top 100', '11+', '21+', '51+', '101+', 'Higher', 'Lower'], 
                  'prank': ['Partner Rank', 'All', 'Top 5', 'Top 10', 'Top 20', 'Top 50', 'Top 100', '11+', '21+', '51+', '101+', 'Higher', 'Lower'], 
                  'age': ['vs Age', 'All', 'Younger', 'Older', 'Under 21', 'Under 23', '28 & Over', '30 & Over'],
                  'level': ['Level', 'All', 'Grand Slams', 'Masters', 'All ATP', 'Qualifying', 'Challengers', 'CH Qualies', 'Futures', 'Davis Cup', 'All Pro', 'Juniors'],
                  'surface': ['Surface', 'All', 'Hard', 'Clay', 'Grass', 'Carpet'], // add indoor!
                  'span': ychoices, 
                  'country': cchoices, 
                  'tourney': tchoices, 
                  'asrank': rchoices,
                  'entry': ['as Entry', 'All', 'Seeded', 'Unseeded', 'Qualifier', 'Wild Card'],
                  'oentry': ['vs Entry', 'All', 'Seeded', 'Unseeded', 'Qualifier', 'Wild Card'],
                  'height': ['vs Height', 'All', 'Shorter', 'Taller', "Under 5'10", "Under 6'0", "Over 6'2", "Over 6'4"],
                  'results': ['Results', 'All', 'Wins', 'Losses', 'Completed', 'W by RET', 'L by RET', 'W by W/O', 'L by W/O', 'Won 1st Set', 'Lost 1st Set', 'Won Sets 1&2', 'Lost Sets 1&2', 'Split 1&2', 'Up 2-1 Sets', 'Down 1\u20112 Sets'],
                  'scores': ['Scores', 'All', 'All tiebreaks', 'TB won', 'TB lost', 'Deciding TB', 'All 7-5', '7-5 won', '7-5 lost', 'All bagels', '6-0 won', '6-0 lost', 'All 6-1', '6-1 won', '6-1 lost'],
                  'sets': ['Sets', 'All', 'Straights', 'Deciders', 'All Best of 5', '3 Sets (of 5)', '4-Setters', '5-Setters', 'All Best of 3', '2-Setters', '3 Sets (of 3)'],
                  'stats': ['Stats', 'All'],
                  'extras': ['Extras', 'All', 'Charting', 'Pt-by-Pt', 'Video'],
                  'minimum': ['Min Matches', 'All', '2', '3', '4', '5', '6', '7', '8', '9', '10', '12', '15'],
                  'minyears': ['Min Years', 'All', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
                  'crank': ['vs Curr Rank', 'All', 'Top 10', 'Top 20', 'Top 50', 'Top 100', 'Active', 'Inactive']
                  };

var rmonths = {'Jan': '01',
                'Feb': '02',
                'Mar': '03',
                'Apr': '04',
                'May': '05',
                'Jun': '06',
                'Jul': '07',
                'Aug': '08',
                'Sep': '09',
                'Oct': '10',
                'Nov': '11',
                'Dec': '12'
                };

var months = {'01': 'Jan',
                '02': 'Feb',
                '03': 'Mar',
                '04': 'Apr',
                '05': 'May',
                '06': 'Jun',
                '07': 'Jul',
                '08': 'Aug',
                '09': 'Sep',
                '10': 'Oct',
                '11': 'Nov',
                '12': 'Dec'
                };

var titleTips = {'DR': 'Dominance Ratio: % of return points won\ndivided by % of serve points lost.',
                 'TPW': 'Total points won',
                 'RPW': 'Return points won',
                 'vA%': 'Ace rate against',
                 'v1st%': '1st serve return points won',
                 'v2nd%': '2nd serve return points won',
                 'BPCnv': 'Break point opportunities converted',
                 'BPSvd': 'Break point opportunities saved',
                 'A%': 'Ace rate',
                 'Ace%': 'Ace rate',
                 'DF%': 'Double fault rate',
                 '1st In': 'First serve percentage',
                 '1st%': 'First serve points won',
                 '2nd%': 'Second serve points won',
                 'Rk': "Player's ATP Ranking when the tournament began",
                 'Ranks': "Player's and partner's ATP Rankings when the tournament began",
                 'vRk': "Opponent's ATP Ranking when the tournament began",
                 'vRanks': "Opponents' ATP Rankings when the tournament began",
                 'TP': 'Total Points',
                 'DFs': 'Double faults',
                 'SP': 'Service points',
                 '1SP': '1st serve points',
                 '2SP': '2nd serve points',
                 'vA': 'Opponent aces',
                 'SPW': 'Service points won',
                 'BPSvd%': 'Percentage of break points saved',
                 'BPCnv%': 'Percentage of break points converted',
                 'MS': 'Number of H2H matches with stats\nincluded in the totals to the right',
                 'M': 'Matches played',
                 'Yrs': 'Number of years entered'
                 };

var hdrsServe = ['Date', 'Tournament', 'Surface', 'Rd', 'Rk', 'vRk', '', 'Score', 'More', 'DR', 'A%', 'DF%', '1stIn', '1st%', '2nd%', 'BPSvd', 'Time'];
var hdrsReturn = ['Date', 'Tournament', 'Surface', 'Rd', 'Rk', 'vRk', '', 'Score', 'More', 'DR', 'TPW', 'RPW', 'vA%', 'v1st%', 'v2nd%', 'BPCnv', 'Time'];
var hdrsRaw = ['Date', 'Tournament', 'Surface', 'Rd', 'Rk', 'vRk', '', 'Score', 'More', 'TP', 'Aces', 'DFs', 'SP', '1SP', '2SP', 'vA', 'Time'];

var hdrsDoubles = ['Date', 'Tournament', 'Surface', 'Rd', 'Ranks', 'vRanks', '', 'Score', 'DR', 'Time'];
var hdrsDoublesServe = ['Date', 'Tournament', 'Surface', 'Rd', '', 'Score', 'DR', 'A%', 'DF%', '1stIn', '1st%', '2nd%', 'BPSvd', 'Time'];
var hdrsDoublesReturn = ['Date', 'Tournament', 'Surface', 'Rd', '', 'Score', 'DR', 'TPW', 'RPW', 'vA%', 'v1st%', 'v2nd%', 'BPCnv', 'Time'];
var hdrsDoublesRaw = ['Date', 'Tournament', 'Surface', 'Rd', '', 'Score', 'TP', 'Aces', 'DFs', 'SP', '1SP', '2SP', 'vA', 'Time'];

var hdrsHead = ['H2Hs', 'Opponent', 'W', 'L', 'Win%', 'TB', 'W', 'L', 'TB%', 'First Match', 'Last Match', 'MS', 
                'DR', 'A%', 'DF%', '1stIn', '1st%', '2nd%', 'SPW', 'RPW', 'BPSvd%', 'BPCnv%'];
var hdrsEvents = ['Yrs', 'Event', 'Surface', 'M', 'W', 'L', 'Win%', 'TB', 'W', 'L', 'TB%', 'First', 'Last', 'Best', 'MS', 
                'DR', 'A%', 'DF%', '1stIn', '1st%', '2nd%', 'SPW', 'RPW', 'BPSvd%', 'BPCnv%'];                

var hdict = {'Left': 'L',
             'Right': 'R'
             };

var hdict2 = {'L': 'Left',
              'R': 'Right',
              '': 'Unknown'
             };
             
var levdict = {'Grand Slams': 'G',
               'Masters': 'M',
               'Challengers': 'C',
               'Qualifying': 'Q',
               'Davis Cup': 'D',
               'Juniors': 'J',
               'Futures': 'S'
               }

var levdict2 = {'G': 'Grand Slams',
               'M': 'Masters',
               //'C': 'Challengers',
               'Q': 'Qualifying',
               'D': 'Davis Cup',
               'J': 'Juniors',
               'S': 'Futures'
               }

var rddict = {'Final': 'F',
              'Semis': 'SF',
              'Quarters': 'QF',
              'R16': 'R16',
              'R32': 'R32',
              'R64': 'R64',
              'R128': 'R128',
              'Other': 'RR'
              }

var rddict2 = {'F': 'Final',
              'SF': 'Semis',
              'QF': 'Quarters',
              'R16': 'R16',
              'R32': 'R32',
              'R64': 'R64',
              'R128': 'R128',
              'RR': 'Other'
              }                            

function filterDict(fid, match, mults) {
    if (!$('#tabDubs').hasClass("tablink")) {var doubles = 1;}
    else {doubles = 0;}
    if (fid == 'hand') {
        if (hdict2[match.ohand] in mults) {return 1;}
        else if (match.obackhand == '1' && 'One-hand BH' in mults) {return 1;}
        else if (match.obackhand == '2' && 'Two-hand BH' in mults) {return 1;}
        else {return 0;}
        }
    if (fid == 'phand') {
        if (hdict2[match.phand] in mults) {return 1;}
        else {return 0;}
        }
    else if (fid == 'hands') {
        if ('Right/Right' in mults) {
            if (match.ohand == 'R' && match.o2hand == 'R') {return 1;}
            }
        if ('Left/Left' in mults) {
            if (match.ohand == 'L' && match.o2hand == 'L') {return 1;}
            }
        if ('Right/Left' in mults) {
            var hh = match.ohand + match.o2hand;
            if (hh == 'RL' || hh == 'LR') {return 1;}
            }
        return 0;
        }
    else if (fid == 'extras') { 
        if ('Charting' in mults && match.chartlink != "") {return 1;}
        else if ('Pt-by-Pt' in mults && match.pslink != "") {return 1;}
        else if ('Video' in mults && match.vidlink != "") {return 1;}
        else {return 0;}
        }
    else if (fid == 'age') {
        if ('Younger' in mults && (parseInt(match.obday)) > dob) {return 1;}
        else if ('Older' in mults && (parseInt(match.obday) < dob)) {return 1;}
        else if ('Under 21' in mults && (parseInt(match.date) - parseInt(match.obday)) < 210000) {return 1;}
        else if ('Under 23' in mults && (parseInt(match.date) - parseInt(match.obday)) < 230000) {return 1;}
        else if ('28 & Over' in mults && (parseInt(match.date) - parseInt(match.obday)) > 280000) {return 1;}
        else if ('30 & Over' in mults && (parseInt(match.date) - parseInt(match.obday)) > 300000) {return 1;}
        else {return 0;}
        }
    else if (fid == 'rank') {
        if (match.orank == 'UNR') {match.orank = 2000;}
        if (match.rank == 'UNR') {match.rank = 2000;}
        if (doubles == 1) {
            if (match.o2rank == 'UNR') {match.o2rank = 2000;}
            var vsrank = (parseInt(match.orank) + parseInt(match.o2rank))/2;
            if (match.prank == 'UNR') {match.prank = 2000;}
            var asrank = (parseInt(match.rank) + parseInt(match.prank))/2;
            }
        else {
            vsrank = parseInt(match.orank);
            asrank = parseInt(match.rank);
            }        
        if ('Top 5' in mults && vsrank < 6) {return 1;}
        else if ('Top 10' in mults && vsrank < 11) {return 1;}
        else if ('Top 20' in mults && vsrank < 21) {return 1;}
        else if ('Top 50' in mults && vsrank < 51) {return 1;}
        else if ('Top 100' in mults && vsrank < 101) {return 1;}
        else if ('11+' in mults && vsrank > 10) {return 1;}
        else if ('21+' in mults && vsrank > 20) {return 1;}
        else if ('51+' in mults && vsrank > 50) {return 1;}
        else if ('101+' in mults && vsrank > 100) {return 1;}
        else if ('Higher' in mults && (vsrank < asrank)) {return 1;}
        else if ('Lower' in mults && (vsrank > asrank)) {return 1;}
        else if ('Custom' in mults) {
            if (vsrank >= lowrank && vsrank <= highrank) {return 1;}
            return 0;
            }
        else {return 0;}
        }
    else if (fid == 'prank') {
        if (match.orank == 'UNR') {match.orank = 2000;}
        if (match.rank == 'UNR') {match.rank = 2000;}
        var vsrank = parseInt(match.prank);  // misleading variable name; partner rank
        var asrank = parseInt(match.rank);        // as 'vsrank'
        if ('Top 5' in mults && vsrank < 6) {return 1;}
        else if ('Top 10' in mults && vsrank < 11) {return 1;}
        else if ('Top 20' in mults && vsrank < 21) {return 1;}
        else if ('Top 50' in mults && vsrank < 51) {return 1;}
        else if ('Top 100' in mults && vsrank < 101) {return 1;}
        else if ('11+' in mults && vsrank > 10) {return 1;}
        else if ('21+' in mults && vsrank > 20) {return 1;}
        else if ('51+' in mults && vsrank > 50) {return 1;}
        else if ('101+' in mults && vsrank > 100) {return 1;}
        else if ('Higher' in mults && (vsrank < asrank)) {return 1;}
        else if ('Lower' in mults && (vsrank > asrank)) {return 1;}
        else if ('Custom' in mults) {
            if (vsrank >= lowrank && vsrank <= highrank) {return 1;}
            return 0;
            }
        else {return 0;}
        }
    else if (fid == 'crank') {
        if (!(match.opp in currRank)) {
            if ('Inactive' in mults) {return 1;}
            else {return 0;} // disallows, say, 'Retired' + 'Top 10' -- not strictly correct    
            }  
        else if ('Top 10' in mults && parseInt(currRank[match.opp]) < 11) {return 1;}
        else if ('Top 20' in mults && parseInt(currRank[match.opp]) < 21) {return 1;}
        else if ('Top 50' in mults && parseInt(currRank[match.opp]) < 51) {return 1;}
        else if ('Top 100' in mults && parseInt(currRank[match.opp]) < 101) {return 1;}
        else if ('Active' in mults) {return 1;}
        else {return 0;}
        }        
    else if (fid == 'asrank') {
        if (match.rank == 'UNR') {match.rank = 2000;}
        if ('Number 1' in mults&& parseInt(match.rank) <= 1) {return 1;}
        if ('Top 5' in mults && parseInt(match.rank) <= 5) {return 1;}
        if ('Top 10' in mults && parseInt(match.rank) <= 10) {return 1;}
        else if ('Top 20' in mults && parseInt(match.rank) <= 20) {return 1;}
        else if ('Top 50' in mults && parseInt(match.rank) <= 50) {return 1;}
        else if ('Top 100' in mults && parseInt(match.rank) <= 100) {return 1;}
        else if ('Top 200' in mults && parseInt(match.rank) <= 200) {return 1;}
        else if ('2+' in mults && parseInt(match.rank) >= 2) {return 1;}
        else if ('6+' in mults && parseInt(match.rank) >= 6) {return 1;}
        else if ('11+' in mults && parseInt(match.rank) >= 11) {return 1;}
        else if ('21+' in mults && parseInt(match.rank) >= 21) {return 1;}
        else if ('51+' in mults && parseInt(match.rank) >= 51) {return 1;}
        else if ('101+' in mults && parseInt(match.rank) >= 101) {return 1;}
        else if ('201+' in mults && parseInt(match.rank) >= 201) {return 1;}
        else if ('Custom' in mults) {
            if (parseInt(match.rank) >= lowrank && parseInt(match.rank) <= highrank) {return 1;}
            return 0;
            }
        else {return 0;}
        }
    else if (fid == 'level') {
        if ('All ATP' in mults) {
            if (match.level == 'Q' || match.level == 'C') {}
            else if (match.level == 'J' || match.level == 'S') {}
            else if (match.level == '15' || match.level == '25') {}
            else if (match.round == 'Q1' || match.round == 'Q2') {} // redundant, but current week
            else if (match.round == 'Q3' || match.round == 'Q4') {} // qualies 'level' aren't correctly labeled
            else {return 1;} 
            }
        if ('All Pro' in mults) {
            if (match.level == 'J') {}
            else {return 1;}
            }
        if ('Challengers' in mults) {
            if (match.level != 'C') {}
            else if (match.round == 'Q1' || match.round == 'Q2') {} // redundant, but current week
            else if (match.round == 'Q3' || match.round == 'Q4') {} // qualies 'level' aren't correctly labeled
            else {return 1;} 
            }
        if ('CH Qualies' in mults) {
            if (match.level != 'C') {}
            else if (match.round.slice(0,1) == 'R' || match.round == 'QF') {} // redundant, but current week
            else if (match.round == 'SF' || match.round == 'F') {} // qualies 'level' aren't correctly labeled
            else {return 1;} 
            }
        if (levdict2[match.level] in mults) {return 1;}
        else {return 0;}
        }
    else if (fid == 'round') {
        if (rddict2[match.round] in mults) {return 1;}
        if ('First Round' in mults && parseInt(match.roundnum) == 1) {return 1;}
        if ('Second Round' in mults && parseInt(match.roundnum) == 2) {return 1;}
        if ('Third Round' in mults && parseInt(match.roundnum) == 3) {return 1;}
        if ('First Match' in mults && parseInt(match.matchnum) == 1) {return 1;}
        if ('Second Match' in mults && parseInt(match.matchnum) == 2) {return 1;}
        if ('Third Match' in mults && parseInt(match.matchnum) == 3) {return 1;}
        else {return 0;}
        }
    else if (fid == 'span') {
        if ('Career' in mults) {return 1;}
        else if ('Last 52' in mults) {
            var keyday;
            if (doubles == 1) {
                if (active_dubs == 1) {keyday = today;}
                else {keyday = lastdate_dubs;}
                }
            else {
                if (active == 1) {keyday = today;}
                else {keyday = lastdate;}
                }
            if (parseInt(match.date) < (keyday-10000)) {}
            //else if (parseInt(match.date) > keyday) {}
            else {return 1;}
            }
        if ('Custom' in mults) {
            if (parseInt(match.date) >= startdate && parseInt(match.date) <= enddate) {return 1;}
            return 0;
            }
        var yr = match.date.slice(0,4);
        var mmdd = match.date.slice(4);
        var syr;
        if (parseInt(mmdd) > 1226) {
            syr = (parseInt(yr) + 1) + '';
            }
        else {syr = yr;}
        if (syr in mults) {return 1;}
        else {return 0;}
        }
    else if (fid == 'entry') {  // -1 because entry can be '' for seeds
        if ('Qualifier' in mults && (match.entry == 'Q' || match.entry == 'LL')) {return 1;}
        else if ('Wild Card' in mults && match.entry == 'WC') {return 1;}
        else if ('Seeded' in mults && match.seed.length > 0) {return 1;}
        else if (match.level == 'F' || match.level == 'D') {return 0;}
        else if ('Unseeded' in mults && match.seed.length == 0) {return 1;}
        else {return 0;}
        }
    else if (fid == 'oentry') {  // -1 because entry can be '' for seeds
        if ('Qualifier' in mults && (match.oentry == 'Q' || match.oentry == 'LL')) {return 1;}
        else if ('Wild Card' in mults && match.oentry == 'WC') {return 1;}
        else if ('Seeded' in mults && match.oseed.length > 0) {return 1;}
        else if (match.level == 'F' || match.level == 'D') {return 0;}
        else if ('Unseeded' in mults && match.oseed.length == 0) {return 1;}
        else {return 0;}
        }
    else if (fid == 'height') {  
        if ('Shorter' in mults && parseInt(match.oht) < ht) {return 1;}
        else if ('Taller' in mults && parseInt(match.oht) > ht) {return 1;}
        else if ("Under 5'10" in mults && parseInt(match.oht) < 178) {return 1;}
        else if ("Under 6'0" in mults && parseInt(match.oht) < 183) {return 1;}
        else if ("Over 6'2" in mults && parseInt(match.oht) > 188) {return 1;}
        else if ("Over 6'4" in mults && parseInt(match.oht) > 193) {return 1;}
        else {return 0;}
        }
    else if (fid == 'sets') {
        if (match.score == '') {return 0;}
        if (match.score == 'W/O') {return 0;}
        if ('All Best of 3' in mults && (parseInt(match.max) == 3)) {return 1;}
        else if ('All Best of 5' in mults && (parseInt(match.max) == 5)) {return 1;}
        if ('Straights' in mults || 'Deciders' in mults) {
            //if (match.score == 'W/O') {return 0;} // only because later filters could not possibly include this
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if ('Straights' in mults && (match.max/nsets >= 1.4)) {return 1;}
            else if ('Deciders' in mults && (parseInt(match.max) == nsets)) {return 1;}
            }
        if ('5-Setters' in mults && (parseInt(match.max) == 5)) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (nsets == 5) {return 1;}
            }
        if ('4-Setters' in mults && (parseInt(match.max) == 5)) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (nsets == 4) {return 1;}
            }
        if ('3 Sets (of 5)' in mults && (parseInt(match.max) == 5)) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (nsets == 3) {return 1;}
            }
        if ('3 Sets (of 3)' in mults && (parseInt(match.max) == 3)) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (nsets == 3) {return 1;}
            }
        if ('2-Setters' in mults && (parseInt(match.max) == 3)) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (nsets == 2) {return 1;}
            }
        }
    else if (fid == 'scores') {
        if (match.score.indexOf('7-6') != -1) {
            if ('All tiebreaks' in mults) {return 1;}
            else if ('TB won' in mults && match.wl == 'W') {return 1;}
            else if ('TB lost' in mults && match.wl == 'L') {return 1;}
            }
        if (match.score.indexOf('6-7') != -1) {
            if ('All tiebreaks' in mults) {return 1;}
            else if ('TB won' in mults && match.wl == 'L') {return 1;}
            else if ('TB lost' in mults && match.wl == 'W') {return 1;}
            }
        if ('Deciding TB' in mults) {
            var sets = match.score.split(' ');
            var nsets = sets.length;
            if (sets[(sets.length-1)] == 'RET') {nsets = nsets - 1;}
            if (parseInt(match.max) == nsets) {
                var lastset = sets[sets.length-1];
                if (lastset.indexOf('7-6') != -1) {return 1;}
                else if (lastset.indexOf('6-7') != -1) {return 1;}
                }     
            }
        if (match.score.indexOf('7-5') != -1) {
            if ('All 7-5' in mults) {return 1;}
            else if ('7-5 won' in mults && match.wl == 'W') {return 1;}
            else if ('7-5 lost' in mults && match.wl == 'L') {return 1;}
            }
        if (match.score.indexOf('5-7') != -1) {
            if ('All 7-5' in mults) {return 1;}
            else if ('7-5 won' in mults && match.wl == 'L') {return 1;}
            else if ('7-5 lost' in mults && match.wl == 'W') {return 1;}
            }  
        if (match.score.indexOf('6-0') != -1) {
            if ('All bagels' in mults) {return 1;}
            else if ('6-0 won' in mults && match.wl == 'W') {return 1;}
            else if ('6-0 lost' in mults && match.wl == 'L') {return 1;}
            }
        if (match.score.indexOf('0-6') != -1) {
            if (match.score.indexOf('70-68') != -1) {return 0;} 
            else if ('All bagels' in mults) {return 1;}
            else if ('6-0 won' in mults && match.wl == 'L') {return 1;}
            else if ('6-0 lost' in mults && match.wl == 'W') {return 1;}
            }  
        if (match.score.indexOf('6-1') != -1) {
            if ('All 6-1' in mults) {return 1;}
            else if ('6-1 won' in mults && match.wl == 'W') {return 1;}
            else if ('6-1 lost' in mults && match.wl == 'L') {return 1;}
            }
        if (match.score.indexOf('1-6') != -1) {
            if ('All 6-1' in mults) {return 1;}
            else if ('6-1 won' in mults && match.wl == 'L') {return 1;}
            else if ('6-1 lost' in mults && match.wl == 'W') {return 1;}
            } 
        return 0;                    
        }
    else if (fid == 'results') {
        if (match.score == '') {return 0;}
        if (match.score.indexOf('W') != -1 || match.score.indexOf('w') != -1) {
            if ('W by W/O' in mults && match.wl == 'W') {return 1;}
            else if ('L by W/O' in mults && match.wl == 'L') {return 1;}
            else {return 0;}
            } // only because later filters could not possibly include this
        else if (match.score.slice(-3) == 'RET') {
            if ('W by RET' in mults && match.wl == 'W') {return 1;}
            else if ('Wins' in mults && match.wl == 'W') {return 1;}
            else if ('L by RET' in mults && match.wl == 'L') {return 1;}
            else if ('Losses' in mults && match.wl == 'L') {return 1;}
            else {return 0;}
            }  
        else if (match.score.slice(-3) == 'DEF' || match.score.slice(-3) == 'ABD') {
            if ('Completed' in mults) {return 0;}
            }     
        else if ('Completed' in mults) {return 1;}
        if ('Wins' in mults && match.wl == 'W') {return 1;}
        else if ('Losses' in mults && match.wl == 'L') {return 1;}
        var sets = match.score.split(' ');
        if (sets[1] == 'RET') {return 0;} // only because this is the last filter
        var firstset = sets[0];
        var a = parseInt(firstset[0]), b = parseInt(firstset[2]);
        var wonfirst;
        if (match.wl == 'W') {
            if (a>b) {wonfirst=1;}
            else {wonfirst=0;}
            }
        else {
            if (a>b) {wonfirst=0;}
            else {wonfirst=1;}
            }
        if ('Won 1st Set' in mults && wonfirst == 1) {return 1;}
        else if ('Lost 1st Set' in mults && wonfirst == 0) {return 1;}
        if (sets.length < 3) {return 0;} // limit to five-setters
        else if (sets[2] == 'RET') {return 0;} // only because this is the last filter
        var secondset = sets[1];
        var a = parseInt(secondset[0]), b = parseInt(secondset[2]);
        var wonsecond;
        if (match.wl == 'W') {
            if (a>b) {wonsecond=1;}
            else {wonsecond=0;}
            }
        else {
            if (a>b) {wonsecond=0;}
            else {wonsecond=1;}
            }
        if ('Won Sets 1&2' in mults && (wonfirst == 1 && wonsecond == 1)) {return 1;}
        else if ('Lost Sets 1&2' in mults && (wonsecond == 0 && wonfirst == 0)) {return 1;}
        else if ('Split 1&2' in mults && (wonfirst != wonsecond)) {return 1;}
        if (sets.length < 4) {return 0;} // limit to four-plus setters
        else if (sets[3] == 'RET') {return 0;} // only because this is the last filter
        var thirdset = sets[2];
        var a = parseInt(thirdset[0]), b = parseInt(thirdset[2]);
        var wonthird;
        if (match.wl == 'W') {
            if (a>b) {wonthird=1;}
            else {wonthird=0;}
            }
        else {
            if (a>b) {wonthird=0;}
            else {wonthird=1;}
            }
        var setswon = wonfirst+wonsecond+wonthird
        if ('Up 2-1 Sets' in mults && setswon == 2) {return 1;}
        else if ('Down 1\u20112 Sets' in mults && setswon == 1) {return 1;}        
        return 0;
        }
    else if (fid == 'tourney') {
        if ('Tour Finals' in mults) {
            if (match.tourn == 'Tour Finals' || match.tourn == 'Masters Cup') {return 1;}
            }
        else if ('Olympics' in mults) {
            if (match.tourn.indexOf('Olympics') != -1) {return 1;}
            }
        else if ('Davis Cup' in mults) {
            if (match.tourn.indexOf('Davis Cup') != -1) {return 1;}
            }
        else if (match.tourn.slice(-2) == ' Q') {
            if (match.tourn.slice(0,-2) in mults) {return 1;}
            }
        if (match.tourn in mults) {return 1;}
        else if (match.tourn.slice(4) in mults) {return 1;}
        return 0;
        }
    else if (fid == 'country') {
        if (match.ocountry in mults) {return 1;}
        return 0;
        }
    else if (fid == 'surface') {
        if (match.surf in mults) {return 1;}
        return 0;
        }
    else if (fid == 'h2h') {
        if (match.opp in mults) {return 1;}
        return 0;
        }
    else if (fid == 'not') {
        if (match.opp in mults) {return 0;}
        return 1;
        }
    else if (fid == 'partner') {
        if (match.partner in mults) {return 1;}
        return 0;        
        }
    else if (fid == 'opp') {
        if (match.opp in mults) {return 1;}
        else if (match.opp2 in mults) {return 1;}
        return 0;        
        }
    else if (fid == 'oppteam') {
        var fullteam = match.opp + '/' + match.opp2;
        if (fullteam in mults) {return 1;}
        return 0;        
        }    
    else if (fid == 'stats') {
        //alert('in stats filter');
        // eventually validate / check that choice and operator are not defaults
        var thresh = Number(statinput);
        if (isNaN(thresh) == true) {return 1;} // some kind of message?
        // get relevant stat for this match; eventually put this in an external function
        // if no stats, return 0 ?
        var mstat = 0;
        if (statchoice == 'Dom Ratio') {
            if (match.ofwon == "") {return 0;}
            var rpw = 1 - (parseInt(match.ofwon) + parseInt(match.oswon))/match.opts; // dominance ratio:
            var spl = 1 - ((parseInt(match.fwon) + parseInt(match.swon))/match.pts);
            mstat = rpw/spl;
            }
        else if (statchoice == 'Ace Perc') {
            if (match.aces == "") {return 0;}
            mstat = (match.aces/match.pts)*100;
            }
        else if (statchoice == 'DF Perc') {
            if (match.dfs == "") {return 0;}
            mstat = (match.dfs/match.pts)*100;
            }
        else if (statchoice == '1st In') {
            if (match.firsts == "") {return 0;}
            mstat = (match.firsts/match.pts)*100;
            }
        else if (statchoice == '1st WPc') {
            if (match.fwon == "") {return 0;}
            mstat = (match.fwon/match.firsts)*100;
            }
        else if (statchoice == '2nd WPc') {
            if (match.swon == "") {return 0;}
            mstat = (match.swon/(match.pts-match.firsts))*100;
            }
        else if (statchoice == 'BP Svd Pc') {
            if (match.saved == "") {return 0;}
            mstat = (match.saved/match.chances)*100;
            }
        else if (statchoice == 'BP Saved') {
            if (match.saved == "") {return 0;}
            mstat = parseInt(match.saved);
            }
        else if (statchoice == 'BPC Faced') {
            if (match.chances == "") {return 0;}
            mstat = parseInt(match.chances);
            }
        else if (statchoice == 'TPW') {
            if (match.fwon == "") {return 0;}
            var pointswon = parseInt(match.fwon) + parseInt(match.swon) + (match.opts - match.ofwon - match.oswon);
            mstat = (pointswon/(parseInt(match.pts) + parseInt(match.opts)))*100;
            }
        else if (statchoice == 'RPW') {
            if (match.ofwon == "") {return 0;}
            mstat = (1 - ((parseInt(match.ofwon) + parseInt(match.oswon))/match.opts))*100;
            }
        else if (statchoice == 'vAce Pc') {
            if (match.oaces == "") {return 0;}
            mstat = (match.oaces/match.opts)*100;
            }
        else if (statchoice == 'v1st WPc') {
            if (match.ofwon == "") {return 0;}
            mstat = (1 - (match.ofwon/match.ofirsts))*100;
            }
        else if (statchoice == 'v2nd WPc') {
            if (match.oswon == "") {return 0;}
            mstat = (1 - (match.oswon/(match.opts-match.ofirsts)))*100;
            }
        else if (statchoice == 'BP Cnv Pc') {
            if (match.osaved == "") {return 0;}
            mstat = (1 - (match.osaved/match.ochances))*100;
            }
        else if (statchoice == 'BP Conv') {
            if (match.ochances == "") {return 0;}
            mstat = (match.ochances - match.osaved);
            }
        else if (statchoice == 'BP Chncs') {
            if (match.ochances == "") {return 0;}
            mstat = parseInt(match.ochances);
            }
        else if (statchoice == 'Tot Pts') {
            if (match.pts == "") {return 0;}
            mstat = (parseInt(match.pts) + parseInt(match.opts));
            }
        else if (statchoice == 'Aces') {
            if (match.aces == "") {return 0;}
            mstat = parseInt(match.aces);
            }
        else if (statchoice == 'DFs') {
            if (match.dfs == "") {return 0;}
            mstat = parseInt(match.dfs);
            }
        else if (statchoice == 'Sv Pts') {
            if (match.pts == "") {return 0;}
            mstat = parseInt(match.pts);
            }
        else if (statchoice == '1Sv Pts') {
            if (match.firsts == "") {return 0;}
            mstat = parseInt(match.firsts);
            }
        else if (statchoice == '2Sv Pts') {
            if (match.pts == "") {return 0;}
            mstat = match.pts-match.firsts;
            }
        else if (statchoice == 'vAces') {
            if (match.oaces == "") {return 0;}
            mstat = parseInt(match.oaces);
            }
        else if (statchoice == 'Time') {
            if (match.time == "") {return 0;}
            mstat = parseInt(match.time);
            }            
        else {return 1;} // invalid stat choice; some kind of message?
        // separate based on operator
        if (statoperatorchoice == 'gt' && mstat <= thresh) {return 0;}
        else if (statoperatorchoice == 'lt' && mstat >= thresh) {return 0;}
        else if (statoperatorchoice == 'ge' && mstat < thresh) {return 0;}
        else if (statoperatorchoice == 'le' && mstat > thresh) {return 0;}
        else if (statoperatorchoice == 'eq' && mstat != thresh) {return 0;}
        else {return 1;} // invalid operator; some kind of message?
        }
    }
    
function unitePartners(multselect) {
    // filter displays doubles team on two lines,
    // so filter parser thinks that's two items, not 
    // one. this function glues them back together
    var mults = {};
    var mult_list = [];
    for (var i=0; i<multselect.length; i++) {
        if (i % 2 == 0) {
            var team = multselect[i];
            }
        else {
            team = team + multselect[i].slice(1);
            mults[team.replace(/\u00a0/g, ' ')] = 1;
            mult_list.push(team.replace(/\u00a0/g, ' '));
            }
        }  
    return [mults, mult_list];  
    }

function genfilter(fid, first, match, att) {
    // fid = filter id; first = default select; match = relevant match object; att = rel attribute
    // find e.g. 'surfaceselected' text -- that's it
    var selname = '.' + fid + 'selected';
    var multselect = $(selname).text().split(fourspaces + fourspaces).slice(1); // list of selected for this filter
    if (multselect[0] == undefined) { // ugly IE hack
    	var multselect = $(selname).text().split("        ").slice(1);
    	}
    if (fid == "oppteam" && multselect[0] != "All") {
        var mult_unit = unitePartners(multselect);
        var mults = mult_unit[0];
        }
    else {
        var mults = {};
        // make list into object, for 'in' searching
        for (var i=0; i<multselect.length; i++) {mults[multselect[i].replace(/\u00a0/g, ' ')] = 1;}  
        }
    if ('All' in mults) {return 1;}
    else if (filterDict(fid, match, mults) != 1) {return 0;} // this is where it gets messy
    return 1;
    }

function hidePermalink() {
    if ($(".perma").text() == 'Hide Permalink') { // generalize this, also add to other toggles that change permalink?
        $(".perma").html('Table Permalink');
        $("#permalink").remove();
        }
    }

function getWinLossTiebreak(match) {
    var tb = 0, tbwon = 0;
    if (match.score.search('W/O') == -1 && match.score != '') {
        if (match.wl == 'W') {match["wins"] = 1; match["losses"] = 0;}
        else {match["losses"] = 1; match["wins"] = 0;}
        }
    else {match["wins"] = 0; match["losses"] = 0;}
    // do some calculations
    sets = match.score.split(' ');       
    for (var i=0; i<sets.length; i++) {
        // tb counting
        if (sets[i].slice(0, 3) == '7-6' || sets[i] == '13-12') {
            tb++;
            if (match.wl == 'W') {tbwon++;}
            }
        else if (sets[i].slice(0, 3) == '6-7') {
            tb++;
            if (match.wl == 'L') {tbwon++;}
            }
        }
    match["tiebreaks"] = tb;
    match["tbwon"] = tbwon;
    return match;
    }

function makeSplitStatRow(mt) {
    var wl = mt["wins"] + '-' + mt["losses"] + ' (' + alignRound((mt["wins"]/(mt['wins'] + mt['losses'])), 0, 1) + ')';
    var tbrecord = mt["tbwon"] + '-' + (mt["tiebreaks"]-mt["tbwon"]) + ' (' + alignRound((mt["tbwon"]/(mt["tiebreaks"])), 0, 1) + ')';
    var acerate = alignRound((mt["aces"]/mt["pts"]), 1, 1);
    var firstin = alignRound((mt["firsts"]/mt["pts"]), 1, 1);
    var fwin = alignRound((mt.fwon/mt.firsts), 1, 1);
    var swin = alignRound((mt.swon/(mt.pts-mt.firsts)), 1, 1);
    var rpw = 1 - (mt.ofwon + mt.oswon)/mt.opts;
    var rpwShow = alignRound(rpw, 1, 1)
    var spw = (mt.fwon + mt.swon)/mt.pts;
    var spwShow = alignRound(spw, 1, 1)
    var spl = 1 - spw;
    var tpw = (mt.fwon + mt.swon + mt.opts - mt.ofwon - mt.oswon)/(mt.pts + mt.opts);
    var tpwShow = alignRound(tpw, 1, 1)
    var domratio = alignRound(rpw/spl, 2);
    var holds = mt.games - (mt.chances - mt.saved);
    var hld = holds / mt.games;
    var hldShow = alignRound(hld, 1, 1);
    var breaks = mt.ochances - mt.osaved;
    var brk = breaks / mt.ogames;
    var brkShow = alignRound(brk, 1, 1);
    var statrow = [wl, tbrecord, acerate, firstin, fwin, swin, hldShow, spwShow, brkShow, rpwShow, tpwShow, domratio];
    return statrow;
    }

var matchhead = ["date","tourn","surf","level","wl","rank","seed","entry","round",
                 "score","max","opp","orank","oseed","oentry","ohand","obday",
                 "oht","ocountry","oactive","time","aces","dfs","pts","firsts","fwon",
                 "swon",'games',"saved","chances","oaces","odfs","opts","ofirsts",
                 "ofwon","oswon",'ogames',"osaved","ochances", "obackhand", "chartlink",
                 "pslink","whserver","matchid","wh","roundnum","matchnum"]
                 
var matchhead_dubs = ["date","tourn","surf","level","wl","rank","seed","entry","round",
                 "score","max","partner", "partnerlast", "prank", "phand", "pbday", "pht", "pcountry", "pactive",
              "oseed", "oentry", "opp","olast","orank","ohand","obday","oht","ocountry","oactive",
              "opp2","o2last","o2rank","o2hand","o2bday","o2ht","o2country","o2active",
              "time","aces","dfs","pts","firsts","fwon",
                 "swon",'games',"saved","chances","oaces","odfs","opts","ofirsts",
                 "ofwon","oswon",'ogames',"osaved","ochances", "obackhand", "chartlink",
                 "pslink","whserver","matchid","wh","roundnum","matchnum"]

var totals = {"aces": 0,"pts": 0,"firsts": 0,"fwon": 0, "swon": 0, "oaces": 0,"opts": 0,"ofirsts":0,"ofwon": 0,"oswon": 0,
              "wins":0, "losses":0, "tiebreaks":0, "tbwon":0, "games":0, "ogames":0, "saved":0, "osaved":0, "ochances":0, "chances":0};
//var stats = ["aces","pts","firsts","fwon", "swon", "oaces","opts","ofirsts","ofwon","oswon", "wins","losses", "tiebreaks", "tbwon"];
// extending this for h2h tally purposes
var stats = ["aces","dfs","pts","firsts","fwon", "swon", "saved", "chances", "oaces","opts", "ofirsts","ofwon","oswon", 
             "osaved","ochances","wins","losses", "tiebreaks", "tbwon", "games", "ogames"];

function addYearSplits() {
    if (!$('#tabDubs').hasClass("tablink")) {
        var splits_head = matchhead_dubs;
        var splits_matches = matchmx_dubs;
        }
    else {
        var splits_head = matchhead;
        var splits_matches = matchmx;
        }
    // remove/set aside bottom row?! need id tag for bottom row
    var splitlist = [];
    var splits = {'Career': $.extend(true, {}, totals)};
    for (m=0; m<splits_matches.length; m++) {
        var match = {}
        for (var x=0; x<splits_head.length; x++) {
            if (splits_matches[m].length <= x) {match[splits_head[x]] = '';}
            else {match[splits_head[x]] = splits_matches[m][x];}
            } 
        var msplits = ['Career'];  
        //var match = matches[m];
        if (parseInt(match.date.slice(4)) > 1224) {var year = (parseInt(match.date.slice(0,4)) + 1) + '';}
        else {var year = match.date.slice(0,4);}
        if (year in splits) {}
        else {
            splits[year] = $.extend(true, {}, totals);
            splitlist.push(year);
            }
        msplits.push(year);
        match = getWinLossTiebreak(match);   
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            for (i=0; i<msplits.length; i++) {
                if (match[t] != '') {splits[msplits[i]][t] = splits[msplits[i]][t] + parseInt(match[t]);}
                }
            }
        }
    splitlist.sort();
    splitlist.reverse();
    splitlist.push('Career');
    for (j=0; j<splitlist.length; j++) {
        var idnum = j+1;
        if (j == (splitlist.length-1)) {idnum = 0;}
        var yearid = 'sA' + idnum;
        var $row = $('<tr>').attr('class', 'yearsplits').attr('id', yearid);
        var split = splitlist[j], mt = splits[split];
        var statrow = makeSplitStatRow(mt);
        var $splitspan = $('<span>').text(split + ' ');
        //var $splitclick = $('<span>').text('(+)').attr('class', 'likelink splitclick');
        $row.append($('<td>').append($splitspan)); //.append($splitclick)); 
        var cells = [];
        for (var i=0; i < statrow.length; i++) {           
            $row.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }
        $("#overall").append($row);
        }
    }

var splitIds = {'Last 52': '',
                'Hard': 'B0',
                'Clay': 'B1',
                'Grass': 'B2',
                'Grand Slams': 'C0',
                'vs Top 10': 'I0',
                'vs Righties': 'K0',
                'vs Lefties': 'K1',
                'Best of 3': 'F2',
                'Best of 5': 'F3',
                'Deciding Sets': 'F5'
                }

function applyPrefilters() {
    if (prefilters.length != 0) {
        for (j=0; j<filterlist.length; j++) {
            var filter = filterlist[j];
            if (filter in prefilters) {
                $("." + filter + "choice").removeClass("selected").removeClass(filter + "selected");
                if (filter in alphaFilters) {
                    var applylist = prefilters[filter].split(',');
                    }
                else if (filter == 'stats') {
                    var applylist = [prefilters[filter]]; // will break if ever multiple stat params
                    }
                else {
                    var applylist = prefilters[filter].split('i');
                    }
                for (k=0; k<applylist.length; k++) {
                    // treat spanCustom separately
                    if (applylist[k].slice(0,2) == 'cx' && filter != "stats") {
                        $("#" + filter + 'Customqq').addClass("selected").addClass(filter + "selected");
                        if (filter == 'span') {
                            startdate = applylist[k].slice(2,10);
                            enddate = applylist[k].slice(10,18);
                            }
                        else if (filter == 'rank') {
                            lowrank = parseInt(applylist[k].slice(2,7)) - 10000;
                            highrank = parseInt(applylist[k].slice(7,12)) - 10000;
                            }
                        }
                    else if (applylist[k].slice(0,2) == 'cx' && filter == "stats") {  
                        $("#" + filter + '0').addClass("selected").addClass(filter + "selected");
                        var statparamstring = applylist[k].slice(2,-2);
                        var statparams = statparamstring.split('-');
                        statchoice = statparams[0].replace(/_/g," ");
                        statoperatorchoice = statparams[1];
                        statinput = statparams[2];
                        }                    
                    else {              
                        $("#" + filter + applylist[k]).addClass("selected").addClass(filter + "selected");
                        }
                    if ($("#" + filter + "head").hasClass('closed')) {$("#" + filter + "head").addClass("selected");}
                    }
                }
            }
        }
    if (opponent.length != 0) {
        var opps = opponent.split(',');
        for (i=0; i<opps.length; i++) {
            var player = insertNameSpaces(opps[i]);
            setPlayerFilter(player, 0, 0);
            setOpponentFilter(player, 0, 0);
            }
        for (i=0; i<opps.length; i++) {
            var playerid = '#h2h' + opps[i];
            $(playerid).addClass('selected').addClass('h2hselected');
            var playerid2 = '#opp' + opps[i];
            $(playerid2).addClass('selected').addClass('oppselected');
            }
        $("#h2hhead").addClass("selected");
        $("#opphead").addClass("selected");
        }
    else {
        $(".h2hchoice").removeClass("selected").removeClass("h2hselected");
        $("#h2hdef").addClass("selected").addClass("h2hselected");
        $(".oppchoice").removeClass("selected").removeClass("oppselected");
        $("#oppdef").addClass("selected").addClass("oppselected");
        }
    if (exclude.length != 0) {
        var nots = exclude.split(',');
        for (i=0; i<nots.length; i++) {
            var player = insertNameSpaces(nots[i]);
            setNotPlayerFilter(player, 0);
            }
        for (i=0; i<nots.length; i++) {
            var playerid = '#not' + nots[i];
            $(playerid).addClass('selected').addClass('notselected');
            }
        $("#nothead").addClass("selected");
        }
    else {
        $(".notchoice").removeClass("selected").removeClass("notselected");
        $("#notdef").addClass("selected").addClass("notselected");
        //$(".notchoice").toggle();
        }
    if (partner.length != 0) {
        var partners = partner.split(',');
        for (i=0; i<partners.length; i++) {
            var player = insertNameSpaces(partners[i]);
            setPartnerFilter(player, 0);
            }
        for (i=0; i<partners.length; i++) {
            var playerid = '#partner' + partners[i];
            $(playerid).addClass('selected').addClass('partnerselected');
            }
        $("#partnerhead").addClass("selected");
        }
    else {
        $(".partnerchoice").removeClass("selected").removeClass("partnerselected");
        $("#partnerdef").addClass("selected").addClass("partnerselected");
        }
    if (opp_team.length != 0) {
        var teams = opp_team.split(',');
        for (i=0; i<teams.length; i++) {
            var player = insertNameSpaces(teams[i]);
            setOppteamFilter(player, 0);
            }
        for (i=0; i<teams.length; i++) {
            var playerid = '#oppteam' + teams[i];
            $(playerid).addClass('selected').addClass('oppteamselected');
            }
        $("#oppteamhead").addClass("selected");
        }
    else {
        $(".oppteamchoice").removeClass("selected").removeClass("oppteamselected");
        $("#oppteamdef").addClass("selected").addClass("oppteamselected");
        }
    $(".tabview").addClass('tablink');
    if (view.length != 0) {
        if (view == "h2h") {
            $("#tabHead").removeClass('tablink');
            $(".header").show();
            $("#h2hhead").hide();
            $("#nothead").hide();
            $("#minyearshead").hide(); 
            $(".minyearschoice").hide();
            $("#partnerhead").hide();
            $(".partnerchoice").hide();
            $("#opphead").hide();
            $(".oppchoice").hide();
            $("#oppteamhead").hide();
            $(".oppteamchoice").hide();
            $("#handshead").hide();
            $(".handschoice").hide();    
            $("#prankhead").hide();
            $(".prankchoice").hide();
            $("#phandhead").hide();
            $(".phandchoice").hide();        
            }
        else if (view == "events") {
            $("#tabEvents").removeClass('tablink');
            $(".header").show();
            $("#h2hhead").hide();
            $("#nothead").hide();  
            $("#partnerhead").hide();
            $(".partnerchoice").hide();
            $("#opphead").hide();
            $(".oppchoice").hide();
            $("#oppteamhead").hide();
            $(".oppteamchoice").hide();
            $("#handshead").hide();
            $(".handschoice").hide();   
            $("#prankhead").hide();
            $(".prankchoice").hide();
            $("#phandhead").hide();
            $(".phandchoice").hide();        
            }
        else if (view == "doubles") {
            $("#tabEvents").removeClass('tablink');
            $(".header").show();
            $("#h2hhead").hide();
            $("#nothead").hide(); 
            $("#minimumhead").hide();
            $(".minimumchoice").hide();
            $("#minyearshead").hide();
            $(".minyearschoice").hide();
            $("#crankhead").hide();
            $(".crankchoice").hide();
            $("#handhead").hide();
            $(".handchoice").hide();	
            $("#agehead").hide();
            $(".agechoice").hide();
            $("#heighthead").hide();
            $(".heightchoice").hide();
            $("#countryhead").hide();
            $(".countrychoice").hide();
            }
        }
    else { // if view == '', set to results
	      $("#tabResults").removeClass('tablink');
        $(".header").show();
        $("#minimumhead").hide();
        $(".minimumchoice").hide();
        $("#minyearshead").hide();
        $(".minyearschoice").hide();
        $("#partnerhead").hide();
        $(".partnerchoice").hide();
        $("#opphead").hide();
        $(".oppchoice").hide();
        $("#oppteamhead").hide();
        $(".oppteamchoice").hide();
        $("#handshead").hide();
        $(".handschoice").hide();    
        $("#prankhead").hide();
        $(".prankchoice").hide();
        $("#phandhead").hide();
        $(".phandchoice").hide();    	
       } 
    }

var spelled = {'A': '', 'D': '', 'N': '', 'I': '', 'T': ''};
function newPrefilters(filterstring) {
    //alert(filterstring);
    var io = filterstring.indexOf('&q=');
    if (io == -1) {opponent = '';}
    else {
        opponent = filterstring.slice(io+3);
        filterstring = filterstring.slice(0, io);
        }
    var xo = filterstring.indexOf('&x=');
    if (xo == -1) {exclude = '';}
    else {
        exclude = filterstring.slice(xo+3);
        filterstring = filterstring.slice(0, xo);
        }
    var vo = filterstring.indexOf('&view=');
    if (vo == -1) {view = '';}
    else {
        view = filterstring.slice(vo+6);
        filterstring = filterstring.slice(0, vo);
        }
    //alert(filterstring);
    prefilters = {};
    filterstring += 'Z';
    var start = 0;
    if (filterstring[0] in spelled) {var go = 0;}
    else {var go = 1;}
    for (c=1; c<filterstring.length; c++) {
        if (filterstring[c] == 'q' && filterstring[c-1] == 'q') {
            if ((c+1)<filterstring.length && filterstring[c+1] == ',') {}
            else {go = 1;}
            }
        else if (filterstring[c] in {'0': 1, '1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, 'i': 1, ',': 1, '+': 1} && go == 1) {}
        else if (go == 1) {
            var chunk = filterstring.slice(start, c);
            var k = url2filter[chunk[0]];
            var v = chunk.slice(1);
            prefilters[k] = v;
            start = c;
            if (filterstring[0] in spelled) {go = 0;}
            }
        }
    //alert(opponent);
    resetFilters();
    applyPrefilters();
    makeMatchTable({}, 0);
    }

var splits_singles = ["Last 52", 'Hard', 'Clay', 'Grass', "Grand Slams", 'vs Top 10', 'vs Righties', 'vs Lefties',
                  'Best of 3', 'Best of 5']; //, "Deciding Sets"];
var splits_dubs = ["Last 52", 'Hard', 'Clay', 'Grass', "Grand Slams", 'vs Top 10', 'vs RH/RH', 'vs LH/LH',
                  'vs RH/LH', 'Deciding Sets']; //'Best of 3', 'Best of 5'];                   
                     
function makeSplitsTable(doubles=0) {
    $("#wonloss").empty();
    if (doubles == 1) {
        var splitlist = splits_dubs;
        var splits_head = matchhead_dubs;
        var splits_matches = matchmx_dubs;
        var splits_active = active_dubs;
        var splits_lastdate = lastdate_dubs;
        }
    else {
        var splitlist = splits_singles;
        var splits_head = matchhead;
        var splits_matches = matchmx;
        splits_active = active;
        splits_lastdate = lastdate;
        }
    var splits = {'Last 52': $.extend(true, {}, totals), // alternate w/ career 
                  'Hard': $.extend(true, {}, totals),
                  'Clay': $.extend(true, {}, totals),
                  'Grass': $.extend(true, {}, totals),
                  'Grand Slams': $.extend(true, {}, totals),
                  'vs Top 10': $.extend(true, {}, totals),
                  'vs Righties': $.extend(true, {}, totals),
                  'vs Lefties': $.extend(true, {}, totals),
                  'Best of 3': $.extend(true, {}, totals),
                  'Best of 5': $.extend(true, {}, totals),
                  'Deciding Sets': $.extend(true, {}, totals),
                  'vs RH/RH': $.extend(true, {}, totals),
                  'vs LH/LH': $.extend(true, {}, totals),
                  'vs RH/LH': $.extend(true, {}, totals)
                  };
    // $.extend(true, {}, totals) -- deep copy of totals
    for (m=0; m<splits_matches.length; m++) {
        var match = {}
        for (var x=0; x<splits_head.length; x++) {
            if (splits_matches[m].length <= x) {match[splits_head[x]] = '';}
            else {match[splits_head[x]] = splits_matches[m][x];}
            } 
        var msplits = [];  
        //var match = matches[m];
        match = getWinLossTiebreak(match);
        // get splits
        var keyday;
        if (splits_active == 1) {keyday = today;}
        else {keyday = splits_lastdate;}
        if (parseInt(match.date) <= keyday && parseInt(match.date) >= (keyday-10000)) {msplits.push('Last 52');}
        else {continue;} // only counting matches in last 52
        if (match.surf == "Hard") {msplits.push('Hard');}
        if (match.surf == "Clay") {msplits.push('Clay');}
        if (match.surf == "Grass") {msplits.push('Grass');}
        if (match.level == "G") {msplits.push('Grand Slams');}
        if (match.max == "3") {msplits.push('Best of 3');}
        if (match.max == "5") {msplits.push('Best of 5');}
        if (sets.length == match.max) {msplits.push('Deciding Sets');}
        if (doubles == 1) {
            if ((parseInt(match.orank) + parseInt(match.o2rank)) <= 20) {msplits.push('vs Top 10');}
            if (match.ohand == "R" && match.o2hand == "R") {msplits.push('vs RH/RH');}
            if (match.ohand == "L" && match.o2hand == "L") {msplits.push('vs LH/LH');}
            if (match.ohand == "R" && match.o2hand == "L") {msplits.push('vs RH/LH');}
            if (match.ohand == "L" && match.o2hand == "R") {msplits.push('vs RH/LH');}
            }
        else {
            if (parseInt(match.orank) <= 10) {msplits.push('vs Top 10');}
            if (match.ohand == "R") {msplits.push('vs Righties');}
            if (match.ohand == "L") {msplits.push('vs Lefties');}
            }
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            for (i=0; i<msplits.length; i++) {
                //splits['All'][t] = splits['All'][t] + parseInt(match[t]);
                if (match[t] != '') {splits[msplits[i]][t] = splits[msplits[i]][t] + parseInt(match[t]);}
                }
            }
        }
    var headerrow = ['TOTALS', 'Match', 'Tiebreak', 'Ace%', '1stIn', '1st%', '2nd%', 'Hld%', 'SPW', 'Brk%', 'RPW', 'TPW', 'DR'];
    var $splittable = $('<table>').css("padding-top", "0px").css("border-top", "0px");
    var $splitchunk = $('<thead>');
    var $splitrow = $('<tr>');
    for (var i = 0; i < headerrow.length; i++) { 
        if (i == 0) {var halign = 'left';}
        else {var halign = 'right';}
        var $hspan = $('<span>').text(headerrow[i])
        if (headerrow[i] in titleTips) {$hspan.attr('title', titleTips[headerrow[i]]);}
        var $headth = $('<th>').append($hspan).css('align', halign);
        $splitrow.append($headth);
        }
    $splitchunk.append($splitrow);
    $splittable.append($splitchunk);
    var $splitchunk2  = $('<tbody>').attr('id', 'splitsbody');
    for (j=0; j<splitlist.length; j++) {
        var $splitrow = $('<tr>');
        var $splitspan = $('<span>');
        //var $splitclick = $('<span>');
        var split = splitlist[j], mt = splits[split];
        var statrow = makeSplitStatRow(mt);
        if (split == 'Last 52' || split == 'Career') {$splitspan.html(split + ' ');}
        else {$splitspan.html('&nbsp;&nbsp;' + split + ' ');}
        //$splitclick.text('(+)').attr('class', 'likelink splitclick')
        $splitrow.append($('<td>').append($splitspan)); //.append($splitclick));
        for (var i = 0; i < statrow.length; i++) {
            $splitrow.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }
        if (j != 0) {$splitrow.attr('class', 'moresplits');}
        $splitchunk2.append($splitrow.attr('id', 's' + splitIds[split]))
        }
    var $yearspan = $('<span>').attr('class', 'likelink').text('show yearly totals');
    var $togglespan = $('<span>').attr('class', 'likelink').text('show splits');
    var $lastrow = $('<tr>').append($('<td>').attr('class', 'yeartoggle').append($yearspan));
    $lastrow.append($('<td>').attr('class', 'splittoggle').append($togglespan));
    for (j=2; j<headerrow.length; j++) {$lastrow.append($('<td>').text(''));}
    $splitchunk2.append($lastrow);
    $splittable.append($splitchunk2).attr('class', 'tablesorter').attr('id', 'overall');
    $splittable.attr('width', '40%').attr('border', 0).attr('cellspacing', 0).attr('cellpadding', 0);
    $("#wonloss").html($splittable);
    
    if (typeof photog != 'undefined' && photog != '') {
        $(".moresplits").show();
        $(".splittoggle").html('<span class="likelink">hide splits</span>');
        }
    
    $(".splittoggle").click(function () {
        // close years if it's open and splits are opening
        if ($(".splittoggle").text() == 'show more splits' && $(".yeartoggle").text() == 'hide yearly totals') {
            $(".yearsplits").toggle();
            $(".yeartoggle").html('<span class="likelink">show yearly totals</span>');
            }
        $(".moresplits").toggle();
        if ($(".splittoggle").text() == 'show splits') {
            $(".splittoggle").html('<span class="likelink">hide splits</span>');
            }
        else {$(".splittoggle").html('<span class="likelink">show splits</span>');}
        })
    $(".yeartoggle").click(function () {
        // close splits if it's open and years are opening
        if ($(".yeartoggle").text() == 'show yearly totals' && $(".splittoggle").text() == 'hide splits') {
            $(".moresplits").toggle();
            $(".splittoggle").html('<span class="likelink">show splits</span>');
            }
        if ($(".yearsplits").length == 0) {addYearSplits();}
        $(".yearsplits").toggle();
        if ($(".yeartoggle").text() == 'show yearly totals') {
            $(".yeartoggle").html('<span class="likelink">hide yearly totals</span>');
            }
        else {$(".yeartoggle").html('<span class="likelink">show yearly totals</span>');}
        })
    }

function getFilterParams() {
    var params = '';
    for (j=0; j<filterlist.length; j++) {
        var filter = filterlist[j];
        if (filter in alphaFilters) {var splitter = ',';}
        else {var splitter = 'i';}
        var fselected = '.' + filter + 'selected', fdef = filter + 'def';
        var fkey = filter2url[filter]; // e.g. 'span' = 'A'
        var selnum = '';
        if ($(fselected).attr('id') != fdef) {
            $(fselected).each(function (i) {
                var selid = $(this).attr('id'), selname = selid.slice(filter.length);
                if (selid == 'spanCustomqq') {selname = 'cx'+startdate+enddate+'qq';}
                if (selid == 'rankCustomqq') {selname = 'cx'+(10000+lowrank)+(10000+highrank)+'qq';}
                if (selid == 'stats0') {selname = 'cx'+statchoice.replace(/ /g,"_")+'-'+statoperatorchoice+'-'+statinput+'qq';}
                if (selnum.length == 0) {
                    selnum = selname;
                    }
                else {
                    selnum = selnum + splitter + selname;
                    }
                });
            params = params + fkey + selnum;
            }
        }
    return params;
    }

function getPermalinkParams() {
    startwith = getFilterParams();
    var skey, sdown;
    if($("#matchheader").length == 0) {     // no results were generated 
        return startwith;
        }
    if ($('#matchheader').children(".headerSortDown").length == 0) {
        skey = $('#matchheader').children(".headerSortUp")[0].cellIndex;
        sdown = '1';
        }
    else {
        skey = $('#matchheader').children(".headerSortDown")[0].cellIndex;
        sdown = '0';
        }
    if (skey == '0' && sdown == '1') {}
    else {startwith = startwith + 's' + skey + sdown;}
    
    if (!$('#tabDubs').hasClass("tablink")) {var doubles = 1;}
    else {doubles = 0;}
    
    // a (overview) is default for doubles; o (serve stats) is default for singles
    if (!$(".statso").hasClass('likelink') && doubles == 0) {startwith += '';} 
    else if (!$(".statsa").hasClass('likelink') && doubles == 1) {startwith += '';}
    else if (!$(".statso").hasClass('likelink')) {startwith += 'o1';}
    else if (!$(".statsr").hasClass('likelink')) {startwith += 'r1';}
    else if (!$(".statsw").hasClass('likelink')) {startwith += 'w1';}
    // insert opponents, separated by commas, into url
    if ($('#h2hdef').hasClass('selected')) {}
    else {
        var oppstring = '';
        var opps = $('.h2hselected').text().split(fourspaces + fourspaces).slice(1);
        for (var i=0; i<opps.length; i++) {
            //oppstring = oppstring + opps[i].replace('\u00a0', '') + ',';
            oppstring = oppstring + opps[i].replace(/\u00a0/g, '') + ',';  //.replace(/ /g, '')
            }
        startwith = startwith + '&q=' + oppstring.slice(0,-1);
        }
    // insert excludes, separated by commas, into url
    if ($('#notdef').hasClass('selected')) {}
    else {
        var notstring = '';
        var nots = $('.notselected').text().split(fourspaces + fourspaces).slice(1);
        for (var i=0; i<nots.length; i++) {
            //notstring = notstring + nots[i].replace('\u00a0', '') + ',';
            notstring = notstring + nots[i].replace(/\u00a0/g, '') + ',';  //.replace(/ /g, '')
            }
        startwith = startwith + '&x=' + notstring.slice(0,-1);
        }
    if ($('#partnerdef').hasClass('selected')) {}
    else {
        var oppstring = '';
        var opps = $('.partnerselected').text().split(fourspaces + fourspaces).slice(1);
        for (var i=0; i<opps.length; i++) {
            //oppstring = oppstring + opps[i].replace('\u00a0', '') + ',';
            oppstring = oppstring + opps[i].replace(/\u00a0/g, '') + ',';  //.replace(/ /g, '')
            }
        startwith = startwith + '&d=' + oppstring.slice(0,-1);
        }
    if ($('#oppdef').hasClass('selected')) {}
    else {
        var oppstring = '';
        var opps = $('.oppselected').text().split(fourspaces + fourspaces).slice(1);
        for (var i=0; i<opps.length; i++) {
            //oppstring = oppstring + opps[i].replace('\u00a0', '') + ',';
            oppstring = oppstring + opps[i].replace(/\u00a0/g, '') + ',';  //.replace(/ /g, '')
            }
        startwith = startwith + '&q=' + oppstring.slice(0,-1);
        }
    if ($('#oppteamdef').hasClass('selected')) {}
    else {
        var oppstring = '';
        var opps = $('.oppteamselected').text().split(fourspaces + fourspaces).slice(1);
        for (var i=0; i<opps.length; i++) {
            //oppstring = oppstring + opps[i].replace('\u00a0', '') + ',';
            if (i % 2 == 0) {
                oppstring = oppstring + opps[i].replace(/\u00a0/g, ''); 
                }
            else {
                oppstring = oppstring + opps[i].replace(/\u00a0/g, '') + ','; 
                } 
            }
        startwith = startwith + '&t=' + oppstring.slice(0,-1);
        }
    // add &view= 
    if (!$('#tabHead').hasClass("tablink")) {startwith = startwith + "&view=h2h";}
    else if (!$('#tabEvents').hasClass("tablink")) {startwith = startwith + "&view=events";}
    else if (!$('#tabDubs').hasClass("tablink")) {startwith = startwith + "&view=doubles";}
    //else {startwith = startwith + "&view=singles";}
    return startwith;
    }

function insertNameSpaces(opponent) {
    var oppname = opponent[0];
    for (var c=1; c<opponent.length; c++) {
        if (opponent[c] == opponent[c].toUpperCase()) {
            oppname = oppname + ' ' + opponent[c];
            }
        else {oppname += opponent[c];}
        }
    oppname = oppname.replace('/ ', '/');  // for doubles
    oppname = oppname.replace(' /', '/');  // for doubles
    return oppname;
    }

function resetFilters() {
    $(".inmenu").removeClass("selected");
    $(".menudefault").addClass("selected");
    $(".header").removeClass("selected");
    var modFilterlist = filterlist.slice()
    modFilterlist.push('h2h');
    modFilterlist.push('not');
    modFilterlist.push('partner');
    modFilterlist.push('opp');
    modFilterlist.push('oppteam');
    for (i=0; i<modFilterlist.length; i++) {
        var fname = modFilterlist[i];
        var fchoice = '.' + fname + 'selected', fdef = '#' + fname + 'def';
        $(fchoice).removeClass(fchoice.slice(1));
        $(fdef).addClass(fchoice.slice(1));
        }
    }
    
function filterMatch(match, view) {
    if (view == "doubles") {
        if (genfilter('partner', 'Partner', match, match.partner) != 1) {return 0;} 
        if (genfilter('opp', 'Opponent', match, match.opp) != 1) {return 0;}
        if (genfilter('oppteam', 'Opp Team', match, match.opp) != 1) {return 0;}
        if (genfilter('hands', 'vs Hands', match, match.ohand) != 1) {return 0;}
        if (genfilter('prank', 'Partner Rank', match, match.prank) != 1) {return 0;}
        if (genfilter('phand', 'Partner Hand', match, match.phand) != 1) {return 0;}
        }
    else {
        if (genfilter('h2h', 'Head-to-Head', match, match.opp) != 1) {return 0;}     
        if (genfilter('not', 'Exclude Opp', match, match.opp) != 1) {return 0;}
        if (genfilter('crank', 'vs Curr Rk', match, match.opp) != 1) {return 0;}
        if (genfilter('hand', 'vs Hand', match, match.ohand) != 1) {return 0;}
        if (genfilter('country', 'vs Country', match, match.ocountry) != 1) {return 0;}
        if (genfilter('age', 'vs Age', match, match.obday) != 1) {return 0;}
        if (genfilter('height', 'vs Height', match, match.oht) != 1) {return 0;}
        } 
    if (genfilter('span', 'Last 52', match, match.date) != 1) {return 0;}  
    if (genfilter('rank', 'vs Rank', match, match.orank) != 1) {return 0;}
    if (genfilter('asrank', 'as Rank', match, match.rank) != 1) {return 0;}
    if (genfilter('level', 'Level', match, match.level) != 1) {return 0;}
    if (genfilter('round', 'Round', match, match.round) != 1) {return 0;}
    if (genfilter('surface', 'Surface', match, match.surf) != 1) {return 0;} 
    if (genfilter('tourney', 'Event', match, match.tourn) != 1) {return 0;} 
    if (genfilter('entry', 'Entry', match, match.entry) != 1) {return 0;} 
    if (genfilter('oentry', 'vs Entry', match, match.oentry) != 1) {return 0;} 
    if (genfilter('results', 'All', match, match.wl) != 1) {return 0;}
    if (genfilter('sets', 'All', match, match.max) != 1) {return 0;}  
    if (genfilter('scores', 'All', match, match.score) != 1) {return 0;} 
    if (genfilter('stats', 'Stats', match, match.wl) != 1) {return 0;} 
    //if (genfilter('extras', 'Extras', match, match.vidlink) != 1) {return 0;}
    return 1;
    }
    
function confirmSort(slist) {
    if ($(".headerSortDown").length > 0 || $(".headerSortUp").length > 0) {  // not the first rendering of the table; keep previous sort
        var skey, sdown;
        if ($('#matchheader').children(".headerSortDown").length == 0) {
            skey = $('#matchheader').children(".headerSortUp")[0].cellIndex;
            sdown = '1';
            }
        else {
            skey = $('#matchheader').children(".headerSortDown")[0].cellIndex;
            sdown = '0';
            }
        if (skey == '0' && sdown == '1') {}
        else {slist = [[skey, sdown]];}
        }
    else if ('sort' in prefilters) { // first rendering, use sort params from url
        var col, down;
        col = parseInt(prefilters['sort'].slice(0, -1));
        down = parseInt(prefilters['sort'].slice(-1));
        if (col == 0 && down == 1) {slist = [[0,1], [3,1]];}
        else if (col == 6 || col == 7) {slist = [[0,1], [3,1]];} // unsortable columns ... eh
        else {slist = [[col, down]];}
        }
    else {} // first rendering, no specified sort params
    return slist;
    }
    
function showDate(md) {
    var yyyy, mm, dd; // reformat date
    yyyy = md.slice(0, 4);
    mm = md.slice(4, 6);
    dd = md.slice(6);
    // non-breaking dash: &#8209;
    var showdate = parseInt(dd,10) + '\u2011' + months[mm] + '\u2011' + yyyy;
    return showdate;
    }
    
function getFilterTitle(ftitle) {
    var eightspaces = '\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'
    var opdict = {'ge': '>=', 'le': '<=', 'gt': '>', 'lt': '<', 'eq': '='};
    for (j=0; j<filterlist.length; j++) {
        var filter = filterlist[j];
        var fselected = '.' + filter + 'selected', fdef = filter + 'def';
        if ($(fselected).attr('id') != fdef || j == 0) { // j == 0 so that time span (e.g. last 52) is always displayed)
            if (ftitle != '') {ftitle += '; ';}
            if ($(fselected).attr('id') == 'spanCustomqq') {
                var showstart = startdate.slice(6) + '-' + months[startdate.slice(4,6)] + '-' + startdate.slice(0,4);
                var showend = enddate.slice(6) + '-' + months[enddate.slice(4,6)] + '-' + enddate.slice(0,4);
                ftitle = ftitle + filteropts[filter][0] + ': ' + showstart + ' to ' + showend + ' [custom]';
                }
            else if ($(fselected).attr('id') == 'rankCustomqq') {
                ftitle = ftitle + filteropts[filter][0] + ': ' + lowrank + ' to ' + highrank + ' [custom]';
                }   
            else if ($(fselected).attr('id') == 'stats0') {
                if (statchoice in statpercs) {var statdisp = statinput+'%';}
                else if (statchoice == 'Time') {
                    var rem = (statinput % 60);
                    if (rem < 10) {var mindisp = '0'+String(rem);}
                    else {var mindisp = String(rem);}
                    var statdisp = Math.floor(statinput/60) + ':' + mindisp;
                    }
                else {var statdisp = statinput;}
                ftitle = ftitle + filteropts[filter][0] + ': ' + statchoice + ' ' + opdict[statoperatorchoice] + ' ' + statdisp + ' [custom]';
                //add percent sign as necessary?
                }             
            else {ftitle = ftitle + filteropts[filter][0] + ': ' + $.trim($(fselected).text());}
            ftitle = ftitle.replace(/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/g, ', ')
            // add comma if more than one fselected?
            }
        }
    return ftitle;
    }
  
function renderResults(stdscores, showstats, hdrs, defSort) {
    // defSort: 1 = return to defaults; 0 = check if already sorted and keep that
    var currentfilter = $.extend(true, {}, totals);
    // decide now on table sorting
    var slist = [[0,1], [3,1]];
    if (defSort == 0) {slist = confirmSort(slist);}

    var $matchtable = $('<table>');
    var $mthead = $('<thead>');
    var $mtheaderrow = $('<tr>').attr('id', 'matchheader'); 
    var $mtfoot = $('<tfoot>');
    var $mtfooterrow = $('<tr>').attr('id', 'matchfooter').attr('background-color', '#FFF'); // color weirdness?  
    var $mtbody = $('<tbody>');
    var rightaligns = {4: '', 5: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: ''};
    for (var s = 0; s < matchmx.length; s++) {   
        if (s == 0) {
            // header row
            var cells = [];
            for (var i = 0; i < hdrs.length; i++) {
                //var $mthcell = $('<th>');
                var $mthspan = $('<span>').text(hdrs[i]);
                if (hdrs[i] in titleTips) {$mthspan.attr('title', titleTips[hdrs[i]]);}
                var $mthcell = $('<th>').append($mthspan);
                if (i in rightaligns) {$mthcell.attr('align', 'right');}
                $mtheaderrow.append($mthcell);
                }
            $mthead.append($mtheaderrow);
            $matchtable.append($mthead);
            // footer row
            var fcells = [];
            for (var i = 0; i < hdrs.length; i++) {
                //var $mftcell = $('<tr>'); // check
                if (i == 1 && !$("#spanCareerqq").hasClass('selected')) { // && career is not selected
                    var $mftspan = $('<span>').text('Show Career').attr('font-style', 'italic');
                    $mftspan.attr('id', 'careerclick').attr('class', 'likelink');
                    }
                else {
                    var $mftspan = $('<span>').text('');
                    }
                var $mftcell = $('<td>').append($mftspan);
                $mtfooterrow.append($mftcell);
                }
            $mtfoot.append($mtfooterrow);
            $matchtable.append($mtfoot);
            }            
            
        // when adding a new column, esp. if just in some players' js files, add the header to 'matchhead' above
        // this fills in the missing cells
        var match = {}
        for (var x=0; x<matchhead.length; x++) {
            if (matchmx[s].length <= x) {match[matchhead[x]] = '';}
            else {match[matchhead[x]] = matchmx[s][x];}
            } 
            
        if (filterMatch(match, 'results') != 1) {continue;}

        var $mtrow = $('<tr>');        
        var showdate = showDate(match.date);
        var yyyy, mm, dd; // reformat date
        yyyy = match.date.slice(0, 4);
        mm = match.date.slice(4, 6);
        dd = match.date.slice(6);
        //if (typeof dob === 'undefined') {}
        //else {
        //    var dobStr = dob+'';
        //    var dobObj  = new Date(dobStr.slice(0,4), dobStr.slice(4,6), dobStr.slice(6));
        //    var tdObj  = new Date(yyyy, mm, dd);
        //    var days = parseInt((tdObj.getTime() - dobObj.getTime())/one_day);
        //    var years = parseInt(days/365);
        //    var plusdays = days % 365;
        //    if (plusdays < 10) {plusdays = '00'+plusdays;}
        //    else if (plusdays < 100) {plusdays = '0'+plusdays;}
        //    $datecell.attr('title', 'Age: '+years+'.'+plusdays);
        //    }
        if (yyyy >= 2085 && yyyy < 1916) {
            var wdate = yyyy+'-'+mm+'-'+dd;
            var wlink = 'https://tennisabstract.herokuapp.com/ATP/Rankings/'+wdate+'/';
            //$datecell.attr('href', wlink);  
            //var $datecell = $('<td>').append($('<a>').text(showdate).attr('href', wlink));
            var $datecell = $('<td>').text(showdate);
            }          
        else {var $datecell = $('<td>').text(showdate).attr('class', 'tdate');}
        $mtrow.append($datecell);
        
        var showtourn = match.tourn;
        if (match.tourn.indexOf('Davis C') != -1) {
            $mtrow.append($('<td>').text(match.tourn));
            }
        else if (match.level == 'S' | match.level == 'E') {
            $mtrow.append($('<td>').text(match.tourn));
            }
        else if (match.tourn.slice(0,3) == 'ATP' && (yyyy == '2022' | yyyy == '2024' || yyyy == '2023')) {
            $mtrow.append($('<td>').text(match.tourn.slice(4)));
            }
        else if (match.tourn.slice(-10) == 'Challenger' && (yyyy == '2022' | yyyy == '2024' || yyyy == '2023')) {
            $mtrow.append($('<td>').text(match.tourn.slice(0,-11)+' CH'));
            }
        else {
            if (match.tourn.slice(-2) == ' Q') {
                var showtourn = match.tourn.slice(0, -2);
                var qtag = '&f=B8';
                }
            else {
                var showtourn = match.tourn;
                var qtag = '';}
            var tlink = 'https://www.tennisabstract.com/cgi-bin/tourney.cgi?t=' + yyyy + showtourn.replace(/ /g, '_').replace(/'/g, 'xx') + qtag;
            $mtrow.append($('<td>').append($('<a>').text(match.tourn).attr('href', tlink)));
            }
        $mtrow.append($('<td>').text(match.surf));
        $mtrow.append($('<td>').text(match.round));
        $mtrow.append($('<td>').text(match.rank).attr('align', 'right'));
        $mtrow.append($('<td>').text(match.orank).attr('align', 'right'));

        var $pentry = $('<span>'), $pname = $('<span>'), $oppentry = $('<span>'), $opplink = $('<span>'), $oppcc = $('<span>')  // player entry
        if (match.seed != '') {$pentry.text('(' + match.seed + ')')}
        else if (match.entry != '') {$pentry.text('(' + match.entry + ')')}
        else {$pentry.text('');}
        $pname.text(lastname).css('font-weight', 'bold'); // player name
        if (match.oseed != '') {$oppentry.text('(' + match.oseed + ')')} // opp entry
        else if (match.oentry != '') {$oppentry.text('(' + match.oentry + ')')}
        else {$oppentry.text('');}
        var nlink = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + match.opp.replace(/ /g, '') // opp link
        var $olk = $('<a>').text(match.opp).attr('href', nlink);
        $opplink.append($olk);
        $oppcc.text(' [' + match.ocountry + ']'); 
        var $onespace = $('<span>').text('\u00a0')
        var $onespace2 = $('<span>').text('\u00a0')
        if (match.score == '' && (yyyy == '2023' | yyyy == '2024')) {var $deflink = $('<span>').text('vs');}
        else {var $deflink = $('<span>').text('d.');}
        if ($('#h2hdef').hasClass('selected')) {$deflink.attr('class', 'likelink h2hclick');}
        var $matchcell = $('<td>').attr('class', match.opp.replace(/ /g, ''));
        if (match.wl == "W" || match.wl == 'U') {
            $matchcell.append($pentry).append($pname).append($onespace).append($deflink).append($onespace2).append($oppentry).append($opplink).append($oppcc);
            }
        else {
            $matchcell.append($oppentry).append($opplink).append($oppcc).append($onespace).append($deflink).append($onespace2).append($pentry).append($pname);
            }
        $mtrow.append($matchcell);
        if (match.score == '' && (yyyy == '2023' | yyyy == '2024')) {
            var $scorecell = $('<a>').text('Live Scores').attr('href', 'https://www.livescore.in/tennis/').attr('target', '_blank');
            }
        else if (stdscores == true || match.score == 'W/O') {
            if (match.whserver != '' && match.whserver == 'magic') { // re-activate when match.py working
                if (match.level == 'S') {var mlev = 'FUT';}
                else if (match.level == 'C') {mlev = 'CHA';}
                else if (match.level == 'Q') {mlev = 'AQU';}
                else if (match.round == 'Q1' || match.round == 'Q2' || match.round == 'Q3') {mlev = 'AQU';}
                else {mlev = 'ATP';}
                var wlink = 'https://tennisabstract.com/cgi-bin/match.py?q=' + match.matchid + '/' + mlev + '/';
                wlink = wlink + showtourn.replace(/ /g, '_') + '/' + match.round + '/';
                if (match.wl == 'W') {
                    wlink = wlink + fullname.replace(/ /g, '_') + '/vs/' + match.opp.replace(/ /g, '_') + '/1'
                    }
                else {
                    wlink = wlink + match.opp.replace(/ /g, '_') + '/vs/' + fullname.replace(/ /g, '_') + '/0'
                    }
                var $scorecell = $('<a>').text(match.score).attr('href', wlink).attr('target', '_blank').attr('title', "Point-by-point stats for this match (new window)");                
                }
            else {
                var $scorecell = $('<span>').text(match.score);
                }
            }
        else if (match.wl == 'L') {
            var sets = match.score.split(' '), newscore = '';
            for (k=0; k<sets.length; k++) {
                var st = sets[k];
                if (st == 'RET') {newscore = newscore + 'RET ';}
                else if (st[2] == '-') {newscore = newscore + st.slice(3) + '-' + st.slice(0, 2) + ' ';}
                else {newscore = newscore + st[2] + st[1] + st[0] + st.slice(3) + ' ';}
                // what about 70-68, 11-9, etc?
                }
            newscore = newscore.slice(0, -1);
            //$mtrow.append($('<td>').text(newscore));
            var $scorecell = $('<span>').text(newscore);
            }
        else {
            //$mtrow.append($('<td>').text(match.score));
            var $scorecell = $('<span>').text(match.score);
            }
        var $scorelinks = $('<td>').append($scorecell);
        $mtrow.append($scorelinks);
        var $matchlinks = $('<td>');
        if (match.chartlink != "") {
            var clink = 'https://www.tennisabstract.com/charting/' + match.chartlink;
            var $chartlink = $('<a>').text("(ch)").attr('href', clink).attr('target', '_blank').attr('title', "Charting-Based Stats (new window)");
            var $onespace3 = $('<span>').text('\u00a0');
            $matchlinks.append($onespace3).append($chartlink);
            }
        if (match.pslink != "") {
            var $onespace4 = $('<span>').text('\u00a0');
            var plink = 'https://www.tennisabstract.com/cgi-bin/slamWinProbability.py?m=' + match.pslink;
            var $pslink = $('<a>').text("(wp)").attr('href', plink).attr('target', '_blank').attr('title', "Point-by-Point Data (new window)");
            $matchlinks.append($onespace4).append($pslink);
            }
        //if (match.vidlink != "") {
        //   var $onespace5 = $('<span>').text('\u00a0');
        //    var $vlink = $('<a>').text("(vid)").attr('href', match.vidlink).attr('target', '_blank').attr('title', "Full Match Video (new window)");
        //    $matchlinks.append($onespace5).append($vlink);
        //    }
        $mtrow.append($matchlinks);
        if (match.score == 'W/O' || match.pts == '') {  // matches with no stats, leave blank
            var statrow = ['', '', '', '', '', '', ''], showtime = '', domratio = '';
            }
        else {
            var rpw = 1 - (parseInt(match.ofwon) + parseInt(match.oswon))/match.opts; // dominance ratio:
            var spl = 1 - ((parseInt(match.fwon) + parseInt(match.swon))/match.pts);
            var num = rpw/spl, dec = 2;
            var domratio = alignRound(rpw/spl, dec);
            var matchtime = match.time;
            if (matchtime == '') {var showtime = '';}
            else {
                var hours = parseInt(matchtime/60);
                var minutes = matchtime % 60;
                if (minutes < 10) {minutes = '0' + minutes;}
                var showtime = hours + ':' + minutes;
                }
            var hours = parseInt(matchtime/60);
            var minutes = matchtime % 60;
            if (minutes < 10) {minutes = '0' + minutes;}
            if (showstats == 'o') {
                var acerate = alignRound((match.aces/match.pts), 1, 1);
                var dfrate = alignRound((match.dfs/match.pts), 1, 1);
                var firstin = alignRound((match.firsts/match.pts), 1, 1);
                var fwin = alignRound((match.fwon/match.firsts), 1, 1);
                var swin = alignRound((match.swon/(match.pts-match.firsts)), 1, 1);
                //var bksaved = alignRound((match.saved/match.chances), 1, 1) + ' (' + match.saved + '/' + match.chances + ')';
                var bksaved = match.saved + '/' + match.chances;
                var statrow = [domratio, acerate, dfrate, firstin, fwin, swin, bksaved];
                }
            else if (showstats == 'r') {
                var pointswon = parseInt(match.fwon) + parseInt(match.swon) + (match.opts - match.ofwon - match.oswon);
                var tpw = alignRound((pointswon/(parseInt(match.pts) + parseInt(match.opts))), 1, 1);
                var rpw = alignRound(1 - ((parseInt(match.ofwon) + parseInt(match.oswon))/match.opts), 1, 1);
                var vace = alignRound((match.oaces/match.opts), 1, 1);
                var r1pw = alignRound(1 - (match.ofwon/match.ofirsts), 1, 1);
                var r2pw = alignRound(1 - (match.oswon/(match.opts-match.ofirsts)), 1, 1);
                //var bkconv = alignRound(1 - (match.osaved/match.ochances), 1, 1) + ' (' + (match.ochances - match.osaved) + '/' + match.ochances + ')';
                var bkconv = (match.ochances - match.osaved) + '/' + match.ochances;
                var statrow = [domratio, tpw, rpw, vace, r1pw, r2pw, bkconv];
                }
            else if (showstats == 'w') {
                var pointswon = parseInt(match.fwon) + parseInt(match.swon) + (match.opts - match.ofwon - match.oswon);
                var tpw = alignRound((pointswon/(parseInt(match.pts) + parseInt(match.opts))), 1, 1);
                var rpw = alignRound(1 - ((parseInt(match.ofwon) + parseInt(match.oswon))/match.opts), 1, 1);
                var vace = alignRound((match.oaces/match.opts), 1, 1);
                var r1pw = alignRound(1 - (match.ofwon/match.ofirsts), 1, 1);
                var r2pw = alignRound(1 - (match.oswon/(match.opts-match.ofirsts)), 1, 1);
                var bkconv = alignRound(1 - (match.osaved/match.ochances), 1, 1) + ' (' + (match.ochances - match.osaved) + '/' + match.ochances + ')';
                var tp = parseInt(match.pts) + parseInt(match.opts)
                var statrow = [tp, match.aces, match.dfs, match.pts, match.firsts, match.pts-match.firsts, match.oaces];
                }                
            }
        //$mtrow.append($('<td>').text(domratio).attr('align', 'right'));;
        for (var i = 0; i < statrow.length; i++) {
            $mtrow.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }
        $mtrow.append($('<td>').text(showtime).attr('align', 'right'));
        $mtbody.append($mtrow);
        var matchnew = getWinLossTiebreak(match);
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            if (matchnew[t] != '') {currentfilter[t] = currentfilter[t] + parseInt(matchnew[t]);}
            }
        }

    // back to match table
    if ($mtbody.children().length == 0) {
        if (!$("#spanCareerqq").hasClass('selected')) { // career is not selected
            //var $mftspan = $('<span>').text('show career').attr('font-style', 'italic');
            //$mftspan.attr('id', 'careerclick').attr('class', 'likelink');
            var mft = '<span id="careerclick" class="likelink">Show career</span>, c';
            }
        else {var mft = 'C';}
        pTable = '<p id="matches">&nbsp;<br/>&nbsp;<br/>Your filters returned no matches. ' + mft + 'hange a filter or two, or press the '
        pTable = pTable + '<span class="menureset2 likelink">reset button</span>.</p>'
        $("#matches").replaceWith(pTable);
        }
    else {
        $matchtable.append($mtbody).attr('id', 'matches').attr('class', 'tablesorter');
        $matchtable.attr('border', 0).attr('cellspacing', 0).attr('cellpadding', 4);
        $("#stats").html($matchtable);
        $("#matches").tablesorter( {sortList: slist,
                                    headers: {0: {sorter:'dates'},
                                    	      1: {sorter:false},	
                                              3: {sorter:'rounds'},
                                              4: {sorter:'ranks'},
                                              5: {sorter:'ranks'},
                                              6: {sorter:false}, // matchup
                                              7: {sorter:false}, // score -- more I can do with this?
                                              8: {sorter:false},
                                              9: {sorter:'descNum'},
                                              10: {sorter:'descNum'},
                                              11: {sorter:'ascNum'},
                                              12: {sorter:'descNum'},
                                              13: {sorter:'descNum'},
                                              14: {sorter:'descNum'},
                                              15: {sorter:false},
                                              16: {sorter:'descNum'}
                                              }
                                   });
        }
    var currentParams = getFilterParams();
    var opplist = [], notlist = [];
    if ($('#h2hdef').hasClass('selected') && $('#notdef').hasClass('selected')) {var opplist = [];} // no h2hs or NOTs
    else if (!$('#notdef').hasClass('selected')) {var notlist = $('.notselected').text().split(fourspaces + fourspaces).slice(1);}
    else {var opplist = $('.h2hselected').text().split(fourspaces + fourspaces).slice(1);}
    var statrow = makeSplitStatRow(currentfilter);
    if ($mtbody.children().length == 0) {}
    else if (currentParams == '' && (opplist.length == 0 && notlist.length == 0)) {}
    else {
        if (opplist.length == 0 && notlist.length == 0) {var rowid = '#f' + currentParams;}
        else if (opplist.length == 0) {
            var nots = $('.notselected').text().replace(/\u00a0/g, '');
            var rowid = '#f' + currentParams + '-' + nots;
            }
        else {
            var opps = $('.h2hselected').text().replace(/\u00a0/g, '');
            var rowid = '#f' + currentParams + '-' + opps;
            }
        if ($(rowid).length > 0) {$(rowid).remove();} // if same filter is already present, delete
        else if ($('.filtersplitrow').length == 5) {$('.filtersplitrow').last().remove();} // if 5 already, delete last

        var $filtrow = $('<tr>').attr('class', 'filtersplitrow')
        $filtrow.attr('id', rowid.slice(1));
        var ftitle = '';
        if (opplist.length == 0) {} // get label
        else {
            for (k=0; k<opplist.length; k++) {
                //var oppname = insertNameSpaces(opplist[k]);
                var ftitle = ftitle + 'Opponent: ' + opplist[k] + '; '; // need to parse this for initials? last name?
                }
            ftitle = ftitle.slice(0, -2); // delete final semi-colon and space
            }
        if (notlist.length == 0) {} // get label
        else {
            for (k=0; k<notlist.length; k++) {
                //var oppname = insertNameSpaces(opplist[k]);
                var ftitle = ftitle + 'Exclude: ' + notlist[k] + '; '; // need to parse this for initials? last name?
                }
            ftitle = ftitle.slice(0, -2); // delete final semi-colon and space
            }  
        ftitle = getFilterTitle(ftitle);      

        var $nameital = ($('<span>').css('font-style', 'italic').attr('class', 'filterlabel'));
        if (ftitle.length > 25) { // too long, replace end with ..., add title, etc.
            $nameital.attr('title', ftitle.replace(/; /g, '\n')).css('cursor', 'pointer').text(' ' + ftitle.slice(0,22) + '... ');
            }
        else {$nameital.text(' ' + ftitle + ' ');}
        
        var $closebutton = ($('<span>').text("[x]").attr('class', 'rowcloser likelink')) // add button to close
        //var $splitclick = $('<span>').text('(+)').attr('class', 'likelink splitclick');
        
        $filtrow.append($('<td>').append($closebutton).append($nameital)); //.append($splitclick));
        for (var i = 0; i < statrow.length; i++) {
            var $fcell = $('<td>').attr('align', 'right').text(statrow[i]);
            $filtrow.append($fcell);
            }
        $("#splitsbody").prepend($filtrow)

        $(".rowcloser").click(function () {// attach handler to .rowcloser
            $(this).parent().parent().remove();
            })
        }
        
    // add title above matches
    if (ftitle == "" || ftitle == undefined) {var ftitle = 'Last 52';}
    else {var tabtitle = 'Matches: '+ftitle;} //.replace(/; /g, ' > ');}
    var wlrec = '(' + statrow[0].slice(0,statrow[0].indexOf('(')-1) + ')';
    $("#tablelabel").html('<b>Matches '+wlrec+' > '+ftitle+'</b>');
        
    // how to count filters applied?
    if (currentParams == '' && (opplist.length == 0 && notlist.length == 0)) {}
    else if ($mtbody.children().length == 0) {} // no matches -- keep this or not?
    else {
        var $bmatches = $('<span>').text('Apply filters to another player: ');
        $bmatches.append($('<input>').attr('id', 'paramsearch'));
        $('#matches').after($bmatches);
        }
    $(".h2hclick").click(function () {
        opponent = $(this).parent().attr('class');
        var withspaces = insertNameSpaces(opponent);
        setPlayerFilter(withspaces, 1, 0);
        if ($("#h2hhead").hasClass("closed")) {
            $("#h2hhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".h2hchoice").toggle();
            }
        })
    $(".menureset2").click(function () {
        resetFilters();
        // close open menus?
        makeMatchTable({}, 1);
        });
    $("#careerclick").click(function () {
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spanCareerqq").addClass('selected').addClass('spanselected');
        makeMatchTable({}, 0);
        })
    }
    
function renderDoubles(stdscores, showstats, hdrs, defSort) {
    // defSort: 1 = return to defaults; 0 = check if already sorted and keep that
    var currentfilter = $.extend(true, {}, totals);
    // decide now on table sorting
    var slist = [[0,1], [3,1]];
    if (defSort == 0) {slist = confirmSort(slist);}

    var $matchtable = $('<table>');
    var $mthead = $('<thead>');
    var $mtheaderrow = $('<tr>').attr('id', 'matchheader'); 
    var $mtfoot = $('<tfoot>');
    var $mtfooterrow = $('<tr>').attr('id', 'matchfooter').attr('background-color', '#FFF'); // color weirdness?  
    var $mtbody = $('<tbody>');
    if (showstats == "a") {
        var rightaligns = {4: '', 5: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: ''};
        }
    else {
        var rightaligns = {6: '', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: ''};
        }
    for (var s = 0; s < matchmx_dubs.length; s++) {   
        if (s == 0) {
            // header row
            var cells = [];
            for (var i = 0; i < hdrs.length; i++) {
                //var $mthcell = $('<th>');
                var $mthspan = $('<span>').text(hdrs[i]);
                if (hdrs[i] in titleTips) {$mthspan.attr('title', titleTips[hdrs[i]]);}
                var $mthcell = $('<th>').append($mthspan);
                if (i in rightaligns) {$mthcell.attr('align', 'right');}
                $mtheaderrow.append($mthcell);
                }
            $mthead.append($mtheaderrow);
            $matchtable.append($mthead);
            // footer row
            var fcells = [];
            for (var i = 0; i < hdrs.length; i++) {
                //var $mftcell = $('<tr>'); // check
                if (i == 1 && !$("#spanCareerqq").hasClass('selected')) { // && career is not selected
                    var $mftspan = $('<span>').text('Show Career').attr('font-style', 'italic');
                    $mftspan.attr('id', 'careerclick').attr('class', 'likelink');
                    }
                else {
                    var $mftspan = $('<span>').text('');
                    }
                var $mftcell = $('<td>').append($mftspan);
                $mtfooterrow.append($mftcell);
                }
            $mtfoot.append($mtfooterrow);
            $matchtable.append($mtfoot);
            }            
            
        // when adding a new column, esp. if just in some players' js files, add the header to 'matchhead' above
        // this fills in the missing cells
        var match = {}
        for (var x=0; x<matchhead_dubs.length; x++) {
            if (matchmx_dubs[s].length <= x) {match[matchhead_dubs[x]] = '';}
            else {match[matchhead_dubs[x]] = matchmx_dubs[s][x];}
            } 
            
        if (filterMatch(match, 'doubles') != 1) {continue;}

        var $mtrow = $('<tr>');        
        var showdate = showDate(match.date);
        var yyyy, mm, dd; // reformat date
        yyyy = match.date.slice(0, 4);
        mm = match.date.slice(4, 6);
        dd = match.date.slice(6);
        //if (typeof dob === 'undefined') {}
        //else {
        //    var dobStr = dob+'';
        //    var dobObj  = new Date(dobStr.slice(0,4), dobStr.slice(4,6), dobStr.slice(6));
        //    var tdObj  = new Date(yyyy, mm, dd);
        //    var days = parseInt((tdObj.getTime() - dobObj.getTime())/one_day);
        //    var years = parseInt(days/365);
        //    var plusdays = days % 365;
        //    if (plusdays < 10) {plusdays = '00'+plusdays;}
        //    else if (plusdays < 100) {plusdays = '0'+plusdays;}
        //    $datecell.attr('title', 'Age: '+years+'.'+plusdays);
        //    }
        if (yyyy >= 2085 && yyyy < 1916) {
            var wdate = yyyy+'-'+mm+'-'+dd;
            var wlink = 'https://tennisabstract.herokuapp.com/ATP/Rankings/'+wdate+'/';
            //$datecell.attr('href', wlink);  
            var $datecell = $('<td>').append($('<a>').text(showdate).attr('href', wlink));
            }          
        else {var $datecell = $('<td>').text(showdate).attr('class', 'tdate');}
        $mtrow.append($datecell);
        
        var showtourn = match.tourn;
        if (match.tourn.indexOf('Davis C') != -1) {
            $mtrow.append($('<td>').text(match.tourn));
            }
        else if (match.level == 'S' | match.level == 'E') {
            $mtrow.append($('<td>').text(match.tourn));
            }
        else if (match.tourn.slice(0,3) == 'ATP' && (yyyy == '2022' | yyyy == '2024' || yyyy == '2023')) {
            $mtrow.append($('<td>').text(match.tourn.slice(4)));
            }
        else if (match.tourn.slice(-10) == 'Challenger' && (yyyy == '2022' | yyyy == '2024' || yyyy == '2023')) {
            $mtrow.append($('<td>').text(match.tourn.slice(0,-11)+' CH'));
            }
        else {
            if (match.tourn.slice(-2) == ' Q') {
                var showtourn = match.tourn.slice(0, -2);
                var qtag = '&f=B8';
                }
            else {
                var showtourn = match.tourn;
                var qtag = '';}
            var tlink = 'https://www.tennisabstract.com/cgi-bin/tourney.cgi?t=' + yyyy + showtourn.replace(/ /g, '_').replace(/'/g, 'xx') + qtag;
            $mtrow.append($('<td>').append($('<a>').text(match.tourn).attr('href', tlink)));
            }
        $mtrow.append($('<td>').text(match.surf));
        $mtrow.append($('<td>').text(match.round));
        
        if (showstats == "a") {
            $mtrow.append($('<td>').text(match.rank + '/' + match.prank).attr('align', 'right'));
            $mtrow.append($('<td>').text(match.orank + '/' + match.o2rank).attr('align', 'right'));
            var partner_name = match.partner;
            var opp_name = match.opp;
            var opp2_name = match.opp2;
            }
        else {
            partner_name = match.partnerlast;
            opp_name = match.olast;
            opp2_name = match.o2last;
            }

        var $pentry = $('<span>'), $pname = $('<span>'), $oppentry = $('<span>'), $opplink = $('<span>'), $oppcc = $('<span>')  // player entry 
        var $partnerlink = $('<span>'), $opp2link = $('<span>'), $partnercc = $('<span>')
        if (match.seed != '') {$pentry.text('(' + match.seed + ')')}
        else if (match.entry != '') {$pentry.text('(' + match.entry + ')')}
        else {$pentry.text('');}
        
        $pname.text(lastname).css('font-weight', 'bold'); // player name

        var partnerlink = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + match.partner.replace(/ /g, '') 
        var $partnerlk = $('<a>').text(partner_name).attr('href', partnerlink);
        $partnerlink.append($partnerlk);
        $partnercc.text(' [' + match.pcountry + ']');
                
        if (match.oseed != '') {$oppentry.text('(' + match.oseed + ')')} // opp entry
        else if (match.oentry != '') {$oppentry.text('(' + match.oentry + ')')}
        else {$oppentry.text('');}
        
        var nlink = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + match.opp.replace(/ /g, '') // opp link
        var $olk = $('<a>').text(opp_name).attr('href', nlink);
        $opplink.append($olk);
        
        var n2link = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + match.opp2.replace(/ /g, '') 
        var $o2lk = $('<a>').text(opp2_name).attr('href', n2link);
        $opp2link.append($o2lk);
        
        if (match.ocountry == match.o2country) {
            $oppcc.text(' [' + match.ocountry + ']');
            }
        else {
            $oppcc.text(' [' + match.ocountry + '/' + match.o2country + ']'); 
            }
        var $onespace = $('<span>').text('\u00a0')
        var $onespace2 = $('<span>').text('\u00a0')
        var $slash = $('<span>').text('/')
        var $slash2 = $('<span>').text('/')
        if (match.score == '' && (yyyy == '2023' | yyyy == '2024')) {var $deflink = $('<span>').text('vs');}
        else {var $deflink = $('<span>').text('d.');}
        //if ($('#h2hdef').hasClass('selected')) {$deflink.attr('class', 'likelink h2hclick');}
        var $matchcell = $('<td>')  //.attr('class', match.opp.replace(/ /g, ''));
        if (match.wl == "W" || match.wl == 'U') {
            $matchcell.append($pentry).append($pname).append($slash).append($partnerlink).append($partnercc).append($onespace).append($deflink).append($onespace2).append($oppentry).append($opplink).append($slash2).append($opp2link).append($oppcc);
            }
        else {
            $matchcell.append($oppentry).append($opplink).append($slash2).append($opp2link).append($oppcc).append($onespace).append($deflink).append($onespace2).append($pentry).append($pname).append($slash).append($partnerlink).append($partnercc);
            }
        $mtrow.append($matchcell);
        if (match.score == '' && (yyyy == '2023' | yyyy == '2024')) {
            var $scorecell = $('<a>').text('Live Scores').attr('href', 'https://www.livescore.in/tennis/').attr('target', '_blank');
            }
        else {
            //$mtrow.append($('<td>').text(match.score));
            var $scorecell = $('<span>').text(match.score);
            }
        var $scorelinks = $('<td>').append($scorecell);
        $mtrow.append($scorelinks);

        if (match.score == 'W/O' || match.pts == '') {  // matches with no stats, leave blank
            var statrow = ['', '', '', '', '', '', ''], showtime = '', domratio = '';
            if (showstats == "a") {statrow = [''];}
            }
        else {
            var rpw = 1 - (parseInt(match.ofwon) + parseInt(match.oswon))/match.opts; // dominance ratio:
            var spl = 1 - ((parseInt(match.fwon) + parseInt(match.swon))/match.pts);
            var num = rpw/spl, dec = 2;
            var domratio = alignRound(rpw/spl, dec);
            var matchtime = match.time;
            if (matchtime == '') {var showtime = '';}
            else {
                var hours = parseInt(matchtime/60);
                var minutes = matchtime % 60;
                if (minutes < 10) {minutes = '0' + minutes;}
                var showtime = hours + ':' + minutes;
                }
            var hours = parseInt(matchtime/60);
            var minutes = matchtime % 60;
            if (minutes < 10) {minutes = '0' + minutes;}
            if (showstats == 'a') {
                var statrow = [domratio];
                }
            else if (showstats == 'o') {
                var acerate = alignRound((match.aces/match.pts), 1, 1);
                var dfrate = alignRound((match.dfs/match.pts), 1, 1);
                var firstin = alignRound((match.firsts/match.pts), 1, 1);
                var fwin = alignRound((match.fwon/match.firsts), 1, 1);
                var swin = alignRound((match.swon/(match.pts-match.firsts)), 1, 1);
                //var bksaved = alignRound((match.saved/match.chances), 1, 1) + ' (' + match.saved + '/' + match.chances + ')';
                var bksaved = match.saved + '/' + match.chances;
                var statrow = [domratio, acerate, dfrate, firstin, fwin, swin, bksaved];
                }
            else if (showstats == 'r') {
                var pointswon = parseInt(match.fwon) + parseInt(match.swon) + (match.opts - match.ofwon - match.oswon);
                var tpw = alignRound((pointswon/(parseInt(match.pts) + parseInt(match.opts))), 1, 1);
                var rpw = alignRound(1 - ((parseInt(match.ofwon) + parseInt(match.oswon))/match.opts), 1, 1);
                var vace = alignRound((match.oaces/match.opts), 1, 1);
                var r1pw = alignRound(1 - (match.ofwon/match.ofirsts), 1, 1);
                var r2pw = alignRound(1 - (match.oswon/(match.opts-match.ofirsts)), 1, 1);
                //var bkconv = alignRound(1 - (match.osaved/match.ochances), 1, 1) + ' (' + (match.ochances - match.osaved) + '/' + match.ochances + ')';
                var bkconv = (match.ochances - match.osaved) + '/' + match.ochances;
                var statrow = [domratio, tpw, rpw, vace, r1pw, r2pw, bkconv];
                }
            else if (showstats == 'w') {
                var pointswon = parseInt(match.fwon) + parseInt(match.swon) + (match.opts - match.ofwon - match.oswon);
                var tpw = alignRound((pointswon/(parseInt(match.pts) + parseInt(match.opts))), 1, 1);
                var rpw = alignRound(1 - ((parseInt(match.ofwon) + parseInt(match.oswon))/match.opts), 1, 1);
                var vace = alignRound((match.oaces/match.opts), 1, 1);
                var r1pw = alignRound(1 - (match.ofwon/match.ofirsts), 1, 1);
                var r2pw = alignRound(1 - (match.oswon/(match.opts-match.ofirsts)), 1, 1);
                var bkconv = alignRound(1 - (match.osaved/match.ochances), 1, 1) + ' (' + (match.ochances - match.osaved) + '/' + match.ochances + ')';
                var tp = parseInt(match.pts) + parseInt(match.opts)
                var statrow = [tp, match.aces, match.dfs, match.pts, match.firsts, match.pts-match.firsts, match.oaces];
                }                
            }
        //$mtrow.append($('<td>').text(domratio).attr('align', 'right'));;
        for (var i = 0; i < statrow.length; i++) {
            $mtrow.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }
        $mtrow.append($('<td>').text(showtime).attr('align', 'right'));
        $mtbody.append($mtrow);
        var matchnew = getWinLossTiebreak(match);
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            if (matchnew[t] != '') {currentfilter[t] = currentfilter[t] + parseInt(matchnew[t]);}
            }
        }

    // back to match table
    if ($mtbody.children().length == 0) {
        if (!$("#spanCareerqq").hasClass('selected')) { // career is not selected
            //var $mftspan = $('<span>').text('show career').attr('font-style', 'italic');
            //$mftspan.attr('id', 'careerclick').attr('class', 'likelink');
            var mft = '<span id="careerclick" class="likelink">Show career</span>, c';
            }
        else {var mft = 'C';}
        pTable = '<p id="matches">&nbsp;<br/>&nbsp;<br/>Your filters returned no matches. ' + mft + 'hange a filter or two, or press the '
        pTable = pTable + '<span class="menureset2 likelink">reset button</span>.</p>'
        $("#matches").replaceWith(pTable);
        }
    else {
        $matchtable.append($mtbody).attr('id', 'matches').attr('class', 'tablesorter');
        $matchtable.attr('border', 0).attr('cellspacing', 0).attr('cellpadding', 4);
        $("#stats").html($matchtable);
        if (showstats == "a") {
            $("#matches").tablesorter( {sortList: slist,
                                    headers: {0: {sorter:'dates'},
                                    	      1: {sorter:false},	
                                              3: {sorter:'rounds'},
                                              4: {sorter:'ranks'},
                                              5: {sorter:'ranks'},
                                              6: {sorter:false}, // matchup
                                              7: {sorter:false}, // score -- more I can do with this?
                                              8: {sorter:'descNum'},
                                              9: {sorter:'descNum'},
                                              }
                                   });
            }
        else {
            $("#matches").tablesorter( {sortList: slist,
                                    headers: {0: {sorter:'dates'},
                                    	      1: {sorter:false},	
                                              3: {sorter:'rounds'},
                                              //4: {sorter:'ranks'},
                                              //5: {sorter:'ranks'},
                                              4: {sorter:false}, // matchup
                                              5: {sorter:false}, // score -- more I can do with this?
                                              6: {sorter:'descNum'},
                                              7: {sorter:'descNum'},
                                              8: {sorter:'ascNum'},
                                              9: {sorter:'descNum'},
                                              10: {sorter:'descNum'},
                                              11: {sorter:'descNum'},
                                              12: {sorter:false},
                                              13: {sorter:'descNum'}
                                              }
                                   });
            }
        }
    var currentParams = getFilterParams();
    var opplist = [], oppteamlist = [], partnerlist = [];
    if (!$('#oppdef').hasClass('selected')) {var opplist = $('.oppselected').text().split(fourspaces + fourspaces).slice(1);}
    if (!$('#oppteamdef').hasClass('selected')) {var oppteamlist = $('.oppteamselected').text().split(fourspaces + fourspaces).slice(1);}
    if (!$('#partnerdef').hasClass('selected')) {var partnerlist = $('.partnerselected').text().split(fourspaces + fourspaces).slice(1);}
    var statrow = makeSplitStatRow(currentfilter);
    if ($mtbody.children().length == 0) {}
    else if (currentParams == '' && (opplist.length == 0 && oppteamlist.length == 0 && partnerlist.length == 0)) {}
    else {
        var rowid = '#f' + currentParams;
        //if (opplist.length == 0 && oppteamlist.length == 0 && partnerlist.length == 0) {var rowid = '#f' + currentParams;}
        if (opplist.length > 0) {
            var nots = $('.oppselected').text().replace(/\u00a0/g, '');
            rowid = rowid + '-' + nots;
            }
        if (oppteamlist.length > 0) {
            var oppteams = $('.oppteamselected').text().replace(/\u00a0/g, '');
            rowid = rowid + '-' + oppteams;
            }
        if (partnerlist.length > 0) {
            var partners = $('.partnerselected').text().replace(/\u00a0/g, '');
            rowid = rowid + '-' + partners;
            }
        if ($(rowid).length > 0) {$(rowid).remove();} // if same filter is already present, delete
        else if ($('.filtersplitrow').length == 5) {$('.filtersplitrow').last().remove();} // if 5 already, delete last

        var $filtrow = $('<tr>').attr('class', 'filtersplitrow')
        $filtrow.attr('id', rowid.slice(1));
        var ftitle = '';
        if (partnerlist.length == 0) {} // get label
        else {
            for (k=0; k<partnerlist.length; k++) {
                //var oppname = insertNameSpaces(opplist[k]);
                var ftitle = ftitle + 'Partner: ' + partnerlist[k] + '; '; // need to parse this for initials? last name?
                }
            ftitle = ftitle.slice(0, -2); // delete final semi-colon and space
            }
        if (opplist.length == 0) {} // get label
        else {
            for (k=0; k<opplist.length; k++) {
                //var oppname = insertNameSpaces(opplist[k]);
                var ftitle = ftitle + 'Opponent: ' + opplist[k] + '; '; // need to parse this for initials? last name?
                }
            ftitle = ftitle.slice(0, -2); // delete final semi-colon and space
            }
        if (oppteamlist.length == 0) {} // get label
        else {
            var mult_unit = unitePartners(oppteamlist);
            oppteamlist = mult_unit[1];
            for (k=0; k<oppteamlist.length; k++) {
                //var oppname = insertNameSpaces(opplist[k]);
                var ftitle = ftitle + 'Opp Team: ' + oppteamlist[k] + '; '; // need to parse this for initials? last name?
                }
            ftitle = ftitle.slice(0, -2); // delete final semi-colon and space
            }  
        ftitle = getFilterTitle(ftitle);      

        var $nameital = ($('<span>').css('font-style', 'italic').attr('class', 'filterlabel'));
        if (ftitle.length > 25) { // too long, replace end with ..., add title, etc.
            $nameital.attr('title', ftitle.replace(/; /g, '\n')).css('cursor', 'pointer').text(' ' + ftitle.slice(0,22) + '... ');
            }
        else {$nameital.text(' ' + ftitle + ' ');}
        
        var $closebutton = ($('<span>').text("[x]").attr('class', 'rowcloser likelink')) // add button to close
        //var $splitclick = $('<span>').text('(+)').attr('class', 'likelink splitclick');
        
        $filtrow.append($('<td>').append($closebutton).append($nameital)); //.append($splitclick));
        for (var i = 0; i < statrow.length; i++) {
            var $fcell = $('<td>').attr('align', 'right').text(statrow[i]);
            $filtrow.append($fcell);
            }
        $("#splitsbody").prepend($filtrow)

        $(".rowcloser").click(function () {// attach handler to .rowcloser
            $(this).parent().parent().remove();
            })
        }
        
    // add title above matches
    if (ftitle == "" || ftitle == undefined) {var ftitle = 'Last 52';}
    else {var tabtitle = 'Matches: '+ftitle;} //.replace(/; /g, ' > ');}
    var wlrec = '(' + statrow[0].slice(0,statrow[0].indexOf('(')-1) + ')';
    $("#tablelabel").html('<b>Matches '+wlrec+' > '+ftitle+'</b>');
        
    // how to count filters applied?
    if (currentParams == '' && (opplist.length == 0 && oppteamlist.length == 0 && partnerlist.length == 0)) {}
    else if ($mtbody.children().length == 0) {} // no matches -- keep this or not?
    else {
        var $bmatches = $('<span>').text('Apply filters to another player: ');
        $bmatches.append($('<input>').attr('id', 'paramsearch'));
        $('#matches').after($bmatches);
        }
    $(".h2hclick").click(function () {
        opponent = $(this).parent().attr('class');
        var withspaces = insertNameSpaces(opponent);
        setPlayerFilter(withspaces, 1, 0);
        if ($("#h2hhead").hasClass("closed")) {
            $("#h2hhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".h2hchoice").toggle();
            }
        })
    $(".menureset2").click(function () {
        resetFilters();
        // close open menus?
        makeMatchTable({}, 1);
        });
    $("#careerclick").click(function () {
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spanCareerqq").addClass('selected').addClass('spanselected');
        makeMatchTable({}, 0);
        })
    }
    
function renderHeadToHeads(defSort) {
   
    var hdrs = hdrsHead;
    var slist = [[0,0]]; // for now, 2nd column, descending
    if (defSort == 0) {slist = confirmSort(slist);}
    
    var hDict = {}

    var $matchtable = $('<table>');
    var $mthead = $('<thead>');
    var $mtheaderrow = $('<tr>').attr('id', 'matchheader'); 
    var $mtfoot = $('<tfoot>');
    var $mtfooterrow = $('<tr>').attr('id', 'matchfooter').attr('background-color', '#FFF'); // color weirdness?  
    var $mtbody = $('<tbody>');
    var rightaligns = {0: '', 2: '', 3: '', 4: '', 5: '', 6: '', 7: '', 8: '', 9: '', 10: '', 
                       11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: ''};
    for (var s = 0; s < matchmx.length; s++) {   
        if (s == 0) {
            // header row
            var cells = [];
            for (var i = 0; i < hdrs.length; i++) {
                var $mthspan = $('<span>').text(hdrs[i]);
                if (hdrs[i] in titleTips) {$mthspan.attr('title', titleTips[hdrs[i]]);}
                var $mthcell = $('<th>').append($mthspan);
                if (i in rightaligns) {$mthcell.attr('align', 'right');}
                $mtheaderrow.append($mthcell);
                }
            $mthead.append($mtheaderrow);
            $matchtable.append($mthead);
            // footer row -- do i want to keep this for head2head view?
            var fcells = [];
            for (var i = 0; i < hdrs.length; i++) {
                if (i == 1 && !$("#spanCareerqq").hasClass('selected')) { // && career is not selected
                    var $mftspan = $('<span>').text('Show Career').attr('font-style', 'italic');
                    $mftspan.attr('id', 'careerclick').attr('class', 'likelink');
                    }
                else {
                    var $mftspan = $('<span>').text('');
                    }
                var $mftcell = $('<td>').append($mftspan);
                $mtfooterrow.append($mftcell);
                }
            $mtfoot.append($mtfooterrow);
            $matchtable.append($mtfoot);
            }            
            
        var match = {} // create dict for each match
        for (var x=0; x<matchhead.length; x++) {
            if (matchmx[s].length <= x) {match[matchhead[x]] = '';}
            else {match[matchhead[x]] = matchmx[s][x];}
            }
            
        if (match.score == "" || match.score.slice(0,1) == 'D') {continue;}
        if (match.score.slice(0,1) == 'W' || match.score.slice(0,1) == 'R') {continue;}
        if (filterMatch(match, 'results') != 1) {continue;}
            
        match = getWinLossTiebreak(match);
                         
        if (!(match.opp in hDict)) {
            hDict[match.opp] = {'m': 0, 'w': 0, 'l': 0, 'occ': match.ocountry, 'ms': 0, 'dates': {}};
            for (u=0; u<stats.length; u++) {
                hDict[match.opp][stats[u]] = 0;
                }
            }
        hDict[match.opp]['m'] += 1
        if (match.wl == 'W') {hDict[match.opp]['w'] += 1;}
        else {hDict[match.opp]['l'] += 1;}
         
        //hDict[match.opp]['tiebreaks'] += match.tiebreaks
        //hDict[match.opp]['tbwon'] += match.tbwon
        
        if (match.oswon != "") {hDict[match.opp]['ms'] += 1;}
        
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            if (match[t] != '') {hDict[match.opp][t] = hDict[match.opp][t] + parseInt(match[t]);}
            }        
        
        var wlfull = {'W': 'WIN', 'L': 'LOSS'};
        var details = wlfull[match.wl] + ': ' + match.matchid.slice(0,4) + ' ' + match.tourn + ' ' + match.round + ' (' + match.surf + '), ' + match.score;
        hDict[match.opp]['dates'][match.date] = details;
        }

    // check against match minimum (abbreviated version of genfilter())
    var multselect = $('.minimumselected').text().split(fourspaces + fourspaces).slice(1);
    var matchmin = multselect[0];
    if (matchmin == 'All') {var mm = 1;}
    else {var mm = parseInt(matchmin);}
        
    for (player in hDict) {
        if (!hDict.hasOwnProperty(player)) {continue;}
	if (hDict[player].m < mm) {continue;}
        
        var $mtrow = $('<tr>');
        
        var $deflink = $('<span>').text(hDict[player].m);
        $deflink.attr('class', 'likelink h2hclick');
        var $matchcell = $('<td>').append($deflink).attr('class', player.replace(/ /g, '')).attr('align', 'right');
        $mtrow.append($matchcell);

	$oppcc = $('<span>')
	$oppcc.text(' [' + hDict[player].occ + ']');
        var nlink = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + player.replace(/ /g, '') // opp link
        var $olk = $('<a>').text(player).attr('href', nlink);
        var $oppcell = $('<td>').append($olk).append($oppcc);     
        $mtrow.append($oppcell);
        
        // get list of h2h match dates
        var mdates = [];
        for (md in hDict[player]['dates']) {
            if (hDict[player]['dates'].hasOwnProperty(md)) {mdates.push(md);}
            }
	mdates.sort()
	
	$firstdate = $('<td>').text(showDate(mdates[0])).attr('align', 'right');
	$firstdate.attr('title', hDict[player]['dates'][mdates[0]]);
	$lastdate = $('<td>').text(showDate(mdates[mdates.length - 1])).attr('align', 'right');
	$lastdate.attr('title', hDict[player]['dates'][mdates[mdates.length - 1]]);     
        
        $mtrow.append($('<td>').text(hDict[player].w).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[player].l).attr('align', 'right'));
        var wlperc = alignRound(hDict[player].w/hDict[player].m, 1, 1);
        $mtrow.append($('<td>').text(wlperc).attr('align', 'right'));
        
        $mtrow.append($('<td>').text(hDict[player].tiebreaks).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[player].tbwon).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[player].tiebreaks - hDict[player].tbwon).attr('align', 'right'));
        var tbperc = alignRound(hDict[player].tbwon/hDict[player].tiebreaks, 1, 1);
        $mtrow.append($('<td>').text(tbperc).attr('align', 'right'));
        
        $mtrow.append($firstdate);
        $mtrow.append($lastdate);
        
        $mtrow.append($('<td>').text(hDict[player].ms).attr('align', 'right')); // stat sample
        
        var rpw = 1 - (parseInt(hDict[player].ofwon) + parseInt(hDict[player].oswon))/hDict[player].opts; // dominance ratio:
        var spw = ((parseInt(hDict[player].fwon) + parseInt(hDict[player].swon))/hDict[player].pts);
        var spl = 1 - spw;
        var num = rpw/spl, dec = 2;
        var domratio = alignRound(rpw/spl, dec);

        var acerate = alignRound((hDict[player].aces/hDict[player].pts), 1, 1);
        var dfrate = alignRound((hDict[player].dfs/hDict[player].pts), 1, 1);
        var firstin = alignRound((hDict[player].firsts/hDict[player].pts), 1, 1);
        var fwin = alignRound((hDict[player].fwon/hDict[player].firsts), 1, 1);
        var swin = alignRound((hDict[player].swon/(hDict[player].pts-hDict[player].firsts)), 1, 1);
        var bksavedRate = alignRound((hDict[player].saved/hDict[player].chances), 1, 1)
        var bksaved = hDict[player].saved + '/' + hDict[player].chances;

        var pointswon = parseInt(hDict[player].fwon) + parseInt(hDict[player].swon) + (hDict[player].opts - hDict[player].ofwon - hDict[player].oswon);
        var tpw = alignRound((pointswon/(parseInt(hDict[player].pts) + parseInt(hDict[player].opts))), 1, 1);
        var rpw = alignRound(1 - ((parseInt(hDict[player].ofwon) + parseInt(hDict[player].oswon))/hDict[player].opts), 1, 1);
        var vace = alignRound((hDict[player].oaces/hDict[player].opts), 1, 1);
        var r1pw = alignRound(1 - (hDict[player].ofwon/hDict[player].ofirsts), 1, 1);
        var r2pw = alignRound(1 - (hDict[player].oswon/(hDict[player].opts-hDict[player].ofirsts)), 1, 1);
        var bkconvRate = alignRound(1 - (hDict[player].osaved/hDict[player].ochances), 1, 1)
        var bkconv = (hDict[player].ochances - hDict[player].osaved) + '/' + hDict[player].ochances;
        
        var statrow = [domratio, acerate, dfrate, firstin, fwin, swin, alignRound(spw, 1, 1), rpw]; 
        for (var i = 0; i < statrow.length; i++) {
            $mtrow.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }        
	$bpsv = $('<td>').text(bksavedRate).attr('align', 'right');
	$bpsv.attr('title', bksaved);
	$bpcv = $('<td>').text(bkconvRate).attr('align', 'right');
	$bpcv.attr('title', bkconv);
        
        $mtrow.append($bpsv);
        $mtrow.append($bpcv);        
               
        $mtbody.append($mtrow);
        }

    // back to match table
    if ($mtbody.children().length == 0) {
        if (!$("#spanCareerqq").hasClass('selected')) { // career is not selected
            //var $mftspan = $('<span>').text('show career').attr('font-style', 'italic');
            //$mftspan.attr('id', 'careerclick').attr('class', 'likelink');
            var mft = '<span id="careerclick" class="likelink">Show career</span>, c';
            }
        else {var mft = 'C';}
        pTable = '<p id="matches">&nbsp;<br/>&nbsp;<br/>Your filters returned no matches. ' + mft + 'hange a filter or two, or press the '
        pTable = pTable + '<span class="menureset2 likelink">reset button</span>.</p>'
        $("#matches").replaceWith(pTable);
        }
    else {
        $matchtable.append($mtbody).attr('id', 'matches').attr('class', 'tablesorter');
        $matchtable.attr('border', 0).attr('cellspacing', 0).attr('cellpadding', 4);
        $("#stats").html($matchtable);
        $("#matches").tablesorter( {sortList: slist,
                                    headers: {1: {sorter:false}, // player
                                              9: {sorter:'dates'},
                                              10: {sorter:'datesDesc'},
                                    	      0: {sorter:'descNum'},	
                                              2: {sorter:'descNum'},
                                              3: {sorter:'descNum'},
                                              4: {sorter:'descNum'},
                                              5: {sorter:'descNum'}, 
                                              6: {sorter:'descNum'},
                                              7: {sorter:'descNum'},
                                              8: {sorter:'descNum'},
                                              11: {sorter:'descNum'},
                                              12: {sorter:'descNum'},
                                              13: {sorter:'descNum'},
                                              14: {sorter:'ascNum'},
                                              15: {sorter:'descNum'},
                                              16: {sorter:'descNum'},
                                              17: {sorter:'descNum'},
                                              18: {sorter:'descNum'},
                                              19: {sorter:'descNum'},
                                              20: {sorter:'descNum'},
                                              21: {sorter:'descNum'}                                             
                                              }
                                   });
        }
    
    var ftitle = getFilterTitle("");
    var pgtitle = '<b>Head-to-Head Records ('+ftitle+')</b>'; // <br/>Just testing blah blah blah.';
    $("#tablelabel").html(pgtitle);
    
    $(".h2hclick").click(function () {
        // switch back to results tab
        $(".tabview").addClass("tablink");
        $("#tabResults").removeClass("tablink");
        // unlike 'tabclick', don't reset any filters
        opponent = $(this).parent().attr('class');
        var withspaces = insertNameSpaces(opponent);
        setPlayerFilter(withspaces, 1, 1); // this includes makeMatchTable
        if ($("#h2hhead").hasClass("closed")) {
            $("#h2hhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".h2hchoice").toggle();
            }
        $(".header").show();
        $("#minimumhead").hide();            
        })
    }
    
function renderEvents(defSort) {
   
    var hdrs = hdrsEvents;
    var slist = [[0,0]]; // for now, 1st column; default is descending
    if (defSort == 0) {slist = confirmSort(slist);}
    
    var hDict = {}

    var $matchtable = $('<table>');
    var $mthead = $('<thead>');
    var $mtheaderrow = $('<tr>').attr('id', 'matchheader'); 
    var $mtfoot = $('<tfoot>');
    var $mtfooterrow = $('<tr>').attr('id', 'matchfooter').attr('background-color', '#FFF'); // color weirdness?  
    var $mtbody = $('<tbody>');
    var rightaligns = {0: '', 3: '', 4: '', 5: '', 6: '', 7: '', 8: '', 9: '', 10: '', 
                       11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: ''};
    for (var s = 0; s < matchmx.length; s++) {   
        if (s == 0) {
            // header row
            var cells = [];
            for (var i = 0; i < hdrs.length; i++) {
                var $mthspan = $('<span>').text(hdrs[i]);
                if (hdrs[i] in titleTips) {$mthspan.attr('title', titleTips[hdrs[i]]);}
                var $mthcell = $('<th>').append($mthspan);
                if (i in rightaligns) {$mthcell.attr('align', 'right');}
                $mtheaderrow.append($mthcell);
                }
            $mthead.append($mtheaderrow);
            $matchtable.append($mthead);
            // footer row -- do i want to keep this for head2head view?
            var fcells = [];
            for (var i = 0; i < hdrs.length; i++) {
                if (i == 1 && !$("#spanCareerqq").hasClass('selected')) { // && career is not selected
                    var $mftspan = $('<span>').text('Show Career').attr('font-style', 'italic');
                    $mftspan.attr('id', 'careerclick').attr('class', 'likelink');
                    }
                else {
                    var $mftspan = $('<span>').text('');
                    }
                var $mftcell = $('<td>').append($mftspan);
                $mtfooterrow.append($mftcell);
                }
            $mtfoot.append($mtfooterrow);
            $matchtable.append($mtfoot);
            }            
            
        var match = {} // create dict for each match
        for (var x=0; x<matchhead.length; x++) {
            if (matchmx[s].length <= x) {match[matchhead[x]] = '';}
            else {match[matchhead[x]] = matchmx[s][x];}
            }
        
        var tourlevel = {'A': '', 'M': '', 'G': ''};
        if (!(match.level in tourlevel)) {continue;}
        if (match.tourn.slice(0,4) == 'ATP ') {continue;}
        
        if (match.wl == 'W' && match.round != 'F') {  
            if (match.score == "" || match.score.slice(0,1) == 'D') {continue;}
            if (match.score.slice(0,1) == 'W' || match.score.slice(0,1) == 'R') {continue;}
            }
        
        if (filterMatch(match, 'results') != 1) {continue;}
            
        match = getWinLossTiebreak(match);
        
        if (match.tourn.indexOf('Olympics') > -1) {match.tourn = 'Olympics';}
                         
        if (!(match.tourn in hDict)) {
            hDict[match.tourn] = {'m': 0, 'w': 0, 'l': 0, 'occ': match.ocountry, 'ms': 0, 'dates': {}, 'surfs': {}, 'matches': {}};
            for (u=0; u<stats.length; u++) {
                hDict[match.tourn][stats[u]] = 0;
                }
            }
        hDict[match.tourn]['m'] += 1
        if (match.wl == 'W') {hDict[match.tourn]['w'] += 1;}
        else {hDict[match.tourn]['l'] += 1;}
        
        if (match.oswon != "") {hDict[match.tourn]['ms'] += 1;}
        
        for (u=0; u<stats.length; u++) {
            t = stats[u];
            if (match[t] != '') {hDict[match.tourn][t] = hDict[match.tourn][t] + parseInt(match[t]);}
            }        

        var myear;
        if (match.matchid.length > 0) {myear = match.matchid.slice(0,4);}
        else if (parseInt(match.date.slice(4,8)) > 1215) {myear = parseInt(match.date.slice(0,4)) + 1;}
        else {myear = match.date.slice(0,4);}
        
        hDict[match.tourn]['surfs'][myear] = match.surf;
        
        if (match.round == 'F' && match.wl == 'W') {
            hDict[match.tourn]['dates'][myear] = 'W';
            hDict[match.tourn]['matches'][myear] = 'WIN: '+match.round+' vs '+match.opp+', '+match.score;
            }
        else if (!(myear in hDict[match.tourn]['dates']) && match.wl == 'L') {
            hDict[match.tourn]['dates'][myear] = match.round;
            hDict[match.tourn]['matches'][myear] = 'LOSS: '+match.round+' vs '+match.opp+', '+match.score;
            }
        // make sure to get some date in there in case only wins in an incomplete tournament
        else if (!(myear in hDict[match.tourn]['dates']) && match.wl == 'W') {
            hDict[match.tourn]['dates'][myear] = "";
            hDict[match.tourn]['matches'][myear] = "";
            }
        // covers for previous line -- if year already in but only wins, get the loss
        else if ((myear in hDict[match.tourn]['dates'] && hDict[match.tourn]['dates'][myear] == "") && match.wl == 'L') {
            hDict[match.tourn]['dates'][myear] = match.round;
            hDict[match.tourn]['matches'][myear] = 'LOSS: '+match.round+' vs '+match.opp+', '+match.score;
            }
        }

    // check against match minimum (abbreviated version of genfilter())
    var multselect = $('.minimumselected').text().split(fourspaces + fourspaces).slice(1);
    var matchmin = multselect[0];
    if (matchmin == 'All') {var mm = 1;}
    else {var mm = parseInt(matchmin);}
    
    // check against match minimum (abbreviated version of genfilter())
    var multselectYears = $('.minyearsselected').text().split(fourspaces + fourspaces).slice(1);
    var yearsmin = multselectYears[0];
    if (yearsmin == 'All') {var mmy = 1;}
    else {var mmy = parseInt(yearsmin);}    
        
    for (event in hDict) {
        if (!hDict.hasOwnProperty(event)) {continue;}
	if (hDict[event].m < mm) {continue;}
        
        var $mtrow = $('<tr>');
        
        // get list of years
        var mdates = [];
        var allResults = {}
        for (md in hDict[event]['dates']) {
            if (hDict[event]['dates'].hasOwnProperty(md)) {
                mdates.push(md);
                allResults[hDict[event]['dates'][md]] = '';
                }
            }
            
        if (mdates.length < mmy) {continue;} // check against year minimum from filter
            
	mdates.sort();
	var lastyear = mdates[mdates.length-1];
	
	$mtrow.append($('<td>').text(mdates.length).attr('align', 'right'));     

	//$oppcc = $('<span>') // link to same event results?
	//$oppcc.text(' [' + hDict[player].occ + ']');
        //var nlink = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + player.replace(/ /g, '') // opp link
        //var $olk = $('<a>').text(player).attr('href', nlink);
        var $eventname = $('<span>').text(event).attr('class', 'likelink eventclick');
        var $oppcell = $('<td>').append($eventname).attr('class', event.replace(/ /g, '_'));     
        $mtrow.append($oppcell);
        
        $mtrow.append($('<td>').text(hDict[event]['surfs'][lastyear])); 
        
        var $deflink = $('<span>').text(hDict[event].m); // add link to event results? would need event version of h2hclick
        //$deflink.attr('class', 'likelink h2hclick');
        var $matchcell = $('<td>').append($deflink).attr('align', 'right') //.attr('class', player.replace(/ /g, ''))
        $mtrow.append($matchcell);        
	
	$firstdate = $('<td>').text(mdates[0]).attr('align', 'right');
	$firstdate.attr('title', hDict[event]['matches'][mdates[0]]);
	$lastdate = $('<td>').text(lastyear).attr('align', 'right');
	$lastdate.attr('title', hDict[event]['matches'][lastyear]);  
        
        $mtrow.append($('<td>').text(hDict[event].w).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[event].l).attr('align', 'right'));
        var wlperc = alignRound(hDict[event].w/hDict[event].m, 1, 1);
        $mtrow.append($('<td>').text(wlperc).attr('align', 'right'));
        
        $mtrow.append($('<td>').text(hDict[event].tiebreaks).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[event].tbwon).attr('align', 'right'));
        $mtrow.append($('<td>').text(hDict[event].tiebreaks - hDict[event].tbwon).attr('align', 'right'));
        var tbperc = alignRound(hDict[event].tbwon/hDict[event].tiebreaks, 1, 1);
        $mtrow.append($('<td>').text(tbperc).attr('align', 'right'));
        
        $mtrow.append($firstdate);
        $mtrow.append($lastdate);
        
        // get best result, with title for years achieved
        var rdpref = ['W', 'F', 'SF', 'QF', 'RR', 'R16', 'R32', 'R64', 'R128'];
        var bestResult = '';
        for (var i = 0; i < rdpref.length; i++) {
            if (rdpref[i] in allResults) {
                bestResult = rdpref[i];
                break;
                }
            }
        
        var bestYears = [];
        for (md in hDict[event]['dates']) {
            if (hDict[event]['dates'].hasOwnProperty(md)) {
                if (hDict[event]['dates'][md] == bestResult) {bestYears.push(md);}
                }
            } 
        bestYears.sort();    
        var bestText =  bestYears.join(',');
        
	$bestres = $('<td>').text(bestResult).attr('align', 'right');
	$bestres.attr('title', bestText);        
        $mtrow.append($bestres);       
        
        $mtrow.append($('<td>').text(hDict[event].ms).attr('align', 'right')); // stat sample
        
        var rpw = 1 - (parseInt(hDict[event].ofwon) + parseInt(hDict[event].oswon))/hDict[event].opts; // dominance ratio:
        var spw = ((parseInt(hDict[event].fwon) + parseInt(hDict[event].swon))/hDict[event].pts);
        var spl = 1 - spw;
        var num = rpw/spl, dec = 2;
        var domratio = alignRound(rpw/spl, dec);

        var acerate = alignRound((hDict[event].aces/hDict[event].pts), 1, 1);
        var dfrate = alignRound((hDict[event].dfs/hDict[event].pts), 1, 1);
        var firstin = alignRound((hDict[event].firsts/hDict[event].pts), 1, 1);
        var fwin = alignRound((hDict[event].fwon/hDict[event].firsts), 1, 1);
        var swin = alignRound((hDict[event].swon/(hDict[event].pts-hDict[event].firsts)), 1, 1);
        var bksavedRate = alignRound((hDict[event].saved/hDict[event].chances), 1, 1)
        var bksaved = hDict[event].saved + '/' + hDict[event].chances;

        var pointswon = parseInt(hDict[event].fwon) + parseInt(hDict[event].swon) + (hDict[event].opts - hDict[event].ofwon - hDict[event].oswon);
        var tpw = alignRound((pointswon/(parseInt(hDict[event].pts) + parseInt(hDict[event].opts))), 1, 1);
        var rpw = alignRound(1 - ((parseInt(hDict[event].ofwon) + parseInt(hDict[event].oswon))/hDict[event].opts), 1, 1);
        var vace = alignRound((hDict[event].oaces/hDict[event].opts), 1, 1);
        var r1pw = alignRound(1 - (hDict[event].ofwon/hDict[event].ofirsts), 1, 1);
        var r2pw = alignRound(1 - (hDict[event].oswon/(hDict[event].opts-hDict[event].ofirsts)), 1, 1);
        var bkconvRate = alignRound(1 - (hDict[event].osaved/hDict[event].ochances), 1, 1)
        var bkconv = (hDict[event].ochances - hDict[event].osaved) + '/' + hDict[event].ochances;
        
        var statrow = [domratio, acerate, dfrate, firstin, fwin, swin, alignRound(spw, 1, 1), rpw]; 
        for (var i = 0; i < statrow.length; i++) {
            $mtrow.append($('<td>').text(statrow[i]).attr('align', 'right'));
            }        
	$bpsv = $('<td>').text(bksavedRate).attr('align', 'right');
	$bpsv.attr('title', bksaved);
	$bpcv = $('<td>').text(bkconvRate).attr('align', 'right');
	$bpcv.attr('title', bkconv);
        
        $mtrow.append($bpsv);
        $mtrow.append($bpcv);        
               
        $mtbody.append($mtrow);
        }

    // back to match table
    if ($mtbody.children().length == 0) {
        if (!$("#spanCareerqq").hasClass('selected')) { // career is not selected
            //var $mftspan = $('<span>').text('show career').attr('font-style', 'italic');
            //$mftspan.attr('id', 'careerclick').attr('class', 'likelink');
            var mft = '<span id="careerclick" class="likelink">Show career</span>, c';
            }
        else {var mft = 'C';}
        pTable = '<p id="matches">&nbsp;<br/>&nbsp;<br/>Your filters returned no matches. ' + mft + 'hange a filter or two, or press the '
        pTable = pTable + '<span class="menureset2 likelink">reset button</span>.</p>'
        $("#matches").replaceWith(pTable);
        }
    else {
        $matchtable.append($mtbody).attr('id', 'matches').attr('class', 'tablesorter');
        $matchtable.attr('border', 0).attr('cellspacing', 0).attr('cellpadding', 4);
        $("#stats").html($matchtable);
        $("#matches").tablesorter( {sortList: slist,
                                    headers: {11: {sorter:'ascNum'},
                                              12: {sorter:'descNum'},
                                              13: {sorter:'roundsDesc'},
                                    	      0: {sorter:'descNum'},	
                                              24: {sorter:'descNum'},
                                              3: {sorter:'descNum'},
                                              4: {sorter:'descNum'},
                                              5: {sorter:'descNum'}, 
                                              6: {sorter:'descNum'},
                                              7: {sorter:'descNum'},
                                              8: {sorter:'descNum'},
                                              9: {sorter:'descNum'},
                                              22: {sorter:'descNum'},
                                              23: {sorter:'descNum'},
                                              10: {sorter:'descNum'},
                                              17: {sorter:'ascNum'},
                                              15: {sorter:'descNum'},
                                              16: {sorter:'descNum'},
                                              14: {sorter:'descNum'},
                                              18: {sorter:'descNum'},
                                              19: {sorter:'descNum'},
                                              20: {sorter:'descNum'},
                                              21: {sorter:'descNum'}                                             
                                              }
                                   });
        }
    
    var ftitle = getFilterTitle("");
    var pgtitle = '<b>Tour-Level Event Records ('+ftitle+')</b>'; // <br/>Just testing blah blah blah.';
    $("#tablelabel").html(pgtitle);
    
    $(".eventclick").click(function () {
        // switch back to results tab
        $(".tabview").addClass("tablink");
        $("#tabResults").removeClass("tablink");
        // unlike 'tabclick', don't reset any filters
        var ename = $(this).parent().attr('class');
        //var withspaces = insertNameSpaces(opponent);
        //setPlayerFilter(withspaces, 1, 1); // this includes makeMatchTable
        if ($("#tourneyhead").hasClass("closed")) {
            $("#tourneyhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".tourneychoice").show();
            }
        var eclass = '#tourney'+ename+'qq';
	$(".tourneychoice").removeClass("selected").removeClass("tourneyselected"); 
	$(eclass).addClass("selected").addClass("tourneyselected");       
        $(".header").show();
        $("#minimumhead").hide();
        $(".minimumchoice").hide();
        $("#minyearshead").hide();
        $(".minyearschoice").hide();
        makeMatchTable({}, 1);            
        })
    }

function makeMatchTable(options, defSort) {
    var servestats, stdscores;
    var rows = [], chunks = [];
    var stx = $.trim($(".spanselected").text());
    // checking to see whether we need to add more matches

    if (keep_loading == 1) {   
        if (view == "doubles") {
            if ((matchmx_dubs.length <= shortlist && stx != 'Last 52') && (stx != '2023' && stx != '2024')) {
                if (careerjs_dubs == 1) {matchmx_dubs = matchmx_dubs.concat(morematchmx_dubs);}   // some way to force this to load, even if waiting
                };
            }
        else {    
            if ((matchmx.length <= shortlist && stx != 'Last 52') && (stx != '2023' && stx != '2024')) {
                if (careerjs == 1) {matchmx = matchmx.concat(morematchmx);}   // some way to force this to load, even if waiting
                };
            }
        }
        
    if (view != "") { // url specifies view other than results
        $(".tabview").addClass('tablink');
        if (view == "h2h") {$("#tabHead").removeClass('tablink');}
        else if (view == "events") {$("#tabEvents").removeClass('tablink');}
        else if (view == "doubles") {$("#tabDubs").removeClass('tablink');}
        view = '';
        } 
     
    if (!$('#tabResults').hasClass("tablink")) {var tabview = "results";}
    else if (!$('#tabHead').hasClass("tablink")) {var tabview = "head";}
    else if (!$('#tabEvents').hasClass("tablink")) {var tabview = "events";}
    else if (!$('#tabDubs').hasClass("tablink")) {var tabview = "doubles";}
    
    if (tabview == "results" || tabview == "doubles") {
        $("#abovestats").show();
        
        if ('overall' in prefilters) {
            $(".stattab").addClass('likelink');
            $(".statso").removeClass('likelink');
            delete prefilters['overall'];
            }
        else if ('return' in prefilters) {
            $(".stattab").addClass('likelink');
            $(".statsr").removeClass('likelink');
            delete prefilters['return'];
            }
        else if ('raw' in prefilters) {
            $(".stattab").addClass('likelink');
            $(".statsw").removeClass('likelink');
            delete prefilters['raw'];
            }
        else if ('overview' in prefilters) {
            $(".stattab").addClass('likelink');
            $(".statsa").removeClass('likelink');
            delete prefilters['overview'];
            }

        var hdrs; 
        var showstats = ''        
        if (tabview == "doubles") {
            $(".revscore").hide();
            $(".statsa").show();
            $(".statspacer").show();
            if (!$(".statso").hasClass('likelink')) {
                showstats = 'o';
                hdrs = hdrsDoublesServe;
                }
            else if (!$(".statsr").hasClass('likelink')) {
                showstats = 'r';
                hdrs = hdrsDoublesReturn;
                }
            else if (!$(".statsw").hasClass('likelink')) {
                showstats = 'w';
                hdrs = hdrsDoublesRaw;
                }
            else if (!$(".statsa").hasClass('likelink')) {
                showstats = 'a';
                hdrs = hdrsDoubles;
                }
            }
        else {
            $(".revscore").show();
            $(".statsa").hide();
            $(".statspacer").hide();
            if ($(".revscore").text() == 'Reverse Loss Scores') {stdscores = true;}
            else if ($(".revscore").text() == 'Standard Scores') {stdscores = false;}
            else if ('reverse' in prefilters) {
                $(".revscore").html('Standard Scores');
                stdscores = false;
                }
            else {
                $(".revscore").html('Reverse Loss Scores');
                stdscores = true;
                }
            if (!$(".statso").hasClass('likelink')) {
                showstats = 'o';
                hdrs = hdrsServe;
                }
            else if (!$(".statsr").hasClass('likelink')) {
                showstats = 'r';
                hdrs = hdrsReturn;
                }
            else if (!$(".statsw").hasClass('likelink')) {
                showstats = 'w';
                hdrs = hdrsRaw;
                }
            else if (!$(".statsa").hasClass('likelink')) {
                $(".stattab").addClass('likelink');
                $(".statso").removeClass('likelink');
                showstats = 'o';
                hdrs = hdrsServe;
                }
            }
        }
    else {$("#abovestats").hide();}

    if (tabview == "results") {
        renderResults(stdscores, showstats, hdrs, defSort);
        }
    if (tabview == "head") {
        renderHeadToHeads(defSort);
        }  
    if (tabview == "events") {
        renderEvents(defSort);
        }     
    if (tabview == "doubles") {
        renderDoubles(stdscores, showstats, hdrs, defSort);
        }      

    $("#titleclick").click(function () {
        // reset all other filters?
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spanCareerqq").addClass('selected').addClass('spanselected');
        if ($("#roundhead").hasClass("closed")) {
            $("#roundhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".roundchoice").toggle();
            }
        $(".roundchoice").removeClass("selected").removeClass('roundselected');
        $("#round0").addClass('selected').addClass('roundselected');
        makeMatchTable({}, 0);
        })
    var paramsearchbox = "Find player";		
    $("#paramsearch").val(paramsearchbox);
    $("#paramsearch").focus(function() {
        if ($(this).val() == paramsearchbox) {$(this).val("");}
        var urlparams = getPermalinkParams();
        $( "#paramsearch" ).autocomplete({
                source: playerlist,
                minLength: 2,
                select: function(e, ui) {
                    var playerselect = ui.item.value;
                    var player = playerselect.slice(4);
                    var mw = playerselect.slice(1,2);
                    if (mw == 'M') {
                        var playerurl = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + player.replace(/ /g, '') + '&f=' + urlparams;
                        }
                    else {
                        var playerurl = 'https://www.tennisabstract.com/cgi-bin/wplayer.cgi?p=' + player.replace(/ /g, '') + '&f=' + urlparams;
                        }                        
                    window.open(playerurl, "_self");
                    }
            });
        });
        
    var pparams = getPermalinkParams();
    var new_path = 'https://www.tennisabstract.com/cgi-bin/player-classic.cgi?p=' + fullname.replace(/ /g, '') 
    if (pparams != '') {new_path = new_path + '&f=' + pparams;}
    history.pushState( {
        new_text: pparams,
        slug: new_path  
        }, null, new_path);
    //    }
    }

function makeMenus() {
    $('#footer').empty();
    if (!$('#tabDubs').hasClass("tablink") || view == "doubles") {
        var doubles = 1;
        }
    else {doubles = 0;}
    var $str = $('<table>').attr('class', 'menus');
    // partner first
    $str.append(
                $('<tr>').attr('id', 'partnerhead').attr('class', 'header closed') 
                        .append($('<th>').text(fourspaces + '\u00a0\u00a0' + 'Partner')
                        )
                )
    $spanspaces = $('<span>').text(fourspaces + fourspaces);
    $spaninput = $('<span>').append($('<input>').attr('id', 'partnersearch').css('width', '80'));
    $str.append(
                $('<tr>').attr('id', 'partnersearchrow').attr('class', 'partnerchoice inmenu') 
                        .append($('<td>').append($spanspaces).append($spaninput)
                        )
                )
    $str.append(
                $('<tr>').attr('id', 'partnerdef').attr('class', 'partnerselected partnerchoice selected inmenu menudefault')
                        .append($('<td>').text(fourspaces + fourspaces + 'All')
                                         )
                )
    // opponent
    $str.append(
                $('<tr>').attr('id', 'opphead').attr('class', 'header closed') 
                        .append($('<th>').text(fourspaces + '\u00a0\u00a0' + 'Opponent')
                        )
                )
    $spanspaces = $('<span>').text(fourspaces + fourspaces);
    $spaninput = $('<span>').append($('<input>').attr('id', 'oppsearch').css('width', '80'));
    $str.append(
                $('<tr>').attr('id', 'oppsearchrow').attr('class', 'oppchoice inmenu') 
                        .append($('<td>').append($spanspaces).append($spaninput)
                        )
                )
    $str.append(
                $('<tr>').attr('id', 'oppdef').attr('class', 'oppselected oppchoice selected inmenu menudefault')
                        .append($('<td>').text(fourspaces + fourspaces + 'All')
                                         )
                )
    // opp team 
    $str.append(
                $('<tr>').attr('id', 'oppteamhead').attr('class', 'header closed') 
                        .append($('<th>').text(fourspaces + '\u00a0\u00a0' + 'Opp Team')
                        )
                )
    $spanspaces = $('<span>').text(fourspaces + fourspaces);
    $spaninput = $('<span>').append($('<input>').attr('id', 'oppteamsearch').css('width', '80'));
    $str.append(
                $('<tr>').attr('id', 'oppteamsearchrow').attr('class', 'oppteamchoice inmenu') 
                        .append($('<td>').append($spanspaces).append($spaninput)
                        )
                )
    $str.append(
                $('<tr>').attr('id', 'oppteamdef').attr('class', 'oppteamselected oppteamchoice selected inmenu menudefault')
                        .append($('<td>').text(fourspaces + fourspaces + 'All')
                                         )
                )
    // beginning of h2h menu
    $str.append(
                $('<tr>').attr('id', 'h2hhead').attr('class', 'header closed') 
                        .append($('<th>').text(fourspaces + '\u00a0\u00a0' + 'Head-to-Head')
                        )
                )
    $spanspaces = $('<span>').text(fourspaces + fourspaces);
    $spaninput = $('<span>').append($('<input>').attr('id', 'h2hsearch').css('width', '80'));
    $str.append(
                $('<tr>').attr('id', 'h2hsearchrow').attr('class', 'h2hchoice inmenu') 
                        .append($('<td>').append($spanspaces).append($spaninput)
                        )
                )
    $str.append(
                $('<tr>').attr('id', 'h2hdef').attr('class', 'h2hselected h2hchoice selected inmenu menudefault')
                        .append($('<td>').text(fourspaces + fourspaces + 'All')
                                         )
                )
    // beginning of 'not' menu
    $str.append(
                $('<tr>').attr('id', 'nothead').attr('class', 'header closed') 
                        .append($('<th>').text(fourspaces + '\u00a0\u00a0' + 'Exclude Opp')
                        )
                )
    $spanspaces = $('<span>').text(fourspaces + fourspaces);
    $spaninput = $('<span>').append($('<input>').attr('id', 'notsearch').css('width', '80'));
    $str.append(
                $('<tr>').attr('id', 'notsearchrow').attr('class', 'notchoice inmenu') 
                        .append($('<td>').append($spanspaces).append($spaninput)
                        )
                )
    $str.append(
                $('<tr>').attr('id', 'notdef').attr('class', 'notselected notchoice selected inmenu menudefault')
                        .append($('<td>').text(fourspaces + fourspaces + 'None')
                                         )
                )
    for (j=0; j<filterlist.length; j++) {
        var filter = filterlist[j];
        var ftitle = filteropts[filter][0];
        var fhead = filter + 'head', fchoice = filter + 'choice', fselected = filter + 'selected';
        $str.append(
                    $('<tr>').attr('id', fhead).attr('class', 'header closed') 
                            .append($('<th>').text(fourspaces + '\u00a0\u00a0' + ftitle)
                            )
                    )
        $str.append(
                    $('<tr>').attr('id', filter + 'def').attr('class', fselected + ' ' + fchoice + ' selected inmenu menudefault')
                            .append($('<td>').text(fourspaces + fourspaces + filteropts[filter][1])
                                             )
                    )
        var flist = filteropts[filter].slice(2);
        for (i=0; i<flist.length; i++) {
            var $ent = $('<tr>').attr('class', 'inmenu ' + fchoice)
                                .append($('<td>').text(fourspaces + fourspaces + flist[i].replace(/ /g, '\u00a0'))
                                                 );
            if (filter in alphaFilters) {
                var adjtext = flist[i].replace(/ /g, '_');
                adjtext = adjtext.replace("'", 'xx');
                adjtext = adjtext.replace("+", 'xpx');
                $ent.attr('id', filter+adjtext+'qq');
                }
            else {$ent.attr('id', filter + i);}
            $str.append($ent);
            }
        //attempt at custom date ranges
        if (filter == 'span' || filter == 'rank') {
            if (filter == 'span' && (typeof tdates === 'undefined')) {}
            else if (filter == 'rank' && (typeof vranks === 'undefined')) {}
            else {
                var $ent = $('<tr>').attr('class', 'inmenu '+filter+'choice')
                                .append($('<td>').text(fourspaces + fourspaces + 'Custom')
                                                 );
                $ent.attr('id', filter+'Customqq');
                $str.append($ent);  
                }        
            }
        }
    $str.append($('<tr>').append($('<th>').append($('<span>').attr('class', 'menureset likelink').text('Reset'))))
    $str.append($('<tr>').append($('<td>').append($('<span>').html('&nbsp;'))))
    var filternote = '<i>Tip: Ctrl-Click to select multiple choices from the same menu.</i>'
    $str.append($('<tr>').append($('<td>').append($('<span>').html(filternote))))
    $('#footer').append($str);
    
    $("#h2hhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".h2hchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        if (choiceid != 'h2hsearchrow') {choiceClick(choiceid, 'h2h', ctrl);}
        });
    $("#nothead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".notchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        if (choiceid != 'notsearchrow') {choiceClick(choiceid, 'not', ctrl);}
        });
    $("#partnerhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".partnerchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        if (choiceid != 'partnersearchrow') {choiceClick(choiceid, 'partner', ctrl);}
        });
    $("#opphead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".oppchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        if (choiceid != 'oppsearchrow') {choiceClick(choiceid, 'opp', ctrl);}
        });
    $("#oppteamhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".oppteamchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        if (choiceid != 'oppteamsearchrow') {choiceClick(choiceid, 'oppteam', ctrl);}
        });
    $("#spanhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });       
    $(".spanchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'span', ctrl);
        });
    
    $("#surfacehead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".surfacechoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'surface', ctrl);
        });
    $("#levelhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".levelchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'level', ctrl);
        });
    $("#tourneyhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".tourneychoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'tourney', ctrl);
        });
    $("#roundhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".roundchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'round', ctrl);
        });
    $("#entryhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".entrychoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'entry', ctrl);
        });
    $("#rankhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".rankchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'rank', ctrl);
        });
    $("#oentryhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".oentrychoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'oentry', ctrl);
        });
    $("#handhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".handchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'hand', ctrl);
        });
    $("#handshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".handschoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'hands', ctrl);
        });
    $("#agehead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".agechoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'age', ctrl);
        });
    $("#heighthead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".heightchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'height', ctrl);
        });
    $("#countryhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".countrychoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'country', ctrl);
        });
    $("#resultshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".resultschoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'results', ctrl);
        });
    $("#setshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".setschoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'sets', ctrl);
        });
    $("#scoreshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".scoreschoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'scores', ctrl);
        });
    $("#asrankhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".asrankchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'asrank', ctrl);
        });
    $("#statshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $("#statsdef").click(function (event) { // if creating custom stat filters to later click again, need to change this to match other filters: .statschoice
        if (event.ctrlKey) {var ctrl=1;} // probably disable
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'stats', ctrl);
        });
    $("#extrashead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".extraschoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'extras', ctrl);
        });
    $("#minimumhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".minimumchoice").click(function (event) {
        //if (event.ctrlKey) {var ctrl=1;}
        //else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'minimum', 0); // only allow one selection
        }); 
    $("#minyearshead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".minyearschoice").click(function (event) {
        //if (event.ctrlKey) {var ctrl=1;}
        //else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'minyears', 0); // only allow one selection
        });         
    $("#crankhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".crankchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'crank', ctrl); // only allow one selection
        });  
    $("#prankhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".prankchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'prank', ctrl); // only allow one selection
        }); 
    $("#phandhead").click(function () {
        var choiceid = $(this).attr('id');
        fHeaderClick(choiceid);
        });
    $(".phandchoice").click(function (event) {
        if (event.ctrlKey) {var ctrl=1;}
        else {var ctrl=0;}
        var choiceid = $(this).attr('id')
        choiceClick(choiceid, 'phand', ctrl); // only allow one selection
        });               
    $("#spanCustomqq").click(function (event) {
        $("#spanstartrow").remove();
        // smarter way -- check if it exists, then build if not?
        var $s = $('<select />').attr('id', 'spanstart');
        $('<option />', {value: 'default', text: 'Start'}).appendTo($s);
        for (i=0; i<tdates.length; i++) {
            var showdate = tdates[i].slice(6) + '-' + months[tdates[i].slice(4,6)] + '-' + tdates[i].slice(0,4);
            $('<option />', {value: tdates[i], text: showdate}).appendTo($s);
            }
        $sspan = $('<span>').text(fourspaces + fourspaces);
        $std = $('<td>').append($sspan).append($s)
        $startrow = $('<tr>').attr('class', 'inmenu spanchoice').attr('id', 'spanstartrow').append($std);                                                     
        $("#spanCustomqq").after($startrow);
        $startrow.toggle();
        $('#spanstart').change(function() {
            $("#spanendrow").remove();
            startdate = $("#spanstart option:selected").val();
            var $t = $('<select />').attr('id', 'spanend');
            $('<option />', {value: 'default', text: 'End'}).appendTo($t);
            for (i=0; i<tdates.length; i++) {
                if (tdates[i] < startdate) {}
                else {
                    var showdate = tdates[i].slice(6) + '-' + months[tdates[i].slice(4,6)] + '-' + tdates[i].slice(0,4);
                    $('<option />', {value: tdates[i], text: showdate}).appendTo($t);
                    }
                }
            $espan = $('<span>').text(fourspaces + fourspaces);
            $etd = $('<td>').append($espan).append($t)    
            $endrow = $('<tr>').attr('class', 'inmenu spanchoice').attr('id', 'spanendrow').append($etd);
            $("#spanstartrow").after($endrow);
            $endrow.toggle();  
            $('#spanend').change(function() {
                //alert('end is changed');
                enddate = $("#spanend option:selected").val();
                makeMatchTable({}, 0);
                });      
            });
        });
    $("#rankCustomqq").click(function (event) {
        $("#rankstartrow").remove();
        // smarter way -- check if it exists, then build if not?
        var $s = $('<select />').attr('id', 'rankstart');
        $('<option />', {value: 'default', text: 'Max'}).appendTo($s);
        for (i=0; i<vranks.length; i++) {
            $('<option />', {value: vranks[i], text: vranks[i]}).appendTo($s);
            }
        $srank = $('<rank>').text(fourspaces + fourspaces);
        $srd = $('<td>').append($srank).append($s)
        $lowrow = $('<tr>').attr('class', 'inmenu rankchoice').attr('id', 'rankstartrow').append($srd);                                                     
        $("#rankCustomqq").after($lowrow);
        $lowrow.toggle();
        $('#rankstart').change(function() {
            $("#rankendrow").remove();
            lowrank = parseInt($("#rankstart option:selected").val());
            var $t = $('<select />').attr('id', 'rankend');
            $('<option />', {value: 'default', text: 'Min'}).appendTo($t);
            for (i=0; i<vranks.length; i++) {
                if (parseInt(vranks[i]) < lowrank) {}
                else {
                    $('<option />', {value: vranks[i], text: vranks[i]}).appendTo($t);
                    }
                }
            $erank = $('<rank>').text(fourspaces + fourspaces);
            $erd = $('<td>').append($erank).append($t)    
            $highrow = $('<tr>').attr('class', 'inmenu rankchoice').attr('id', 'rankendrow').append($erd);
            $("#rankstartrow").after($highrow);
            $highrow.toggle();  
            $('#rankend').change(function() {
                //alert('end is changed');
                highrank = parseInt($("#rankend option:selected").val());
                makeMatchTable({}, 0);
                });      
            });
        });
    $(".menureset").click(function () {
        resetFilters();
        // close open menus?
        makeMatchTable({}, 1);
        });
        
    var h2hsearchbox = "Add H2H";		
    $("#h2hsearch").val(h2hsearchbox);
    $("#h2hsearch").focus(function() {
        if ($(this).val() != '') {$(this).val("");}
        $( "#h2hsearch" ).autocomplete({
                source: ochoices,
                minLength: 2,
                select: function(e, ui) {setPlayerFilter(ui.item.value, 1, 0);}
            }) 
        });
    var notsearchbox = "Add NOT";		
    $("#notsearch").val(notsearchbox);
    $("#notsearch").focus(function() {
        if ($(this).val() != '') {$(this).val("");}
        $( "#notsearch" ).autocomplete({
                source: ochoices,
                minLength: 2,
                select: function(e, ui) {setNotPlayerFilter(ui.item.value, 1);}
            }) 
        });
    var partnersearchbox = "Add Partner";		
    $("#partnersearch").val(partnersearchbox);
    $("#partnersearch").focus(function() {
        if ($(this).val() != '') {$(this).val("");}
        $( "#partnersearch" ).autocomplete({
                source: pchoices,
                minLength: 2,
                select: function(e, ui) {setPartnerFilter(ui.item.value, 1, 0);}
            }) 
        });
    var oppsearchbox = "Add Opponent";		
    $("#oppsearch").val(oppsearchbox);
    $("#oppsearch").focus(function() {
        if ($(this).val() != '') {$(this).val("");}
        $( "#oppsearch" ).autocomplete({
                source: ochoices_dubs,
                minLength: 2,
                select: function(e, ui) {setOpponentFilter(ui.item.value, 1, 0);}
            }) 
        });
    var oppteamsearchbox = "Add Opp Team";		
    $("#oppteamsearch").val(oppteamsearchbox);
    $("#oppteamsearch").focus(function() {
        if ($(this).val() != '') {$(this).val("");}
        $( "#oppteamsearch" ).autocomplete({
                source: otchoices,
                minLength: 2,
                select: function(e, ui) {setOppteamFilter(ui.item.value, 1, 0);}
            }) 
        });
        
    var $s = $('<select />').attr('id', 'statcustomname');
    $('<option />', {value: 'default', text: 'Stat'}).appendTo($s);
    for (i=0; i<statlist.length; i++) {
        $('<option />', {value: statlist[i], text: statlist[i]}).appendTo($s);
        }
    $sspan = $('<span>').text(fourspaces + fourspaces);
    $std = $('<td>').append($sspan).append($s)
    $startrow = $('<tr>').attr('class', 'inmenu statschoice').attr('id', 'stats0').append($std);                                                     
    $('#statsdef').after($startrow);
    $('#statcustomname').change(function() {
        $("#stats0").addClass("selected").addClass("statsselected");
        $("#statsdef").removeClass("selected").removeClass("statsselected");        
        $("#statoperatorrow").remove();
        $("#statinputrow").remove();
        $("#statbuttonrow").remove(); 
        statchoice = $("#statcustomname option:selected").val();
        var $t = $('<select />').attr('id', 'statoperator');
        $('<option />', {value: 'default', text: 'Operator'}).appendTo($t);
        $('<option />', {value: 'ge', text: '>= at least'}).appendTo($t);
        $('<option />', {value: 'le', text: '<= up to'}).appendTo($t);
        $('<option />', {value: 'gt', text: '> more than'}).appendTo($t);
        $('<option />', {value: 'lt', text: '< less than'}).appendTo($t);
        $('<option />', {value: 'eq', text: '= equal to'}).appendTo($t);
        $espan = $('<span>').text(fourspaces + fourspaces);
        $etd = $('<td>').append($espan).append($t)    
        $endrow = $('<tr>').attr('class', 'inmenu statschoice').attr('id', 'statoperatorrow').append($etd);
        $("#stats0").after($endrow);
        $endrow.toggle();  
        $('#statoperatorrow').change(function() {
            $("#statinputrow").remove();
            $("#statbuttonrow").remove();
            statoperatorchoice = $("#statoperator option:selected").val();
            // text box for manual entry
            var $v = $('<input />').attr('type', 'text').attr('id', 'statinputbox').attr('value', '').attr('style', "width:50px;"); 
            $ispan = $('<span>').text(fourspaces + fourspaces);
            if (statchoice in statpercs) {
                $perc = $('<span>').text(' %');
                $itd = $('<td>').append($ispan).append($v).append($perc);
                }
            else if (statchoice == 'Time') {
                $timeEx = $('<span>').text(' (h:mm)');
                $itd = $('<td>').append($ispan).append($v).append($timeEx);
                }           
            else {$itd = $('<td>').append($ispan).append($v);}
            $inputrow = $('<tr>').attr('class', 'inmenu statschoice').attr('id', 'statinputrow').append($itd);
            $("#statoperatorrow").after($inputrow);
            $inputrow.toggle();                     
            // button 'apply'
            var $w = $('<input />').attr('type', 'submit').attr('value', 'Apply').attr('style', "width:50px;").attr('id', 'statapply');
            $bspan = $('<span>').text(fourspaces + fourspaces);
            $btd = $('<td>').append($bspan).append($w);
            $buttonrow = $('<tr>').attr('class', 'inmenu statschoice').attr('id', 'statbuttonrow').append($btd);
            $("#statinputrow").after($buttonrow);
            $buttonrow.toggle(); 
            $("#statapply").click(function (event) {
                statinput = $("#statinputbox").val();
                if (statchoice == 'Time') {
                    var hm = statinput.split(':');
                    // probably need some error handling for user input, esp e.g. :50 without hour number
                    statinput = parseInt(hm[0])*60 + parseInt(hm[1]);
                    }  
                makeMatchTable({}, 0);             
                });
            });
        });
    }

var alphaFilters = {'country': '', 'tourney': '', 'span': '', 'rank': ''};
//var alphaFilters = {};

var bhdict = {'1': 'one', '2': 'two'};

function insertPictureBio() {
    var plname = '<span style="fontsize:24px"><b>' + fullname + ' [' + country + ']</b></span>';
    if (typeof dob === 'undefined') {var birthdate = '';}
    else {
        var bd = dob.toString();
        var birthdate = 'Date of birth: ' + bd.slice(6) + '-' + months[bd.slice(4, 6)] + '-' + bd.slice(0, 4);
        }

    var pic_src = 'https://www.tennisabstract.com/photos/' + fullname.toLowerCase().replace(/ /g, "_") + '-' + photog + '.jpg'
    // background-color:d3d3d3; 
    var biotable = '<p id="biog"><table style="border-spacing:0"><tr><td><img src="' + pic_src + '" height="225" width="150"></td>'
    biotable = biotable + '<td>&nbsp;&nbsp;</td><td style="vertical-align:top">'
    biotable = biotable + '<table cellpadding=2 cellspacing=1><tr><td>' + plname + fourspaces + fourspaces + '</td></tr>';  

    if (typeof twitter != 'undefined' && twitter != "") {
        var tline = '<a href="https://twitter.com/' + twitter + '" target="_blank">@' + twitter + '</a>';
        biotable = biotable + '<tr><td>' + tline + '</td></tr>';
        }
    else {
        biotable = biotable + '<tr><td>&nbsp;</td></tr>'; 
        }

    biotable = biotable + '<tr><td>' + birthdate + '</td></tr>';
    var handed;
    if (hand == 'R') {handed = 'Plays: Right-handed';}
    else if (hand == 'L') {handed = 'Plays: Left-handed';}
    else {handed = '';}
    if (typeof backhand != 'undefined' && backhand != '') {handed = handed.slice(0,-7) + ' (' + bhdict[backhand] + '-handed backhand)';}
    if (handed != '') {
        biotable = biotable + '<tr><td>' + handed + '</td></tr>'; 
        }

    if (currentrank == '') {var crank = '';}
    else {var crank = 'Current rank: <b>'+currentrank.toString()+'</b>'}; 
    //if (typeof liverank != 'undefined' && liverank != '') {var lrank = '&nbsp;&nbsp;&nbsp;<a target="_blank" href="https://live-tennis.eu/"><i>Live: ' + liverank.toString() + '</i></a>';}
    //else {var lrank = '';} 
    var lrank = '';
    if (crank != '') {
        biotable = biotable + '<tr><td>' + crank + lrank + '</td></tr>'; 
        }  

    if (peakrank != 'UNR') {var prank = 'Peak rank: <b>' + peakrank.toString()+'</b>';}
    else {var prank = '';}
    if (peakfirst != '') {
    	var pf = peakfirst.toString();
    	prank = prank + ' (' + pf.slice(6) + '-' + months[pf.slice(4, 6)] + '-' + pf.slice(0, 4) + ')';
    	}
    if (prank != '') {
        biotable = biotable + '<tr><td>' + prank + '</td></tr>'; 
        } 
        
    // if (typeof current_dubs === 'undefined' || current_dubs == "" || current_dubs == "UNR") {
    //     if (!(typeof peak_dubs === 'undefined' || peak_dubs == "")) {
    //         var drank = "Doubles peak: <b>" + peak_dubs.toString() + '</b>'
    //         var pfd = peakfirst_dubs.toString();
    //         drank = drank + ' (' + pfd.slice(6) + '-' + months[pfd.slice(4, 6)] + '-' + pfd.slice(0, 4) + ')';
    //         }
    //     else {drank = "&nbsp;";}
    //     }
    // else {
    //     var drank = "Doubles rank: <b>" + current_dubs.toString() + '</b>&nbsp;|&nbsp;';
    //     drank = drank + 'Peak: <b>' + peak_dubs.toString() + '</b>'
    //     }
    var drank = "&nbsp;";
    biotable = biotable + '<tr><td>' + drank + '</td></tr>'; 
        
    var profiles = '';
    // if (typeof atp_id != 'undefined' && atp_id != "") {
    //     var atp_stem = "https://www.atpworldtour.com/en/players/";
    //     profiles = profiles + '<a href="' + atp_stem + atp_id + '/overview" target="_blank" title="Profile at atpworldtour.com">ATP</a> | ';
    //     }   
    // if (typeof itf_id != 'undefined' && itf_id != "") {
    //     var itf_stem = "https://www.itftennis.com/procircuit/players/player/profile.aspx?playerid=";
    //     profiles = profiles + '<a href="' + itf_stem + itf_id + '" target="_blank" title="Profile at the ITF website">ITF</a> | ';
    //     }
    // if (typeof dc_id != 'undefined' && dc_id != "") {
    //     var dc_stem = "https://www.daviscup.com/en/players/player.aspx?id=";
    //     profiles = profiles + '<a href="' + dc_stem + dc_id + '" target="_blank" title="Profile at Davis Cup website">DC</a> | ';
    //     }
    if (typeof wiki_id != 'undefined' && wiki_id != "") {
        var wiki_stem = "https://en.wikipedia.org/wiki/";
        profiles = profiles + '<a href="' + wiki_stem + wiki_id + '" target="_blank" title="Profile at Wikipedia">Wikipedia</a> | '  ;
        }
        
    if (profiles != '') {
        biotable = biotable + '<tr><td>Profile: ' + profiles.slice(0,-3) + '</td><td>&nbsp;</td></tr>';
        } 
    else {
        biotable = biotable + '<tr><td>&nbsp;</td></tr>'; 
        } 

    // if picture (and maybe in general) need to move ranking history link and titles/finals out of this box
    //var rhlink = '<a href="https://tennisabstract.herokuapp.com/ATP/RankHistory/' + fullname.replace(/ /g, "_") + '/YearEndDate/Points/">Ranking history and highlights</a>';
    var titlelink = '<span id="titleclick" class="likelink">Titles/Finals</span>';
    //biotable = biotable + '<tr><td>' + rhlink + '</td></tr><tr><td>' + titlelink + '</td></tr>';
    biotable = biotable + '<tr><td>' + titlelink + '</td></tr>';

    biotable = biotable + '<tr><td>' + '<i>Photo: <a target="_blank" href="' + photog_link + '">' + photog_credit + '</a></i></td></tr>';

    $("#bio").html(biotable + '</table></td><td>&nbsp;&nbsp;</td></tr></table></p>');
    }

function insertBio() {
    var plname = '<span style="fontsize:24px"><b>' + fullname + ' [' + country + ']</b></span>';
    if (typeof dob === 'undefined') {var birthdate = '';}
    else {
        var bd = dob.toString();
        var birthdate = 'Date of birth: ' + bd.slice(6) + '-' + months[bd.slice(4, 6)] + '-' + bd.slice(0, 4);
        }
    var handed;
    if (hand == 'R') {handed = 'Plays: Right-handed';}
    else if (hand == 'L') {handed = 'Plays: Left-handed';}
    else {handed = '';}
    if (typeof backhand != 'undefined' && backhand != '') {handed = handed.slice(0,-7) + ' (' + bhdict[backhand] + '-handed backhand)';}
    if (currentrank == '') {var crank = '';}
    else {var crank = 'Current rank: <b>'+currentrank.toString()+'</b>'}; 
    // if (typeof liverank != 'undefined' && liverank != '') {var lrank = '&nbsp;&nbsp;&nbsp;<a target="_blank" href="https://live-tennis.eu/"><i>Live: ' + liverank.toString() + '</i></a>';}
    // else {var lrank = '';}
    var lrank = '';
    if (peakrank != 'UNR') {var prank = 'Peak rank: <b>' + peakrank.toString()+'</b>';}
    else {var prank = '';}
    if (peakfirst != '') {
    	var pf = peakfirst.toString();
    	prank = prank + ' (' + pf.slice(6) + '-' + months[pf.slice(4, 6)] + '-' + pf.slice(0, 4) + ')';
    	}
    //if (typeof twitter != 'undefined' && twitter != "") {var tline = 'Twitter: <a href="https://twitter.com/' + twitter + '" target="_blank">@' + twitter + '</a>';}
    if (typeof twitter != 'undefined' && twitter != "") {var tline = '<a href="https://twitter.com/' + twitter + '" target="_blank">@' + twitter + '</a>';}
    else {var tline = '';}
    var biotable = '<p id="biog"><table cellpadding=1 cellspacing=1><tr><td>' + plname + fourspaces + fourspaces + '</td><td>' + tline + '</td></tr>';
    if (birthdate != '') {var rowtwo = '<tr><td>' + birthdate + fourspaces + fourspaces + '</td><td>' + handed + '</td></tr>';}
    else {var rowtwo = '<tr><td>' + handed + '</td><td>&nbsp;</td></tr>';}
    if (crank != '') {var rowthree = '<tr><td>' + crank + lrank + '</td><td>' + prank + '</td></tr>';}
    else {var rowthree = '<tr><td>' + prank + '</td><td>&nbsp;</td></tr>';}
    
    var profiles = '';
    // if (typeof atp_id != 'undefined' && atp_id != "") {
    //     var atp_stem = "https://www.atpworldtour.com/en/players/";
    //     profiles = profiles + '<a href="' + atp_stem + atp_id + '/overview" target="_blank" title="Profile at atpworldtour.com">ATP</a> | ';
    //     }   
    // if (typeof itf_id != 'undefined' && itf_id != "") {
    //     var itf_stem = "https://www.itftennis.com/procircuit/players/player/profile.aspx?playerid=";
    //     profiles = profiles + '<a href="' + itf_stem + itf_id + '" target="_blank" title="Profile at the ITF website">ITF</a> | ';
    //     }
    // if (typeof dc_id != 'undefined' && dc_id != "") {
    //     var dc_stem = "https://www.daviscup.com/en/players/player.aspx?id=";
    //     profiles = profiles + '<a href="' + dc_stem + dc_id + '" target="_blank" title="Profile at Davis Cup website">DC</a> | ';
    //     }
    if (typeof wiki_id != 'undefined' && wiki_id != "") {
        var wiki_stem = "https://en.wikipedia.org/wiki/";
        profiles = profiles + '<a href="' + wiki_stem + wiki_id + '" target="_blank" title="Profile at Wikipedia">Wikipedia</a> | '  ;
        }
        
    if (profiles != '') {
        var profile_row = '<tr><td>Profile: ' + profiles.slice(0,-3) + '</td><td>&nbsp;</td></tr>';
        } 
    else {var profile_row = '';}      

    var rhlink = '&nbsp;' // '<a href="https://tennisabstract.herokuapp.com/ATP/RankHistory/' + fullname.replace(/ /g, "_") + '/YearEndDate/Points/">Ranking history and highlights</a>';
    var titlelink = '<span id="titleclick" class="likelink">Titles/Finals</span>'
    var rowfour =  '<tr><td>' + titlelink + '</td><td>' + rhlink + '</td></tr>'; 
    $("#bio").html(biotable + rowtwo + rowthree + profile_row + rowfour + '</table></p>');
    }

function choiceClick(choiceid, filt, ctrl) {
    //var menudef = 0;
    // if click is on default -- shift doesn't matter, presets don't matter; select default and deselect others
    // (possible exception of 'span' menu?
    if (choiceid.slice(-3) == 'def') {
        $("." + filt + "choice").removeClass("selected").removeClass(filt + "selected");
        $('#' + choiceid).addClass("selected").addClass(filt + "selected");
        }
    // if click on choice that is already selected [shift doesn't matter]
    else if ($('#' + choiceid).hasClass('selected')) {
        // - if it's the only one, go back to default
        if ($('.' + filt + 'selected').length == 1) {
            $('#' + filt + 'def').addClass("selected").addClass(filt + "selected");
            }
        $('#' + choiceid).removeClass("selected").removeClass(filt + "selected");
        }
    // if choice not already selected, and shift, then select new choice
    else if (ctrl == 1) {
        $('#' + choiceid).addClass("selected").addClass(filt + "selected");
        }
    // choice not already selected, not shift: take away all, make this selection
    else {
        $("." + filt + "choice").removeClass("selected").removeClass(filt + "selected");
        $('#' + choiceid).addClass("selected").addClass(filt + "selected");
        }
    if (choiceid.slice(-8) == 'Customqq') {return;}
    makeMatchTable({}, 0);
    }

function setPlayerFilter(player, make, defSort) {
    $('.h2hchoice').removeClass('selected').removeClass('h2hselected');
    var playerid = '#' + 'h2h' + player.replace(/ /g, '');
    if ($(playerid).length == 0) { // new player to the list
        $newcell = $('<td>').text(fourspaces + fourspaces + player.replace(/ /g, '\u00a0'));
        $newrow = $('<tr>').attr('class', 'h2hselected h2hchoice selected inmenu').attr('id', playerid.slice(1));
        $newrow.append($newcell);
        $('#nothead').before($newrow);
        if ($('#h2hhead').hasClass('open')) {$newrow.toggle();}
        $(playerid).click(function () {
            //var choiceid = $(this).attr('id')
            if (event.ctrlKey) {var ctrl=1;}
            else {var ctrl=0;}
            choiceClick(playerid.slice(1), 'h2h', ctrl);
            });
        }
    else {$(playerid).addClass('selected').addClass('h2hselected');}
    //set time span to career
    if (make==1) {makeMatchTable({}, defSort);}
    }
    
function setPartnerFilter(player, make, defSort) {
    $('.partnerchoice').removeClass('selected').removeClass('partnerselected');
    var playerid = '#' + 'partner' + player.replace(/ /g, '');
    if ($(playerid).length == 0) { // new player to the list
        $newcell = $('<td>').text(fourspaces + fourspaces + player.replace(/ /g, '\u00a0'));
        $newrow = $('<tr>').attr('class', 'partnerselected partnerchoice selected inmenu').attr('id', playerid.slice(1));
        $newrow.append($newcell);
        $('#opphead').before($newrow);
        if ($('#partnerhead').hasClass('open')) {$newrow.toggle();}
        $(playerid).click(function () {
            //var choiceid = $(this).attr('id')
            if (event.ctrlKey) {var ctrl=1;}
            else {var ctrl=0;}
            choiceClick(playerid.slice(1), 'partner', ctrl);
            });
        }
    else {$(playerid).addClass('selected').addClass('partnerselected');}
    //set time span to career
    if (make==1) {makeMatchTable({}, defSort);}
    }
    
function setOpponentFilter(player, make, defSort) {
    $('.oppchoice').removeClass('selected').removeClass('oppselected');
    var playerid = '#' + 'opp' + player.replace(/ /g, '');
    if ($(playerid).length == 0) { // new player to the list
        $newcell = $('<td>').text(fourspaces + fourspaces + player.replace(/ /g, '\u00a0'));
        $newrow = $('<tr>').attr('class', 'oppselected oppchoice selected inmenu').attr('id', playerid.slice(1));
        $newrow.append($newcell);
        $('#oppteamhead').before($newrow);
        if ($('#opphead').hasClass('open')) {$newrow.toggle();}
        $(playerid).click(function () {
            //var choiceid = $(this).attr('id')
            if (event.ctrlKey) {var ctrl=1;}
            else {var ctrl=0;}
            choiceClick(playerid.slice(1), 'opp', ctrl);
            });
        }
    else {$(playerid).addClass('selected').addClass('oppselected');}
    //set time span to career
    if (make==1) {makeMatchTable({}, defSort);}
    }
    
function setOppteamFilter(player, make, defSort) {
    $('.oppteamchoice').removeClass('selected').removeClass('oppteamselected');
    var playerid = '#' + 'oppteam' + player.replace(/ /g, '');
    if ($(playerid).length == 0) { // new player to the list
        var slash_replace = '/<br/>' + fourspaces + "&nbsp;" + fourspaces
        $newcell = $('<td>').html(fourspaces + fourspaces + player.replace(/ /g, '\u00a0').replace('/', slash_replace));
        $newrow = $('<tr>').attr('class', 'oppteamselected oppteamchoice selected inmenu').attr('id', playerid.slice(1));
        $newrow.append($newcell);
        $('#spanhead').before($newrow);
        if ($('#oppteamhead').hasClass('open')) {$newrow.toggle();}
        $(playerid).click(function () {
            //var choiceid = $(this).attr('id')
            if (event.ctrlKey) {var ctrl=1;}
            else {var ctrl=0;}
            choiceClick(playerid.slice(1), 'oppteam', ctrl);
            });
        }
    else {$(playerid).addClass('selected').addClass('oppteamselected');}
    //set time span to career
    if (make==1) {makeMatchTable({}, defSort);}
    }

function setNotPlayerFilter(player, make) {
    $('.notchoice').removeClass('selected').removeClass('notselected');
    var playerid = '#' + 'not' + player.replace(/ /g, '');
    if ($(playerid).length == 0) { // new player to the list
        $newcell = $('<td>').text(fourspaces + fourspaces + player.replace(/ /g, '\u00a0'));
        $newrow = $('<tr>').attr('class', 'notselected notchoice selected inmenu').attr('id', playerid.slice(1));
        $newrow.append($newcell);
        $('#spanhead').before($newrow);
        if ($('#nothead').hasClass('open')) {$newrow.toggle();}
        $(playerid).click(function () {
            //var choiceid = $(this).attr('id')
            if (event.ctrlKey) {var ctrl=1;}
            else {var ctrl=0;}
            choiceClick(playerid.slice(1), 'not', ctrl);
            });
        }
    else {$(playerid).addClass('selected').addClass('notselected');}
    //set time span to career
    if (make==1) {makeMatchTable({}, 0);}
    }

function fHeaderClick(choiceid) {
    var filt = choiceid.slice(0, -4);
    $("." + filt + "choice").toggle();
    if ($("#" + filt + "head").hasClass("closed")) {$("#" + filt + "head").removeClass("closed").addClass("open");}
    else {$("#" + filt + "head").removeClass("open").addClass("closed");}
    if ($("." + filt + "choice").is(':visible') == false && $("#" + filt + "def").hasClass("selected") == false) {
        // check if default is selected
        $("#" + filt + "head").addClass("selected");
        }
    else {$("#" + filt + "head").removeClass("selected");}
    }
    
var defParams = ''    
window.onpopstate = function (event) {
    if (event.state == null) {
        var prefs = 0;
        for (pf in prefilters) {prefs += 1;}
        if (prefs == 0) {newPrefilters(defParams);}
        }
    else if (event.state.new_text.indexOf('.cgi') != -1) {
        newPrefilters(defParams);
        }
    else {
        //alert('event state '+event.state.slug);
        newPrefilters(event.state.new_text);
        new_text = event.state.new_text;
        }
    };
    
var startdate = '', enddate = '';
var lowrank = '', highrank = '';
var statchoice = '', statoperatorchoice = '', statinput = '';
var statlist = ['Dom Ratio', 'Ace Perc', 'DF Perc', '1st In', '1st WPc', '2nd WPc', 'BP Svd Pc', 'BP Saved', 'BPC Faced',
                    'Time', 'TPW', 'RPW', 'vAce Pc', 'v1st WPc', 'v2nd WPc', 'BP Cnv Pc', 'BP Conv', 'BP Chncs', 'Tot Pts',
                    'Aces', 'DFs', 'Sv Pts', '1Sv Pts', '2Sv Pts', 'vAces'];
var statpercs = {'Ace Perc': 1, 'DF Perc': 1, '1st In': 1, '1st WPc': 1, '2nd WPc': 1, 'BP Svd Pc': 1, 
                     'TPW': 1, 'RPW': 1, 'vAce Pc': 1, 'v1st WPc': 1, 'v2nd WPc': 1, 'BP Cnv Pc': 1}

$(document).ready(function() { 

    if (typeof navbar !== 'undefined') {
        $("#navbar").html(navbar);
        } 

    //var pparams = getPermalinkParams();
    var thisurl = window.location.href
    if (thisurl.indexOf('&') == -1) {var pparams = '';}
    else {var pparams = thisurl.slice(thisurl.indexOf('&')).replace("&f=", "");}
    //else {var pparams = '';}
    if (typeof(history.replaceState) !== "undefined") {
        history.replaceState({
           //old_text: old_text.val(),
           new_text: pparams,
           slug: location.pathname.replace("/", "")
        }, null, null);
    }

    if (typeof photog == 'undefined' || photog == '') {
        insertBio();
        }
    else {
        insertPictureBio();
        }

    // add chart agg link to span id="shotsHere"
    if (typeof chartagg != 'undefined' && chartagg == 1) {
        $ca_span = $('<span />').addClass('tablink').addClass('tabview');
        $ca_span.css('background-color', '#e6EEEE').css('position', 'relative').css('top', '5px');
        var ca_link = 'https://www.tennisabstract.com/charting/' + fullname.replace(/ /g, '') + '.html'
        var ihtml = '&nbsp;<b><a href="' + ca_link + '" target="_blank" style="text-decoration:none">Shot-by-Shot Stats</a></b>&nbsp;';
        $ca_span.html(ihtml);
        $("#shotsHere").append($ca_span);
        // $('<br />').insertBefore($ca_span);
        }
   
    // if (typeof playernews === 'undefined') {var pnewsrows = '';} //|| playernews == ''
    // else if (playernews == '') {var pnewsrows = '';}
    // else {
    //     var pnewsrows = '';
    //     for (j=0; j<playernews.length; j++) {
    //         pnewsrows = pnewsrows + '<br/>' + playernews[j];
    //         }
    //     if (playernews.length > 0) {pnewsrows = pnewsrows + '<br/>&nbsp;';}
    //     }

    // if (typeof upcoming === 'undefined') {var upcomingrow = '';}
    // else if (upcoming == '') {var upcomingrow = '';}
    // else {
    //     if (month < 10) {var udate = day + ' ' + months['0'+month+''];}
    //     else {var udate = day + ' ' + months[month+''];}
    //     var upcomingrow = '<br/><b>' + udate + '</b> Upcoming Tournaments: ' + upcoming;} // add date dynamically
    //     //if (pnewsrows == '') {pnewsrows = '<br/>&nbsp;';}
    // if (pnewsrows == '' && upcomingrow == '') {} //  && upcomingrow == ''
    // else {
    //     var newsanalysis = '<span style="background-color:#e6EEEE;"><b>News and Analysis</b></span>'
    //     var yourlinkhere = '<i><a href="https://tennisabstract.com/main/sitesubmit.html">your link here?</a></i>'
    //     var pnews = '&nbsp;<br/>' + newsanalysis + fourspaces + yourlinkhere + upcomingrow + pnewsrows; // upcomingrow + pnewsrows;
    //     $("#playernews").html(pnews);
    //     }
    
    if (typeof careerjs_dubs === 'undefined') {  
        // in case doubles data didn't load / doesn't exist  
        $("#tabDubs").hide();
        $("#tabDubsSpacer").hide();
        careerjs_dubs = 0;
        view = "";
        }        
    else if (view == "") {  // check ranks / peak ranks to see if should default to dubs view
        if (typeof currentrank === 'undefined' || currentrank == "" || currentrank == "UNR") {currentrank = 3000;}
        if (typeof peakrank === 'undefined' || peakrank == "") {peakrank = 3000;}
        if (typeof current_dubs === 'undefined' || current_dubs == "" || current_dubs == "UNR") {current_dubs = 3000;}
        if (typeof peak_dubs === 'undefined' || peak_dubs == "") {peak_dubs = 3000;}
        if (currentrank <= 50 || peakrank <= 10) {}
        else if (currentrank > (current_dubs * 5)) {view = "doubles";}
        else if (currentrank == "" && peakrank > (peak_dubs * 5)) {view = "doubles";}
        else if (currentrank == 3000 && peakrank > (peak_dubs * 5)) {view = "doubles";}
        // can do this server-side...
        }
    
    if (view == "doubles") {
        makeSplitsTable(doubles=1);
        prefilters['overview'] = 1; // default, show ranks and full names
        filteropts['span'] = ychoices_dubs;
        filteropts['tourney'] = tchoices_dubs;
        filteropts['asrank'] = rchoices_dubs;     
        }
    else {
        makeSplitsTable()
        }
    
//    if (typeof photog != 'undefined' && photog != '') {
//        $(".moresplits").toggle();
//        }
        
    makeMenus();

    applyPrefilters();
    $("#tabHead").click(function () {
        // if switching from doubles, change menus:
        if (!$('#tabDubs').hasClass("tablink")) {
            makeSplitsTable();
            //if (typeof photog != 'undefined' && photog != '') {
            //    $(".moresplits").toggle();
            //    }
            filteropts['span'] = ychoices;
            filteropts['tourney'] = tchoices;
            filteropts['asrank'] = rchoices;
            makeMenus();
            }
        $(".tabview").addClass("tablink");
        $("#tabHead").removeClass("tablink");
        resetFilters();
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spanCareerqq").addClass('selected').addClass('spanselected'); 
        // show all filters (heads + choices), then hide minimum
        $(".header").show();
        $("#h2hhead").hide();
        $(".h2hchoice").hide();
        $("#nothead").hide();
        $(".notchoice").hide();
        $("#minyearshead").hide(); 
        $(".minyearschoice").hide();
        $("#partnerhead").hide();
        $(".partnerchoice").hide();
        $("#opphead").hide();
        $(".oppchoice").hide();
        $("#oppteamhead").hide();
        $(".oppteamchoice").hide();
        $("#handshead").hide();
        $(".handschoice").hide(); 
        $("#prankhead").hide();
        $(".prankchoice").hide();
        $("#phandhead").hide();
        $(".phandchoice").hide();
        makeMatchTable({}, 1);
        })
    $("#tabEvents").click(function () {
        // if switching from doubles, change menus:
        if (!$('#tabDubs').hasClass("tablink")) {
            makeSplitsTable();
            filteropts['span'] = ychoices;
            filteropts['tourney'] = tchoices;
            filteropts['asrank'] = rchoices;
            makeMenus();
            }
        $(".tabview").addClass("tablink");
        $("#tabEvents").removeClass("tablink");
        resetFilters();
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spanCareerqq").addClass('selected').addClass('spanselected'); 
        // show all filters (heads + choices), then hide minimum
        $(".header").show();
        $("#h2hhead").hide();
        $(".h2hchoice").hide();
        $("#nothead").hide();
        $(".notchoice").hide();
        $("#partnerhead").hide();
        $(".partnerchoice").hide();
        $("#opphead").hide();
        $(".oppchoice").hide();
        $("#oppteamhead").hide();
        $(".oppteamchoice").hide();
        $("#handshead").hide();
        $(".handschoice").hide(); 
        $("#prankhead").hide();
        $(".prankchoice").hide();
        $("#phandhead").hide();
        $(".phandchoice").hide();
        makeMatchTable({}, 1);
        })        
    $("#tabResults").click(function () {
        // if switching from doubles, change menus:
        if (!$('#tabDubs').hasClass("tablink")) {
            makeSplitsTable();
            prefilters['overall'] = 1; // default, show serving stats
            filteropts['span'] = ychoices;
            filteropts['tourney'] = tchoices;
            filteropts['asrank'] = rchoices;
            makeMenus();
            }
        $(".tabview").addClass("tablink");
        $("#tabResults").removeClass("tablink");
        resetFilters();
        if ($("#spanhead").hasClass("closed")) {
            $("#spanhead").removeClass("closed").addClass("open") //.addClass("selected");
            $(".spanchoice").toggle();
            }
        $(".spanchoice").removeClass("selected").removeClass('spanselected');
        $("#spandef").addClass('selected').addClass('spanselected'); 
        // show all filters (heads + choices), then hide h2h, not ... more?
        $(".header").show();
        $("#minimumhead").hide(); 
        $(".minimumchoice").hide(); 
        $("#minyearshead").hide(); 
        $(".minyearschoice").hide();  
        $("#partnerhead").hide();
        $(".partnerchoice").hide();
        $("#opphead").hide();
        $(".oppchoice").hide();
        $("#oppteamhead").hide();
        $(".oppteamchoice").hide();
        $("#handshead").hide();
        $(".handschoice").hide();   
        $("#prankhead").hide();
        $(".prankchoice").hide();
        $("#phandhead").hide();
        $(".phandchoice").hide();  
        makeMatchTable({}, 1);
        })          
    $("#tabDubs").click(function () {
        prefilters['overview'] = 1; // default, show ranks and full names
        // switching from singles, so change menus:
        makeSplitsTable(doubles=1);
        filteropts['span'] = ychoices_dubs;
        filteropts['tourney'] = tchoices_dubs;
        filteropts['asrank'] = rchoices_dubs;
        makeMenus();
        $(".tabview").addClass("tablink");
        $("#tabDubs").removeClass("tablink");
        $(".header").show();
        $("#h2hhead").hide();
        $("#nothead").hide(); 
        $("#minimumhead").hide();
        $(".minimumchoice").hide();
        $("#minyearshead").hide();
        $(".minyearschoice").hide();
        $("#crankhead").hide();
        $(".crankchoice").hide();
        $("#handhead").hide();
        $(".handchoice").hide();	
        $("#agehead").hide();
        $(".agechoice").hide();
        $("#heighthead").hide();
        $(".heightchoice").hide();
        $("#countryhead").hide();
        $(".countrychoice").hide();      
        makeMatchTable({}, 1);
        })       
    $(".stattab").click(function () {
        $(".stattab").addClass("likelink");
        $(this).removeClass("likelink");
        makeMatchTable({}, 1);
        })
    $(".revscore").click(function () {
        hidePermalink();
        if ($(".revscore").text() == 'Reverse Loss Scores') {
            $(".revscore").html('Standard Scores');
            makeMatchTable({}, 0);
            }
        else {
            $(".revscore").html('Reverse Loss Scores');
            makeMatchTable({}, 0);
            }
        })
    if (careerjs == 1 && keep_loading == 1) {
        if (view != "doubles" && 'span' in prefilters && (prefilters['span'] != '1' && prefilters['span'] != '2')) {matchmx = matchmx.concat(morematchmx);}  
        else {
            var careerurl = 'https://www.minorleaguesplits.com/tennisabstract/cgi-bin/jsmatches/' + nameparam + 'Career.js';
            $.getScript(careerurl, function() {
                matchmx = matchmx.concat(morematchmx);
                })
            }
        }
    if (careerjs_dubs == 1 && keep_loading == 1) {
        if (view == "doubles" && 'span' in prefilters && (prefilters['span'] != '1' && prefilters['span'] != '2')) {matchmx_dubs = matchmx_dubs.concat(morematchmx_dubs);}  
        else {
            var careerurl = 'https://www.minorleaguesplits.com/tennisabstract/cgi-bin/jsdoubles/' + nameparam + 'Career.js';
            $.getScript(careerurl, function() {
                matchmx_dubs = matchmx_dubs.concat(morematchmx_dubs);
                })
            }
        }
    makeMatchTable({}, 0);
    $.getScript("https://www.tennisabstract.com/jquery.ui.core.js", function() {});
    $.getScript("https://www.tennisabstract.com/jquery.ui.position.js", function() {});
    $.getScript("https://www.tennisabstract.com/jquery.ui.widget.js", function() {});
    $.getScript("https://www.tennisabstract.com/mwplayerlist.js", function() {}); 
    $.getScript("https://www.tennisabstract.com/jquery.ui.autocomplete.js", function() {});    
    $('#playersearch').append($('<input>').attr('id', 'tags'));

    var searchbox = "Player Search";		
    $("#tags").val(searchbox);
    $("#tags").focus(function() {
        if ($(this).val() == searchbox) {$(this).val("");}
        $( "#tags" ).autocomplete({
                source: playerlist,
                minLength: 2,
                select: function(e, ui) {
                    var playerselect = ui.item.value;
                    var player = playerselect.slice(4);
                    var mw = playerselect.slice(1,2);
                    if (mw == 'M') {
                        var playerurl = 'https://www.tennisabstract.com/cgi-bin/player.cgi?p=' + player.replace(/ /g, '');
                        }
                    else {
                        var playerurl = 'https://www.tennisabstract.com/cgi-bin/wplayer.cgi?p=' + player.replace(/ /g, '');
                        }                        
                    window.open(playerurl, "_self");
                    }
            });
        }); 
    })

</script>
</head>
<body>

<div id="header">

<div id="navbar">
</div>

<table width=1240px>
<tr><td>&nbsp;</td><td>&nbsp;</td>
</tr>

<tr>
<td align="left" style="vertical-align:top"><span id="bio">&nbsp;</span>

<span id="tabResults" style="background-color:#e6EEEE;" class="tabview">&nbsp;<b>Singles Results</b>&nbsp;</span>&nbsp;
<span id="tabHead" style="background-color:#e6EEEE;" class="tablink tabview">&nbsp;<b>Head-to-Heads</b>&nbsp;</span>&nbsp;
<span id="tabEvents" style="background-color:#e6EEEE;" class="tablink tabview">&nbsp;<b>Event Records</b>&nbsp;</span>
<br/><span id="tabDubs" style="background-color:#e6EEEE; position:relative; top:5px" class="tablink tabview">&nbsp;<b>Doubles Results</b>&nbsp;</span><span id="tabDubsSpacer">&nbsp;&nbsp;</span>
<span id="shotsHere">
</span>
</td>
<td id="wonloss" align="right" style="vertical-align:top">&nbsp;</td>
</tr>
<tr>
<td id="tabmenu" align="left" style="vertical-align:top">
&nbsp;
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td colspan=2 id="playernews">&nbsp;</td>
</tr>
</tr></table>
</div>

<div id="main">

<table width="1240px" id="maintable">
<tr id="tabletoggles">
<td>&nbsp;</td>
<td id="tablelabel">&nbsp;</td>
<td id="abovestats" class="abovestats" align="right">
&nbsp;&nbsp;&nbsp;<span class="revscore likelink"></span>
&nbsp;&nbsp;&nbsp;<b>Stats:</b>&nbsp;
<span class="statsa stattab">Overview</span><span class="statspacer">&nbsp;|&nbsp;</span><span class="statso stattab">Serve</span>&nbsp;|&nbsp;<span class="statsr stattab likelink">Return</span>&nbsp;|&nbsp;<span class="statsw stattab likelink">Raw</span>
</td></tr>
<tr>
<td id="footer" class="footer">&nbsp;</td>
<td colspan="2" id="stats" class="stats"><table id="matches"></table></td>
</tr>
<tr>
<td id="belowmenus">&nbsp;<br/>&nbsp;<br/>&nbsp;<br/>&nbsp;<br/>&nbsp;</td>
<td colspan="2" id="belowmatches">&nbsp;</td>
</tr>
</table></div>
</div>

</body>

